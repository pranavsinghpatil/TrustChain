{"id":"43e2fa8ea5176b68c6b9136448fac50c","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"src/contracts/AdminManagement.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract AdminManagement is Ownable {\n    using Strings for uint256;\n\n    // Events\n    event OfficerAppointed(address indexed officer, string name);\n    event OfficerRemoved(address indexed officer);\n    event OfficerPermissionsUpdated(address indexed officer, bool canCreate, bool canApprove);\n\n    // Constructor\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    // Officer struct\n    struct Officer {\n        string name;\n        bool canCreateTenders;\n        bool canApproveBids;\n        bool isActive;\n    }\n\n    // Mapping of officers\n    mapping(address => Officer) public officers;\n    address[] public officerList;\n\n    // Modifier to check if caller is an officer\n    modifier onlyOfficer() {\n        require(officers[msg.sender].isActive, \"Caller is not an officer\");\n        _;\n    }\n\n    // Modifier to check if caller has specific permission\n    modifier onlyWithPermission(bool createPermission, bool approvePermission) {\n        require(\n            officers[msg.sender].canCreateTenders == createPermission &&\n            officers[msg.sender].canApproveBids == approvePermission,\n            \"Caller does not have required permissions\"\n        );\n        _;\n    }\n\n    // Appoint a new officer\n    function appointOfficer(\n        address _officerAddress,\n        string memory _name,\n        bool _canCreateTenders,\n        bool _canApproveBids\n    ) public onlyOwner {\n        require(_officerAddress != address(0), \"Invalid address\");\n        require(!officers[_officerAddress].isActive, \"Officer already exists\");\n\n        officers[_officerAddress] = Officer(\n            _name,\n            _canCreateTenders,\n            _canApproveBids,\n            true\n        );\n        officerList.push(_officerAddress);\n\n        emit OfficerAppointed(_officerAddress, _name);\n    }\n\n    // Remove an officer\n    function removeOfficer(address _officerAddress) public onlyOwner {\n        require(officers[_officerAddress].isActive, \"Officer does not exist\");\n        \n        officers[_officerAddress].isActive = false;\n        emit OfficerRemoved(_officerAddress);\n    }\n\n    // Update officer permissions\n    function updateOfficerPermissions(\n        address _officerAddress,\n        bool _canCreateTenders,\n        bool _canApproveBids\n    ) public onlyOwner {\n        require(officers[_officerAddress].isActive, \"Officer does not exist\");\n        \n        officers[_officerAddress].canCreateTenders = _canCreateTenders;\n        officers[_officerAddress].canApproveBids = _canApproveBids;\n        \n        emit OfficerPermissionsUpdated(\n            _officerAddress,\n            _canCreateTenders,\n            _canApproveBids\n        );\n    }\n\n    // Get all active officers\n    function getActiveOfficers() public view returns (address[] memory) {\n        uint256 count = 0;\n        for (uint256 i = 0; i < officerList.length; i++) {\n            if (officers[officerList[i]].isActive) {\n                count++;\n            }\n        }\n\n        address[] memory activeOfficers = new address[](count);\n        uint256 index = 0;\n        for (uint256 i = 0; i < officerList.length; i++) {\n            if (officers[officerList[i]].isActive) {\n                activeOfficers[index] = officerList[i];\n                index++;\n            }\n        }\n        return activeOfficers;\n    }\n\n    // Get officer details\n    function getOfficer(address _officerAddress) public view returns (Officer memory) {\n        return officers[_officerAddress];\n    }\n}\n"},"src/contracts/BidManagement.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract BidManagement is Ownable {\n    using Strings for uint256;\n\n    // Events\n    event BidFeedbackGiven(uint256 indexed tenderId, uint256 indexed bidIndex, string feedback);\n    event BidModificationRequested(uint256 indexed tenderId, uint256 indexed bidIndex, string modifications);\n    event BidModified(uint256 indexed tenderId, uint256 indexed bidIndex, uint256 newAmount, string newDescription);\n    event BidRejectedWithReason(uint256 indexed tenderId, uint256 indexed bidIndex, string reason);\n    event BidSubmitted(uint256 indexed tenderId, uint256 indexed bidIndex, address bidder, uint256 amount);\n\n    // Constructor\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    // Bid status enum\n    enum BidStatus {\n        PENDING,\n        APPROVED,\n        REJECTED,\n        MODIFIED,\n        MODIFICATION_REQUESTED\n    }\n\n    // Bid struct\n    struct Bid {\n        uint256 tenderId;\n        address bidderAddress;\n        uint256 amount;\n        string description;\n        uint256 submittedAt;\n        BidStatus status;\n        string feedback;\n        string modificationRequest;\n        string rejectionReason;\n    }\n\n    // Mapping of bids\n    mapping(uint256 => mapping(uint256 => Bid)) public bids;\n    mapping(uint256 => uint256) public bidCounts;\n\n    // Tender information\n    struct Tender {\n        address officerAddress;\n        bool isActive;\n        uint256 deadline;\n    }\n\n    // Mapping of tenders\n    mapping(uint256 => Tender) public tenders;\n\n    // Modifier to check if caller is tender officer\n    modifier onlyTenderOfficer(uint256 _tenderId) {\n        require(tenders[_tenderId].officerAddress == msg.sender, \"Caller is not tender officer\");\n        _;\n    }\n\n    // Modifier to check if bid exists\n    modifier bidExists(uint256 _tenderId, uint256 _bidIndex) {\n        require(_bidIndex < bidCounts[_tenderId], \"Bid does not exist\");\n        _;\n    }\n\n    // Give feedback on a bid\n    function giveBidFeedback(\n        uint256 _tenderId,\n        uint256 _bidIndex,\n        string memory _feedback\n    ) public onlyTenderOfficer(_tenderId) bidExists(_tenderId, _bidIndex) {\n        require(bids[_tenderId][_bidIndex].status == BidStatus.PENDING, \"Bid not in pending state\");\n        \n        bids[_tenderId][_bidIndex].feedback = _feedback;\n        emit BidFeedbackGiven(_tenderId, _bidIndex, _feedback);\n    }\n\n    // Request bid modification\n    function requestBidModification(\n        uint256 _tenderId,\n        uint256 _bidIndex,\n        string memory _modifications\n    ) public onlyTenderOfficer(_tenderId) bidExists(_tenderId, _bidIndex) {\n        require(bids[_tenderId][_bidIndex].status == BidStatus.PENDING, \"Bid not in pending state\");\n        \n        bids[_tenderId][_bidIndex].status = BidStatus.MODIFICATION_REQUESTED;\n        bids[_tenderId][_bidIndex].modificationRequest = _modifications;\n        \n        emit BidModificationRequested(_tenderId, _bidIndex, _modifications);\n    }\n\n    // Modify bid (by bidder)\n    function modifyBid(\n        uint256 _tenderId,\n        uint256 _bidIndex,\n        uint256 _newAmount,\n        string memory _newDescription\n    ) public bidExists(_tenderId, _bidIndex) {\n        require(bids[_tenderId][_bidIndex].bidderAddress == msg.sender, \"Not authorized to modify this bid\");\n        require(bids[_tenderId][_bidIndex].status == BidStatus.MODIFICATION_REQUESTED, \"Bid not in modification requested state\");\n        \n        bids[_tenderId][_bidIndex].amount = _newAmount;\n        bids[_tenderId][_bidIndex].description = _newDescription;\n        bids[_tenderId][_bidIndex].status = BidStatus.MODIFIED;\n        \n        emit BidModified(_tenderId, _bidIndex, _newAmount, _newDescription);\n    }\n\n    // Reject bid with reason\n    function rejectBid(\n        uint256 _tenderId,\n        uint256 _bidIndex,\n        string memory _reason\n    ) public onlyTenderOfficer(_tenderId) bidExists(_tenderId, _bidIndex) {\n        require(bids[_tenderId][_bidIndex].status == BidStatus.PENDING || bids[_tenderId][_bidIndex].status == BidStatus.MODIFIED, \"Bid already processed\");\n        \n        bids[_tenderId][_bidIndex].status = BidStatus.REJECTED;\n        bids[_tenderId][_bidIndex].rejectionReason = _reason;\n        \n        emit BidRejectedWithReason(_tenderId, _bidIndex, _reason);\n    }\n\n    // Submit new bid\n    function submitBid(\n        uint256 _tenderId,\n        uint256 _amount,\n        string memory _description\n    ) public {\n        require(tenders[_tenderId].isActive, \"Tender is not active\");\n        require(block.timestamp <= tenders[_tenderId].deadline, \"Tender deadline passed\");\n        \n        bidCounts[_tenderId]++;\n        uint256 bidIndex = bidCounts[_tenderId] - 1;\n        \n        bids[_tenderId][bidIndex] = Bid(\n            _tenderId,\n            msg.sender,\n            _amount,\n            _description,\n            block.timestamp,\n            BidStatus.PENDING,\n            \"\",\n            \"\",\n            \"\"\n        );\n        \n        emit BidSubmitted(_tenderId, bidIndex, msg.sender, _amount);\n    }\n\n    // View functions\n    function getBid(\n        uint256 _tenderId,\n        uint256 _bidIndex\n    ) public view returns (Bid memory) {\n        return bids[_tenderId][_bidIndex];\n    }\n\n    function getBidsForTender(uint256 _tenderId) public view returns (Bid[] memory) {\n        Bid[] memory allBids = new Bid[](bidCounts[_tenderId]);\n        for (uint256 i = 0; i < bidCounts[_tenderId]; i++) {\n            allBids[i] = bids[_tenderId][i];\n        }\n        return allBids;\n    }\n\n    function getBidsForUser(address _user) public view returns (Bid[] memory) {\n        uint256 count = 0;\n        for (uint256 i = 1; i <= bidCounts[0]; i++) {\n            if (bids[0][i-1].bidderAddress == _user) {\n                count++;\n            }\n        }\n\n        Bid[] memory userBids = new Bid[](count);\n        uint256 index = 0;\n        for (uint256 i = 1; i <= bidCounts[0]; i++) {\n            if (bids[0][i-1].bidderAddress == _user) {\n                userBids[index] = bids[0][i-1];\n                index++;\n            }\n        }\n        return userBids;\n    }\n}\n"},"src/contracts/Database.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\n\ncontract Database is Ownable {\n    using Strings for uint256;\n\n    // Constructor\n    constructor(address initialOwner) Ownable(initialOwner) {}\n\n    // User roles\n    enum UserRole {\n        ADMIN,\n        OFFICER,\n        BIDDER\n    }\n\n    // User struct\n    struct User {\n        string name;\n        string username;\n        string email;\n        address walletAddress;\n        UserRole role;\n        bool isApproved;\n        string approvalRemark;\n        uint256 createdAt;\n    }\n\n    // Tender struct\n    struct Tender {\n        uint256 id;\n        string title;\n        string description;\n        uint256 budget;\n        uint256 deadline;\n        address officerAddress;\n        bool isActive;\n        uint256 createdAt;\n    }\n\n    // Bid struct\n    struct Bid {\n        uint256 tenderId;\n        address bidderAddress;\n        uint256 amount;\n        string description;\n        uint256 submittedAt;\n    }\n\n    // Mappings\n    mapping(address => User) public users;\n    mapping(string => bool) public usernames;\n    mapping(uint256 => Tender) public tenders;\n    mapping(uint256 => Bid[]) public bids;\n    uint256 public tenderCount;\n\n    // Events\n    event UserRegistered(address indexed user, string username, UserRole role);\n    event UserApproved(address indexed user, string username, bool approved);\n    event TenderCreated(uint256 indexed id, string title, address officer);\n    event BidSubmitted(uint256 indexed tenderId, address indexed bidder, uint256 amount);\n\n    // User management\n    function registerUser(\n        string memory _name,\n        string memory _username,\n        string memory _email,\n        UserRole _role\n    ) public {\n        require(!usernames[_username], \"Username already exists\");\n        require(users[msg.sender].walletAddress == address(0), \"User already registered\");\n\n        users[msg.sender] = User(\n            _name,\n            _username,\n            _email,\n            msg.sender,\n            _role,\n            false,\n            \"\",\n            block.timestamp\n        );\n        usernames[_username] = true;\n\n        emit UserRegistered(msg.sender, _username, _role);\n    }\n\n    function approveUser(address _user, bool _approved, string memory _remark) public onlyOwner {\n        require(users[_user].walletAddress != address(0), \"User not registered\");\n        \n        users[_user].isApproved = _approved;\n        users[_user].approvalRemark = _remark;\n\n        emit UserApproved(_user, users[_user].username, _approved);\n    }\n\n    // Tender management\n    function createTender(\n        string memory _title,\n        string memory _description,\n        uint256 _budget,\n        uint256 _deadline\n    ) public {\n        require(users[msg.sender].role == UserRole.OFFICER, \"Only officers can create tenders\");\n        require(users[msg.sender].isApproved, \"User not approved\");\n\n        tenderCount++;\n        tenders[tenderCount] = Tender(\n            tenderCount,\n            _title,\n            _description,\n            _budget,\n            _deadline,\n            msg.sender,\n            true,\n            block.timestamp\n        );\n\n        emit TenderCreated(tenderCount, _title, msg.sender);\n    }\n\n    function submitBid(\n        uint256 _tenderId,\n        uint256 _amount,\n        string memory _description\n    ) public {\n        require(tenders[_tenderId].isActive, \"Tender is not active\");\n        require(block.timestamp <= tenders[_tenderId].deadline, \"Tender deadline passed\");\n        require(users[msg.sender].role == UserRole.BIDDER, \"Only bidders can submit bids\");\n        require(users[msg.sender].isApproved, \"User not approved\");\n\n        bids[_tenderId].push(Bid(\n            _tenderId,\n            msg.sender,\n            _amount,\n            _description,\n            block.timestamp\n        ));\n\n        emit BidSubmitted(_tenderId, msg.sender, _amount);\n    }\n\n    // View functions\n    function getUser(address _user) public view returns (User memory) {\n        return users[_user];\n    }\n\n    function getTender(uint256 _id) public view returns (Tender memory) {\n        return tenders[_id];\n    }\n\n    function getBids(uint256 _tenderId) public view returns (Bid[] memory) {\n        return bids[_tenderId];\n    }\n\n    function getActiveTenders() public view returns (Tender[] memory) {\n        uint256 count = 0;\n        for (uint256 i = 1; i <= tenderCount; i++) {\n            if (tenders[i].isActive) {\n                count++;\n            }\n        }\n\n        Tender[] memory activeTenders = new Tender[](count);\n        uint256 index = 0;\n        for (uint256 i = 1; i <= tenderCount; i++) {\n            if (tenders[i].isActive) {\n                activeTenders[index] = tenders[i];\n                index++;\n            }\n        }\n        return activeTenders;\n    }\n}\n"},"src/contracts/OfficerManagement.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title OfficerManagement\n * @dev Contract for managing tender officers in the TrustChain system\n */\ncontract OfficerManagement {\n    address public admin;\n    \n    struct Officer {\n        string id;\n        string name;\n        string username;\n        string email;\n        bool isActive;\n        uint256 createdAt;\n    }\n    \n    // Mapping from wallet address to officer data\n    mapping(address => Officer) public officers;\n    \n    // Array to store all officer addresses for enumeration\n    address[] public officerAddresses;\n    \n    // Mapping from username to boolean to check if username exists\n    mapping(string => bool) public usernameExists;\n    \n    // Events\n    event OfficerAdded(address indexed walletAddress, string id, string name, string username);\n    event OfficerUpdated(address indexed walletAddress, string name, string username);\n    event OfficerRemoved(address indexed walletAddress, string id);\n    event OfficerStatusChanged(address indexed walletAddress, bool isActive);\n    \n    // Modifiers\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin can call this function\");\n        _;\n    }\n    \n    modifier officerExists(address walletAddress) {\n        require(bytes(officers[walletAddress].id).length > 0, \"Officer does not exist\");\n        _;\n    }\n    \n    constructor() {\n        admin = msg.sender;\n    }\n    \n    /**\n     * @dev Add a new officer\n     * @param walletAddress The officer's wallet address\n     * @param id Unique identifier for the officer\n     * @param name Officer's name\n     * @param username Officer's username\n     * @param email Officer's email\n     */\n    function addOfficer(\n        address walletAddress,\n        string memory id,\n        string memory name,\n        string memory username,\n        string memory email\n    ) public onlyAdmin {\n        require(bytes(officers[walletAddress].id).length == 0, \"Officer already exists for this address\");\n        require(!usernameExists[username], \"Username already exists\");\n        \n        officers[walletAddress] = Officer({\n            id: id,\n            name: name,\n            username: username,\n            email: email,\n            isActive: true,\n            createdAt: block.timestamp\n        });\n        \n        officerAddresses.push(walletAddress);\n        usernameExists[username] = true;\n        \n        emit OfficerAdded(walletAddress, id, name, username);\n    }\n    \n    /**\n     * @dev Update an existing officer's details\n     * @param walletAddress The officer's wallet address\n     * @param name New name\n     * @param username New username\n     * @param email New email\n     */\n    function updateOfficer(\n        address walletAddress,\n        string memory name,\n        string memory username,\n        string memory email\n    ) public onlyAdmin officerExists(walletAddress) {\n        string memory currentUsername = officers[walletAddress].username;\n        \n        // If username is being changed, check if new username exists\n        if (keccak256(bytes(currentUsername)) != keccak256(bytes(username))) {\n            require(!usernameExists[username], \"Username already exists\");\n            usernameExists[currentUsername] = false;\n            usernameExists[username] = true;\n        }\n        \n        officers[walletAddress].name = name;\n        officers[walletAddress].username = username;\n        officers[walletAddress].email = email;\n        \n        emit OfficerUpdated(walletAddress, name, username);\n    }\n    \n    /**\n     * @dev Remove an officer\n     * @param walletAddress The officer's wallet address\n     */\n    function removeOfficer(address walletAddress) public onlyAdmin officerExists(walletAddress) {\n        string memory username = officers[walletAddress].username;\n        string memory id = officers[walletAddress].id;\n        \n        // Remove from username mapping\n        usernameExists[username] = false;\n        \n        // Remove from addresses array\n        for (uint i = 0; i < officerAddresses.length; i++) {\n            if (officerAddresses[i] == walletAddress) {\n                // Replace with the last element and pop\n                officerAddresses[i] = officerAddresses[officerAddresses.length - 1];\n                officerAddresses.pop();\n                break;\n            }\n        }\n        \n        // Delete officer data\n        delete officers[walletAddress];\n        \n        emit OfficerRemoved(walletAddress, id);\n    }\n    \n    /**\n     * @dev Change officer active status\n     * @param walletAddress The officer's wallet address\n     * @param isActive New active status\n     */\n    function setOfficerStatus(address walletAddress, bool isActive) public onlyAdmin officerExists(walletAddress) {\n        officers[walletAddress].isActive = isActive;\n        emit OfficerStatusChanged(walletAddress, isActive);\n    }\n    \n    /**\n     * @dev Get officer details\n     * @param walletAddress The officer's wallet address\n     * @return id Officer ID\n     * @return name Officer name\n     * @return username Officer username\n     * @return email Officer email\n     * @return isActive Officer active status\n     * @return createdAt Officer creation timestamp\n     */\n    function getOfficer(address walletAddress) public view returns (\n        string memory id,\n        string memory name,\n        string memory username,\n        string memory email,\n        bool isActive,\n        uint256 createdAt\n    ) {\n        Officer memory officer = officers[walletAddress];\n        return (\n            officer.id,\n            officer.name,\n            officer.username,\n            officer.email,\n            officer.isActive,\n            officer.createdAt\n        );\n    }\n    \n    /**\n     * @dev Check if an address is an officer\n     * @param walletAddress The wallet address to check\n     * @return true if the address is an officer\n     */\n    function isOfficer(address walletAddress) public view returns (bool) {\n        return bytes(officers[walletAddress].id).length > 0;\n    }\n    \n    /**\n     * @dev Get the total number of officers\n     * @return The number of officers\n     */\n    function getOfficerCount() public view returns (uint256) {\n        return officerAddresses.length;\n    }\n    \n    /**\n     * @dev Get all officer addresses\n     * @return Array of all officer addresses\n     */\n    function getAllOfficerAddresses() public view returns (address[] memory) {\n        return officerAddresses;\n    }\n    \n    /**\n     * @dev Transfer admin rights to a new address\n     * @param newAdmin The new admin address\n     */\n    function transferAdmin(address newAdmin) public onlyAdmin {\n        require(newAdmin != address(0), \"Invalid address\");\n        admin = newAdmin;\n    }\n}\n"},"src/contracts/TenderManagement.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title TenderManagement\n * @dev Contract for managing tenders in the TrustChain system\n */\ncontract TenderManagement {\n    address public admin;\n    \n    struct Tender {\n        string id;\n        string title;\n        string description;\n        uint256 estimatedValue;\n        uint256 startDate;\n        uint256 endDate;\n        address createdBy; // Officer who created the tender\n        TenderStatus status;\n        uint256 createdAt;\n        string category;\n        string department;\n        string location;\n        string[] documents; // IPFS hashes of tender documents\n    }\n    \n    struct Bid {\n        string id;\n        string tenderId;\n        address bidder;\n        uint256 bidAmount;\n        uint256 submittedAt;\n        BidStatus status;\n        string[] documents; // IPFS hashes of bid documents\n    }\n    \n    enum TenderStatus { Draft, Published, Closed, Awarded, Cancelled }\n    enum BidStatus { Submitted, Shortlisted, Rejected, Awarded }\n    \n    // Mapping from tender ID to tender data\n    mapping(string => Tender) public tenders;\n    \n    // Array to store all tender IDs for enumeration\n    string[] public tenderIds;\n    \n    // Mapping from bid ID to bid data\n    mapping(string => Bid) public bids;\n    \n    // Mapping from tender ID to bid IDs for that tender\n    mapping(string => string[]) public tenderBids;\n    \n    // Mapping from user address to bid IDs they've submitted\n    mapping(address => string[]) public userBids;\n    \n    // Events\n    event TenderCreated(string tenderId, string title, address createdBy);\n    event TenderUpdated(string tenderId, string title, TenderStatus status);\n    event TenderStatusChanged(string tenderId, TenderStatus status);\n    event BidSubmitted(string bidId, string tenderId, address bidder, uint256 bidAmount);\n    event BidStatusChanged(string bidId, string tenderId, BidStatus status);\n    \n    // Modifiers\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"Only admin can call this function\");\n        _;\n    }\n    \n    modifier onlyOfficer() {\n        // This should check if the sender is an officer\n        // In a real implementation, this would check against the UserAuthentication contract\n        // For now, we'll just check if it's the admin\n        require(msg.sender == admin, \"Only officers can call this function\");\n        _;\n    }\n    \n    modifier tenderExists(string memory tenderId) {\n        require(tenders[tenderId].createdAt > 0, \"Tender does not exist\");\n        _;\n    }\n    \n    modifier bidExists(string memory bidId) {\n        require(bids[bidId].submittedAt > 0, \"Bid does not exist\");\n        _;\n    }\n    \n    constructor() {\n        admin = msg.sender;\n    }\n    \n    /**\n     * @dev Create a new tender\n     * @param tenderId Unique identifier for the tender\n     * @param title Tender title\n     * @param description Tender description\n     * @param estimatedValue Estimated value of the tender\n     * @param startDate Start date of the tender\n     * @param endDate End date of the tender\n     * @param category Tender category\n     * @param department Department issuing the tender\n     * @param location Location of the tender\n     * @param documents IPFS hashes of tender documents\n     */\n    function createTender(\n        string memory tenderId,\n        string memory title,\n        string memory description,\n        uint256 estimatedValue,\n        uint256 startDate,\n        uint256 endDate,\n        string memory category,\n        string memory department,\n        string memory location,\n        string[] memory documents\n    ) public onlyOfficer {\n        require(tenders[tenderId].createdAt == 0, \"Tender ID already exists\");\n        require(startDate < endDate, \"Start date must be before end date\");\n        \n        tenders[tenderId] = Tender({\n            id: tenderId,\n            title: title,\n            description: description,\n            estimatedValue: estimatedValue,\n            startDate: startDate,\n            endDate: endDate,\n            createdBy: msg.sender,\n            status: TenderStatus.Draft,\n            createdAt: block.timestamp,\n            category: category,\n            department: department,\n            location: location,\n            documents: documents\n        });\n        \n        tenderIds.push(tenderId);\n        \n        emit TenderCreated(tenderId, title, msg.sender);\n    }\n    \n    /**\n     * @dev Update an existing tender\n     * @param tenderId Tender ID to update\n     * @param title New title\n     * @param description New description\n     * @param estimatedValue New estimated value\n     * @param startDate New start date\n     * @param endDate New end date\n     * @param category New category\n     * @param department New department\n     * @param location New location\n     * @param documents New document IPFS hashes\n     */\n    function updateTender(\n        string memory tenderId,\n        string memory title,\n        string memory description,\n        uint256 estimatedValue,\n        uint256 startDate,\n        uint256 endDate,\n        string memory category,\n        string memory department,\n        string memory location,\n        string[] memory documents\n    ) public onlyOfficer tenderExists(tenderId) {\n        Tender storage tender = tenders[tenderId];\n        \n        // Only the creator or admin can update the tender\n        require(tender.createdBy == msg.sender || msg.sender == admin, \"Only the creator or admin can update the tender\");\n        \n        // Can only update if tender is in Draft status\n        require(tender.status == TenderStatus.Draft, \"Can only update tenders in Draft status\");\n        \n        require(startDate < endDate, \"Start date must be before end date\");\n        \n        tender.title = title;\n        tender.description = description;\n        tender.estimatedValue = estimatedValue;\n        tender.startDate = startDate;\n        tender.endDate = endDate;\n        tender.category = category;\n        tender.department = department;\n        tender.location = location;\n        tender.documents = documents;\n        \n        emit TenderUpdated(tenderId, title, tender.status);\n    }\n    \n    /**\n     * @dev Change the status of a tender\n     * @param tenderId Tender ID to update\n     * @param status New status\n     */\n    function changeTenderStatus(string memory tenderId, TenderStatus status) public onlyOfficer tenderExists(tenderId) {\n        Tender storage tender = tenders[tenderId];\n        \n        // Only the creator or admin can change the status\n        require(tender.createdBy == msg.sender || msg.sender == admin, \"Only the creator or admin can change the status\");\n        \n        // Validate status transitions\n        if (status == TenderStatus.Published) {\n            require(tender.status == TenderStatus.Draft, \"Can only publish from Draft status\");\n            require(block.timestamp <= tender.endDate, \"Cannot publish a tender that has already ended\");\n        } else if (status == TenderStatus.Closed) {\n            require(tender.status == TenderStatus.Published, \"Can only close from Published status\");\n        } else if (status == TenderStatus.Awarded) {\n            require(tender.status == TenderStatus.Closed, \"Can only award from Closed status\");\n        } else if (status == TenderStatus.Cancelled) {\n            // Can cancel from any status except Awarded\n            require(tender.status != TenderStatus.Awarded, \"Cannot cancel an awarded tender\");\n        }\n        \n        tender.status = status;\n        \n        emit TenderStatusChanged(tenderId, status);\n    }\n    \n    /**\n     * @dev Submit a bid for a tender\n     * @param bidId Unique identifier for the bid\n     * @param tenderId Tender ID to bid on\n     * @param bidAmount Bid amount\n     * @param documents IPFS hashes of bid documents\n     */\n    function submitBid(\n        string memory bidId,\n        string memory tenderId,\n        uint256 bidAmount,\n        string[] memory documents\n    ) public tenderExists(tenderId) {\n        require(bids[bidId].submittedAt == 0, \"Bid ID already exists\");\n        \n        Tender storage tender = tenders[tenderId];\n        \n        // Check if tender is published and not ended\n        require(tender.status == TenderStatus.Published, \"Tender is not open for bidding\");\n        require(block.timestamp >= tender.startDate, \"Tender bidding has not started yet\");\n        require(block.timestamp <= tender.endDate, \"Tender bidding has ended\");\n        \n        // Create the bid\n        bids[bidId] = Bid({\n            id: bidId,\n            tenderId: tenderId,\n            bidder: msg.sender,\n            bidAmount: bidAmount,\n            submittedAt: block.timestamp,\n            status: BidStatus.Submitted,\n            documents: documents\n        });\n        \n        // Add bid to tender's bids\n        tenderBids[tenderId].push(bidId);\n        \n        // Add bid to user's bids\n        userBids[msg.sender].push(bidId);\n        \n        emit BidSubmitted(bidId, tenderId, msg.sender, bidAmount);\n    }\n    \n    /**\n     * @dev Change the status of a bid\n     * @param bidId Bid ID to update\n     * @param status New status\n     */\n    function changeBidStatus(string memory bidId, BidStatus status) public onlyOfficer bidExists(bidId) {\n        Bid storage bid = bids[bidId];\n        Tender storage tender = tenders[bid.tenderId];\n        \n        // Only the tender creator or admin can change bid status\n        require(tender.createdBy == msg.sender || msg.sender == admin, \"Only the tender creator or admin can change bid status\");\n        \n        // Validate status transitions\n        if (status == BidStatus.Shortlisted) {\n            require(bid.status == BidStatus.Submitted, \"Can only shortlist from Submitted status\");\n            require(tender.status == TenderStatus.Closed, \"Tender must be closed to shortlist bids\");\n        } else if (status == BidStatus.Rejected) {\n            require(bid.status == BidStatus.Submitted || bid.status == BidStatus.Shortlisted, \"Invalid status transition to Rejected\");\n        } else if (status == BidStatus.Awarded) {\n            require(bid.status == BidStatus.Shortlisted, \"Can only award from Shortlisted status\");\n            require(tender.status == TenderStatus.Closed, \"Tender must be closed to award bids\");\n            \n            // When awarding a bid, also change the tender status to Awarded\n            tender.status = TenderStatus.Awarded;\n            emit TenderStatusChanged(bid.tenderId, TenderStatus.Awarded);\n        }\n        \n        bid.status = status;\n        \n        emit BidStatusChanged(bidId, bid.tenderId, status);\n    }\n    \n    /**\n     * @dev Get tender details\n     * @param tenderId Tender ID to query\n     * @return id Tender ID\n     * @return title Tender title\n     * @return description Tender description\n     * @return estimatedValue Tender estimated value\n     * @return startDate Tender start date\n     * @return endDate Tender end date\n     * @return createdBy Tender creator address\n     * @return status Tender status\n     * @return createdAt Tender creation timestamp\n     * @return category Tender category\n     * @return department Tender department\n     * @return location Tender location\n     */\n    function getTender(string memory tenderId) public view tenderExists(tenderId) returns (\n        string memory id,\n        string memory title,\n        string memory description,\n        uint256 estimatedValue,\n        uint256 startDate,\n        uint256 endDate,\n        address createdBy,\n        TenderStatus status,\n        uint256 createdAt,\n        string memory category,\n        string memory department,\n        string memory location\n    ) {\n        Tender memory tender = tenders[tenderId];\n        return (\n            tender.id,\n            tender.title,\n            tender.description,\n            tender.estimatedValue,\n            tender.startDate,\n            tender.endDate,\n            tender.createdBy,\n            tender.status,\n            tender.createdAt,\n            tender.category,\n            tender.department,\n            tender.location\n        );\n    }\n    \n    /**\n     * @dev Get tender documents\n     * @param tenderId Tender ID to query\n     * @return Array of document IPFS hashes\n     */\n    function getTenderDocuments(string memory tenderId) public view tenderExists(tenderId) returns (string[] memory) {\n        return tenders[tenderId].documents;\n    }\n    \n    /**\n     * @dev Get bid details\n     * @param bidId Bid ID to query\n     * @return id Bid ID\n     * @return tenderId Associated tender ID\n     * @return bidder Bidder address\n     * @return bidAmount Bid amount\n     * @return submittedAt Bid submission timestamp\n     * @return status Bid status\n     */\n    function getBid(string memory bidId) public view bidExists(bidId) returns (\n        string memory id,\n        string memory tenderId,\n        address bidder,\n        uint256 bidAmount,\n        uint256 submittedAt,\n        BidStatus status\n    ) {\n        Bid memory bid = bids[bidId];\n        return (\n            bid.id,\n            bid.tenderId,\n            bid.bidder,\n            bid.bidAmount,\n            bid.submittedAt,\n            bid.status\n        );\n    }\n    \n    /**\n     * @dev Get bid documents\n     * @param bidId Bid ID to query\n     * @return Array of document IPFS hashes\n     */\n    function getBidDocuments(string memory bidId) public view bidExists(bidId) returns (string[] memory) {\n        return bids[bidId].documents;\n    }\n    \n    /**\n     * @dev Get all bids for a tender\n     * @param tenderId Tender ID to query\n     * @return Array of bid IDs\n     */\n    function getTenderBids(string memory tenderId) public view tenderExists(tenderId) returns (string[] memory) {\n        return tenderBids[tenderId];\n    }\n    \n    /**\n     * @dev Get all bids submitted by a user\n     * @param userAddress User address to query\n     * @return Array of bid IDs\n     */\n    function getUserBids(address userAddress) public view returns (string[] memory) {\n        return userBids[userAddress];\n    }\n    \n    /**\n     * @dev Get the total number of tenders\n     * @return The number of tenders\n     */\n    function getTenderCount() public view returns (uint256) {\n        return tenderIds.length;\n    }\n    \n    /**\n     * @dev Get all tender IDs\n     * @return Array of all tender IDs\n     */\n    function getAllTenderIds() public view returns (string[] memory) {\n        return tenderIds;\n    }\n    \n    /**\n     * @dev Transfer admin rights to a new address\n     * @param newAdmin The new admin address\n     */\n    function transferAdmin(address newAdmin) public onlyAdmin {\n        require(newAdmin != address(0), \"Invalid address\");\n        admin = newAdmin;\n    }\n}\n"},"src/contracts/UserAuthentication.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @title UserAuthentication\n * @dev Contract for managing user authentication in the TrustChain system\n */\ncontract UserAuthentication {\n    address public admin;\n    \n    struct User {\n        string id;\n        string name;\n        string username;\n        string email;\n        string role; // \"admin\", \"officer\", \"bidder\"\n        bool isApproved;\n        string approvalRemark;\n        uint256 createdAt;\n        // Additional user details\n        string companyName;\n        string registrationNumber;\n        string gstNumber;\n        string panNumber;\n        uint256 establishmentYear;\n        string registeredAddress;\n        string state;\n        string city;\n        string pinCode;\n        string bidderType;\n    }\n    \n    // Mapping from wallet address to user data\n    mapping(address => User) public users;\n    \n    // Mapping from username to wallet address\n    mapping(string => address) public usernameToAddress;\n    \n    // Array to store all user addresses for enumeration\n    address[] public userAddresses;\n    \n    // Mapping from username to boolean to check if username exists\n    mapping(string => bool) public usernameExists;\n    \n    // Events\n    event UserRegistered(address indexed walletAddress, string id, string username, string role);\n    event UserUpdated(address indexed walletAddress, string username);\n    event UserApprovalChanged(address indexed walletAddress, bool isApproved, string remark);\n    event UserRemoved(address indexed walletAddress, string id);\n    \n    // Modifiers\n    modifier onlyAdmin() {\n        require(msg.sender == admin || keccak256(bytes(users[msg.sender].role)) == keccak256(bytes(\"admin\")), \"Only admin can call this function\");\n        _;\n    }\n    \n    modifier userExists(address walletAddress) {\n        require(bytes(users[walletAddress].id).length > 0, \"User does not exist\");\n        _;\n    }\n    \n    constructor() {\n        admin = msg.sender;\n        \n        // Register the deployer as the first admin\n        users[msg.sender] = User({\n            id: \"admin-1\",\n            name: \"System Admin\",\n            username: \"admin\",\n            email: \"admin@trustchain.com\",\n            role: \"admin\",\n            isApproved: true,\n            approvalRemark: \"\",\n            createdAt: block.timestamp,\n            companyName: \"TrustChain\",\n            registrationNumber: \"TC001\",\n            gstNumber: \"\",\n            panNumber: \"\",\n            establishmentYear: 2023,\n            registeredAddress: \"Blockchain HQ\",\n            state: \"Decentraland\",\n            city: \"Crypto City\",\n            pinCode: \"000000\",\n            bidderType: \"\"\n        });\n        \n        usernameToAddress[\"admin\"] = msg.sender;\n        usernameExists[\"admin\"] = true;\n        userAddresses.push(msg.sender);\n        \n        emit UserRegistered(msg.sender, \"admin-1\", \"admin\", \"admin\");\n    }\n    \n    /**\n     * @dev Register a new user\n     * @param walletAddress The user's wallet address\n     * @param id Unique identifier for the user\n     * @param name User's name\n     * @param username User's username\n     * @param email User's email\n     * @param role User's role\n     * @param companyName Company name\n     * @param registrationNumber Company registration number\n     * @param gstNumber GST number\n     * @param panNumber PAN number\n     * @param establishmentYear Establishment year\n     * @param registeredAddress Registered address\n     * @param state State\n     * @param city City\n     * @param pinCode Pin code\n     * @param bidderType Bidder type\n     */\n    function registerUser(\n        address walletAddress,\n        string memory id,\n        string memory name,\n        string memory username,\n        string memory email,\n        string memory role,\n        string memory companyName,\n        string memory registrationNumber,\n        string memory gstNumber,\n        string memory panNumber,\n        uint256 establishmentYear,\n        string memory registeredAddress,\n        string memory state,\n        string memory city,\n        string memory pinCode,\n        string memory bidderType\n    ) public {\n        // For bidders, anyone can register themselves\n        // For officers, only admin can register\n        if (keccak256(bytes(role)) == keccak256(bytes(\"officer\"))) {\n            require(msg.sender == admin || keccak256(bytes(users[msg.sender].role)) == keccak256(bytes(\"admin\")), \"Only admin can register officers\");\n        }\n        \n        require(bytes(users[walletAddress].id).length == 0, \"User already exists for this address\");\n        require(!usernameExists[username], \"Username already exists\");\n        \n        // For bidders, they need approval. Officers are auto-approved\n        bool isApproved = keccak256(bytes(role)) == keccak256(bytes(\"officer\"));\n        \n        users[walletAddress] = User({\n            id: id,\n            name: name,\n            username: username,\n            email: email,\n            role: role,\n            isApproved: isApproved,\n            approvalRemark: \"\",\n            createdAt: block.timestamp,\n            companyName: companyName,\n            registrationNumber: registrationNumber,\n            gstNumber: gstNumber,\n            panNumber: panNumber,\n            establishmentYear: establishmentYear,\n            registeredAddress: registeredAddress,\n            state: state,\n            city: city,\n            pinCode: pinCode,\n            bidderType: bidderType\n        });\n        \n        userAddresses.push(walletAddress);\n        usernameToAddress[username] = walletAddress;\n        usernameExists[username] = true;\n        \n        emit UserRegistered(walletAddress, id, username, role);\n    }\n    \n    /**\n     * @dev Update an existing user's details\n     * @param walletAddress The user's wallet address\n     * @param name New name\n     * @param username New username\n     * @param email New email\n     */\n    function updateUser(\n        address walletAddress,\n        string memory name,\n        string memory username,\n        string memory email\n    ) public userExists(walletAddress) {\n        // Only admin or the user themselves can update their details\n        require(msg.sender == admin || keccak256(bytes(users[msg.sender].role)) == keccak256(bytes(\"admin\")) || msg.sender == walletAddress, \n                \"Only admin or the user themselves can update user details\");\n        \n        string memory currentUsername = users[walletAddress].username;\n        \n        // If username is being changed, check if new username exists\n        if (keccak256(bytes(currentUsername)) != keccak256(bytes(username))) {\n            require(!usernameExists[username], \"Username already exists\");\n            usernameExists[currentUsername] = false;\n            usernameExists[username] = true;\n            \n            // Update username mapping\n            delete usernameToAddress[currentUsername];\n            usernameToAddress[username] = walletAddress;\n        }\n        \n        users[walletAddress].name = name;\n        users[walletAddress].username = username;\n        users[walletAddress].email = email;\n        \n        emit UserUpdated(walletAddress, username);\n    }\n    \n    /**\n     * @dev Update a user's company details\n     * @param walletAddress The user's wallet address\n     * @param companyName Company name\n     * @param registrationNumber Company registration number\n     * @param gstNumber GST number\n     * @param panNumber PAN number\n     * @param establishmentYear Establishment year\n     * @param registeredAddress Registered address\n     * @param state State\n     * @param city City\n     * @param pinCode Pin code\n     * @param bidderType Bidder type\n     */\n    function updateCompanyDetails(\n        address walletAddress,\n        string memory companyName,\n        string memory registrationNumber,\n        string memory gstNumber,\n        string memory panNumber,\n        uint256 establishmentYear,\n        string memory registeredAddress,\n        string memory state,\n        string memory city,\n        string memory pinCode,\n        string memory bidderType\n    ) public userExists(walletAddress) {\n        // Only admin or the user themselves can update their details\n        require(msg.sender == admin || keccak256(bytes(users[msg.sender].role)) == keccak256(bytes(\"admin\")) || msg.sender == walletAddress, \n                \"Only admin or the user themselves can update company details\");\n        \n        User storage user = users[walletAddress];\n        \n        user.companyName = companyName;\n        user.registrationNumber = registrationNumber;\n        user.gstNumber = gstNumber;\n        user.panNumber = panNumber;\n        user.establishmentYear = establishmentYear;\n        user.registeredAddress = registeredAddress;\n        user.state = state;\n        user.city = city;\n        user.pinCode = pinCode;\n        user.bidderType = bidderType;\n        \n        emit UserUpdated(walletAddress, user.username);\n    }\n    \n    /**\n     * @dev Approve or reject a user\n     * @param walletAddress The user's wallet address\n     * @param isApproved Approval status\n     * @param remark Approval or rejection remark\n     */\n    function setUserApproval(\n        address walletAddress,\n        bool isApproved,\n        string memory remark\n    ) public onlyAdmin userExists(walletAddress) {\n        users[walletAddress].isApproved = isApproved;\n        users[walletAddress].approvalRemark = remark;\n        \n        emit UserApprovalChanged(walletAddress, isApproved, remark);\n    }\n    \n    /**\n     * @dev Remove a user\n     * @param walletAddress The user's wallet address\n     */\n    function removeUser(address walletAddress) public onlyAdmin userExists(walletAddress) {\n        string memory username = users[walletAddress].username;\n        string memory id = users[walletAddress].id;\n        \n        // Remove from username mappings\n        delete usernameToAddress[username];\n        usernameExists[username] = false;\n        \n        // Remove from addresses array\n        for (uint i = 0; i < userAddresses.length; i++) {\n            if (userAddresses[i] == walletAddress) {\n                // Replace with the last element and pop\n                userAddresses[i] = userAddresses[userAddresses.length - 1];\n                userAddresses.pop();\n                break;\n            }\n        }\n        \n        // Delete user data\n        delete users[walletAddress];\n        \n        emit UserRemoved(walletAddress, id);\n    }\n    \n    /**\n     * @dev Get user details by wallet address\n     * @param walletAddress The user's wallet address\n     * @return id User ID\n     * @return name User name\n     * @return username User username\n     * @return email User email\n     * @return role User role\n     * @return isApproved User approval status\n     * @return approvalRemark User approval remark\n     * @return createdAt User creation timestamp\n     */\n    function getUserByAddress(address walletAddress) public view returns (\n        string memory id,\n        string memory name,\n        string memory username,\n        string memory email,\n        string memory role,\n        bool isApproved,\n        string memory approvalRemark,\n        uint256 createdAt\n    ) {\n        User memory user = users[walletAddress];\n        return (\n            user.id,\n            user.name,\n            user.username,\n            user.email,\n            user.role,\n            user.isApproved,\n            user.approvalRemark,\n            user.createdAt\n        );\n    }\n    \n    /**\n     * @dev Get user details by username\n     * @param username The username to look up\n     * @return walletAddress User's wallet address\n     * @return id User ID\n     * @return name User name\n     * @return email User email\n     * @return role User role\n     * @return isApproved User approval status\n     * @return approvalRemark User approval remark\n     * @return createdAt User creation timestamp\n     */\n    function getUserByUsername(string memory username) public view returns (\n        address walletAddress,\n        string memory id,\n        string memory name,\n        string memory email,\n        string memory role,\n        bool isApproved,\n        string memory approvalRemark,\n        uint256 createdAt\n    ) {\n        address userAddress = usernameToAddress[username];\n        require(userAddress != address(0), \"Username not found\");\n        \n        User memory user = users[userAddress];\n        return (\n            userAddress,\n            user.id,\n            user.name,\n            user.email,\n            user.role,\n            user.isApproved,\n            user.approvalRemark,\n            user.createdAt\n        );\n    }\n    \n    /**\n     * @dev Get user company details\n     * @param walletAddress The user's wallet address\n     * @return companyName Company name\n     * @return registrationNumber Registration number\n     * @return gstNumber GST number\n     * @return panNumber PAN number\n     * @return establishmentYear Establishment year\n     * @return registeredAddress Registered address\n     * @return state State\n     * @return city City\n     * @return pinCode Pin code\n     * @return bidderType Bidder type\n     */\n    function getCompanyDetails(address walletAddress) public view returns (\n        string memory companyName,\n        string memory registrationNumber,\n        string memory gstNumber,\n        string memory panNumber,\n        uint256 establishmentYear,\n        string memory registeredAddress,\n        string memory state,\n        string memory city,\n        string memory pinCode,\n        string memory bidderType\n    ) {\n        User memory user = users[walletAddress];\n        return (\n            user.companyName,\n            user.registrationNumber,\n            user.gstNumber,\n            user.panNumber,\n            user.establishmentYear,\n            user.registeredAddress,\n            user.state,\n            user.city,\n            user.pinCode,\n            user.bidderType\n        );\n    }\n    \n    /**\n     * @dev Check if an address is a user\n     * @param walletAddress The wallet address to check\n     * @return true if the address is a user\n     */\n    function isUser(address walletAddress) public view returns (bool) {\n        return bytes(users[walletAddress].id).length > 0;\n    }\n    \n    /**\n     * @dev Check if an address is an admin\n     * @param walletAddress The wallet address to check\n     * @return true if the address is an admin\n     */\n    function isAdmin(address walletAddress) public view returns (bool) {\n        return keccak256(bytes(users[walletAddress].role)) == keccak256(bytes(\"admin\"));\n    }\n    \n    /**\n     * @dev Check if an address is an officer\n     * @param walletAddress The wallet address to check\n     * @return true if the address is an officer\n     */\n    function isOfficer(address walletAddress) public view returns (bool) {\n        return keccak256(bytes(users[walletAddress].role)) == keccak256(bytes(\"officer\"));\n    }\n    \n    /**\n     * @dev Get the total number of users\n     * @return The number of users\n     */\n    function getUserCount() public view returns (uint256) {\n        return userAddresses.length;\n    }\n    \n    /**\n     * @dev Get all user addresses\n     * @return Array of all user addresses\n     */\n    function getAllUserAddresses() public view returns (address[] memory) {\n        return userAddresses;\n    }\n    \n    /**\n     * @dev Transfer admin rights to a new address\n     * @param newAdmin The new admin address\n     */\n    function transferAdmin(address newAdmin) public onlyAdmin {\n        require(newAdmin != address(0), \"Invalid address\");\n        admin = newAdmin;\n    }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[177],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":178,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,177],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"127:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"Context","nameLocation":"642:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":158,"nodeType":"Block","src":"718:34:1","statements":[{"expression":{"expression":{"id":155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:1","memberName":"sender","nodeType":"MemberAccess","src":"735:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":154,"id":157,"nodeType":"Return","src":"728:17:1"}]},"id":159,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:1","nodeType":"FunctionDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[],"src":"675:2:1"},"returnParameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":159,"src":"709:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:1"},"scope":177,"src":"656:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":167,"nodeType":"Block","src":"825:32:1","statements":[{"expression":{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:1","memberName":"data","nodeType":"MemberAccess","src":"842:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":163,"id":166,"nodeType":"Return","src":"835:15:1"}]},"id":168,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"775:2:1"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":168,"src":"809:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":161,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:1"},"scope":177,"src":"758:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":175,"nodeType":"Block","src":"935:25:1","statements":[{"expression":{"hexValue":"30","id":173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":172,"id":174,"nodeType":"Return","src":"945:8:1"}]},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:1","nodeType":"FunctionDefinition","parameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"892:2:1"},"returnParameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"926:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:1"},"scope":177,"src":"863:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":178,"src":"624:338:1","usedErrors":[],"usedEvents":[]}],"src":"101:862:1"},"id":1},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[229]},"id":230,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"125:489:2","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":229,"linearizedBaseContracts":[229],"name":"Panic","nameLocation":"665:5:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"677:36:2","text":"@dev generic / unspecified error"},"id":184,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:2","nodeType":"VariableDeclaration","scope":229,"src":"718:40:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":182,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":185,"nodeType":"StructuredDocumentation","src":"764:37:2","text":"@dev used by the assert() builtin"},"id":188,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:2","nodeType":"VariableDeclaration","scope":229,"src":"806:39:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":189,"nodeType":"StructuredDocumentation","src":"851:41:2","text":"@dev arithmetic underflow or overflow"},"id":192,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:2","nodeType":"VariableDeclaration","scope":229,"src":"897:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":190,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:2","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":193,"nodeType":"StructuredDocumentation","src":"950:35:2","text":"@dev division or modulo by zero"},"id":196,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:2","nodeType":"VariableDeclaration","scope":229,"src":"990:49:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"1045:30:2","text":"@dev enum conversion error"},"id":200,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:2","nodeType":"VariableDeclaration","scope":229,"src":"1080:54:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:2","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"1140:36:2","text":"@dev invalid encoding in storage"},"id":204,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:2","nodeType":"VariableDeclaration","scope":229,"src":"1181:55:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:2","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1242:24:2","text":"@dev empty array pop"},"id":208,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:2","nodeType":"VariableDeclaration","scope":229,"src":"1271:48:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":206,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:2","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"1325:35:2","text":"@dev array out of bounds access"},"id":212,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:2","nodeType":"VariableDeclaration","scope":229,"src":"1365:52:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:2","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"1423:65:2","text":"@dev resource error (too large allocation or too large array)"},"id":216,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:2","nodeType":"VariableDeclaration","scope":229,"src":"1493:47:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:2","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"1546:42:2","text":"@dev calling invalid internal function"},"id":220,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:2","nodeType":"VariableDeclaration","scope":229,"src":"1593:58:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:2","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":227,"nodeType":"Block","src":"1819:151:2","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:2","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:2","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:2","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:2"},"nodeType":"YulFunctionCall","src":"1868:24:2"},"nodeType":"YulExpressionStatement","src":"1868:24:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:2","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:2"},"nodeType":"YulFunctionCall","src":"1905:18:2"},"nodeType":"YulExpressionStatement","src":"1905:18:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:2","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:2","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:2"},"nodeType":"YulFunctionCall","src":"1936:18:2"},"nodeType":"YulExpressionStatement","src":"1936:18:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":223,"isOffset":false,"isSlot":false,"src":"1918:4:2","valueSize":1}],"flags":["memory-safe"],"id":226,"nodeType":"InlineAssembly","src":"1829:135:2"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"1658:113:2","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":228,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:2","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"code","nameLocation":"1799:4:2","nodeType":"VariableDeclaration","scope":228,"src":"1791:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:2"},"returnParameters":{"id":225,"nodeType":"ParameterList","parameters":[],"src":"1819:0:2"},"scope":229,"src":"1776:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":230,"src":"657:1315:2","usedErrors":[],"usedEvents":[]}],"src":"99:1874:2"},"id":2},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[3252],"SafeCast":[5017],"SignedMath":[5161],"Strings":[1631]},"id":1632,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":231,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":233,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1632,"sourceUnit":3253,"src":"127:37:3","symbolAliases":[{"foreign":{"id":232,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"135:4:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":235,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1632,"sourceUnit":5018,"src":"165:45:3","symbolAliases":[{"foreign":{"id":234,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"173:8:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1632,"sourceUnit":5162,"src":"211:49:3","symbolAliases":[{"foreign":{"id":236,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"219:10:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"262:34:3","text":" @dev String operations."},"fullyImplemented":true,"id":1631,"linearizedBaseContracts":[1631],"name":"Strings","nameLocation":"305:7:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":240,"libraryName":{"id":239,"name":"SafeCast","nameLocations":["325:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":5017,"src":"325:8:3"},"nodeType":"UsingForDirective","src":"319:21:3"},{"constant":true,"id":243,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:3","nodeType":"VariableDeclaration","scope":1631,"src":"346:56:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":241,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":246,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:3","nodeType":"VariableDeclaration","scope":1631,"src":"408:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":244,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":282,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:3","nodeType":"VariableDeclaration","scope":1631,"src":"456:302:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:3","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:3","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:3","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:3","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:3","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:3","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:3","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:3","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:3","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":264,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:3","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:3","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":265,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:3","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:3","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:3","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:3","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:3","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:3","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:3","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:3","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:3","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:3","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:3","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":280,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:3","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:3","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"778:81:3","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":289,"name":"StringsInsufficientHexLength","nameLocation":"870:28:3","nodeType":"ErrorDefinition","parameters":{"id":288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"value","nameLocation":"907:5:3","nodeType":"VariableDeclaration","scope":289,"src":"899:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"length","nameLocation":"922:6:3","nodeType":"VariableDeclaration","scope":289,"src":"914:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:3"},"src":"864:66:3"},{"documentation":{"id":290,"nodeType":"StructuredDocumentation","src":"936:108:3","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":292,"name":"StringsInvalidChar","nameLocation":"1055:18:3","nodeType":"ErrorDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[],"src":"1073:2:3"},"src":"1049:27:3"},{"documentation":{"id":293,"nodeType":"StructuredDocumentation","src":"1082:84:3","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":295,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:3","nodeType":"ErrorDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"1204:2:3"},"src":"1171:36:3"},{"body":{"id":342,"nodeType":"Block","src":"1379:561:3","statements":[{"id":341,"nodeType":"UncheckedBlock","src":"1389:545:3","statements":[{"assignments":[304],"declarations":[{"constant":false,"id":304,"mutability":"mutable","name":"length","nameLocation":"1421:6:3","nodeType":"VariableDeclaration","scope":341,"src":"1413:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":311,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1441:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":305,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"1430:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3252_$","typeString":"type(library Math)"}},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:3","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"1430:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:3"},{"assignments":[313],"declarations":[{"constant":false,"id":313,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:3","nodeType":"VariableDeclaration","scope":341,"src":"1465:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":312,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":318,"initialValue":{"arguments":[{"id":316,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"1499:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":314,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:3"},{"assignments":[320],"declarations":[{"constant":false,"id":320,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:3","nodeType":"VariableDeclaration","scope":341,"src":"1520:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":321,"nodeType":"VariableDeclarationStatement","src":"1520:11:3"},{"AST":{"nodeType":"YulBlock","src":"1570:67:3","statements":[{"nodeType":"YulAssignment","src":"1588:35:3","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:3","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:3"},"nodeType":"YulFunctionCall","src":"1607:15:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:3"},"nodeType":"YulFunctionCall","src":"1595:28:3"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":313,"isOffset":false,"isSlot":false,"src":"1599:6:3","valueSize":1},{"declaration":304,"isOffset":false,"isSlot":false,"src":"1615:6:3","valueSize":1},{"declaration":320,"isOffset":false,"isSlot":false,"src":"1588:3:3","valueSize":1}],"flags":["memory-safe"],"id":322,"nodeType":"InlineAssembly","src":"1545:92:3"},{"body":{"id":337,"nodeType":"Block","src":"1663:234:3","statements":[{"expression":{"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:3","subExpression":{"id":324,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"1681:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":326,"nodeType":"ExpressionStatement","src":"1681:5:3"},{"AST":{"nodeType":"YulBlock","src":"1729:86:3","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:3"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:3"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:3","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:3"},"nodeType":"YulFunctionCall","src":"1769:14:3"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:3"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:3"},"nodeType":"YulFunctionCall","src":"1764:32:3"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:3"},"nodeType":"YulFunctionCall","src":"1751:46:3"},"nodeType":"YulExpressionStatement","src":"1751:46:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":243,"isOffset":false,"isSlot":false,"src":"1785:10:3","valueSize":1},{"declaration":320,"isOffset":false,"isSlot":false,"src":"1759:3:3","valueSize":1},{"declaration":298,"isOffset":false,"isSlot":false,"src":"1773:5:3","valueSize":1}],"flags":["memory-safe"],"id":327,"nodeType":"InlineAssembly","src":"1704:111:3"},{"expression":{"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1832:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":331,"nodeType":"ExpressionStatement","src":"1832:11:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"1865:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"IfStatement","src":"1861:21:3","trueBody":{"id":335,"nodeType":"Break","src":"1877:5:3"}}]},"condition":{"hexValue":"74727565","id":323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":338,"nodeType":"WhileStatement","src":"1650:247:3"},{"expression":{"id":339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"1917:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":302,"id":340,"nodeType":"Return","src":"1910:13:3"}]}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"1213:90:3","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":343,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:3","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"value","nameLocation":"1334:5:3","nodeType":"VariableDeclaration","scope":343,"src":"1326:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:3"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":343,"src":"1364:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":300,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:3"},"scope":1631,"src":"1308:632:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":368,"nodeType":"Block","src":"2116:92:3","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2147:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:3","trueExpression":{"hexValue":"2d","id":357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":346,"src":"2193:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":361,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5161,"src":"2178:10:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$5161_$","typeString":"type(library SignedMath)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:3","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":5160,"src":"2178:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":360,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"2169:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":351,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:3","typeDescriptions":{}}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":350,"id":367,"nodeType":"Return","src":"2126:75:3"}]},"documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"1946:89:3","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":369,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"mutability":"mutable","name":"value","nameLocation":"2071:5:3","nodeType":"VariableDeclaration","scope":369,"src":"2064:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":345,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:3"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":369,"src":"2101:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:3"},"scope":1631,"src":"2040:168:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":388,"nodeType":"Block","src":"2387:100:3","statements":[{"id":387,"nodeType":"UncheckedBlock","src":"2397:84:3","statements":[{"expression":{"arguments":[{"id":378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2440:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2459:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":379,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"2447:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3252_$","typeString":"type(library Math)"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:3","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3195,"src":"2447:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":377,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[389,472,492],"referencedDeclaration":472,"src":"2428:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":376,"id":386,"nodeType":"Return","src":"2421:49:3"}]}]},"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"2214:94:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":389,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:3","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"value","nameLocation":"2342:5:3","nodeType":"VariableDeclaration","scope":389,"src":"2334:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:3"},"returnParameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":389,"src":"2372:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":374,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:3"},"scope":1631,"src":"2313:174:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":471,"nodeType":"Block","src":"2700:435:3","statements":[{"assignments":[400],"declarations":[{"constant":false,"id":400,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:3","nodeType":"VariableDeclaration","scope":471,"src":"2710:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":402,"initialValue":{"id":401,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2731:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:3"},{"assignments":[404],"declarations":[{"constant":false,"id":404,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:3","nodeType":"VariableDeclaration","scope":471,"src":"2746:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":403,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":413,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":408,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2782:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":405,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:3"},{"expression":{"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":414,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2803:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":416,"indexExpression":{"hexValue":"30","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":419,"nodeType":"ExpressionStatement","src":"2803:15:3"},{"expression":{"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":420,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2828:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":422,"indexExpression":{"hexValue":"31","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":425,"nodeType":"ExpressionStatement","src":"2828:15:3"},{"body":{"id":454,"nodeType":"Block","src":"2898:95:3","statements":[{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":440,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2912:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":442,"indexExpression":{"id":441,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2919:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":443,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"2924:10:3","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":447,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2935:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":449,"nodeType":"ExpressionStatement","src":"2912:40:3"},{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":450,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2966:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2966:16:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":434,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2886:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":455,"initializationExpression":{"assignments":[427],"declarations":[{"constant":false,"id":427,"mutability":"mutable","name":"i","nameLocation":"2866:1:3","nodeType":"VariableDeclaration","scope":455,"src":"2858:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":433,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":429,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"2874:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:3"},"loopExpression":{"expression":{"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:3","subExpression":{"id":437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"2895:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":439,"nodeType":"ExpressionStatement","src":"2893:3:3"},"nodeType":"ForStatement","src":"2853:140:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":456,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"3006:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":465,"nodeType":"IfStatement","src":"3002:96:3","trueBody":{"id":464,"nodeType":"Block","src":"3023:75:3","statements":[{"errorCall":{"arguments":[{"id":460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"3073:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":461,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":394,"src":"3080:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":459,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":289,"src":"3044:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"RevertStatement","src":"3037:50:3"}]}},{"expression":{"arguments":[{"id":468,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"3121:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":466,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:3","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":398,"id":470,"nodeType":"Return","src":"3107:21:3"}]},"documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"2493:112:3","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":472,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:3","nodeType":"FunctionDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":392,"mutability":"mutable","name":"value","nameLocation":"2639:5:3","nodeType":"VariableDeclaration","scope":472,"src":"2631:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"length","nameLocation":"2654:6:3","nodeType":"VariableDeclaration","scope":472,"src":"2646:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:3"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":472,"src":"2685:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":396,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:3"},"scope":1631,"src":"2610:525:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":491,"nodeType":"Block","src":"3367:75:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":485,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3412:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":483,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:3","typeDescriptions":{}}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:3","typeDescriptions":{}}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":488,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":246,"src":"3420:14:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":480,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[389,472,492],"referencedDeclaration":472,"src":"3384:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":479,"id":490,"nodeType":"Return","src":"3377:58:3"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"3141:148:3","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":492,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:3","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"addr","nameLocation":"3323:4:3","nodeType":"VariableDeclaration","scope":492,"src":"3315:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":474,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:3"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"3352:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":477,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:3"},"scope":1631,"src":"3294:148:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":556,"nodeType":"Block","src":"3699:642:3","statements":[{"assignments":[501],"declarations":[{"constant":false,"id":501,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:3","nodeType":"VariableDeclaration","scope":556,"src":"3709:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":500,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":508,"initialValue":{"arguments":[{"arguments":[{"id":505,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3749:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":504,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[389,472,492],"referencedDeclaration":492,"src":"3737:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":502,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:3","typeDescriptions":{}}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:3"},{"assignments":[510],"declarations":[{"constant":false,"id":510,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:3","nodeType":"VariableDeclaration","scope":556,"src":"3840:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":511,"nodeType":"VariableDeclarationStatement","src":"3840:17:3"},{"AST":{"nodeType":"YulBlock","src":"3892:78:3","statements":[{"nodeType":"YulAssignment","src":"3906:54:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:3","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:3"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:3","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:3"},"nodeType":"YulFunctionCall","src":"3937:17:3"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:3","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:3"},"nodeType":"YulFunctionCall","src":"3927:32:3"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:3"},"nodeType":"YulFunctionCall","src":"3919:41:3"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":501,"isOffset":false,"isSlot":false,"src":"3941:6:3","valueSize":1},{"declaration":510,"isOffset":false,"isSlot":false,"src":"3906:9:3","valueSize":1}],"flags":["memory-safe"],"id":512,"nodeType":"InlineAssembly","src":"3867:103:3"},{"body":{"id":549,"nodeType":"Block","src":"4013:291:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":523,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4119:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:3","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":530,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4148:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":532,"indexExpression":{"id":531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4155:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":528,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:3","typeDescriptions":{}}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:3","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":544,"nodeType":"IfStatement","src":"4115:150:3","trueBody":{"id":543,"nodeType":"Block","src":"4165:100:3","statements":[{"expression":{"id":541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":537,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4233:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":539,"indexExpression":{"id":538,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4240:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:3","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":542,"nodeType":"ExpressionStatement","src":"4233:17:3"}]}},{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"4278:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:3","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"4278:15:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":517,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4001:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"initializationExpression":{"assignments":[514],"declarations":[{"constant":false,"id":514,"mutability":"mutable","name":"i","nameLocation":"3993:1:3","nodeType":"VariableDeclaration","scope":550,"src":"3985:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":516,"initialValue":{"hexValue":"3431","id":515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:3","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:3"},"loopExpression":{"expression":{"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:3","subExpression":{"id":520,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"4010:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ExpressionStatement","src":"4008:3:3"},"nodeType":"ForStatement","src":"3980:324:3"},{"expression":{"arguments":[{"id":553,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"4327:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":551,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:3","typeDescriptions":{}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":499,"id":555,"nodeType":"Return","src":"4313:21:3"}]},"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"3448:165:3","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":557,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:3","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"addr","nameLocation":"3655:4:3","nodeType":"VariableDeclaration","scope":557,"src":"3647:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:3"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":557,"src":"3684:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":497,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:3"},"scope":1631,"src":"3618:723:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":593,"nodeType":"Block","src":"4496:104:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4519:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":567,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:3","typeDescriptions":{}}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:3","memberName":"length","nodeType":"MemberAccess","src":"4513:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":574,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4538:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":572,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:3","typeDescriptions":{}}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:3","memberName":"length","nodeType":"MemberAccess","src":"4532:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":581,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"4567:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":579,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:3","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":578,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":587,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4590:1:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":585,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:3","typeDescriptions":{}}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":584,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:3","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":566,"id":592,"nodeType":"Return","src":"4506:87:3"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"4347:66:3","text":" @dev Returns true if the two strings are equal."},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:3","nodeType":"FunctionDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"a","nameLocation":"4447:1:3","nodeType":"VariableDeclaration","scope":594,"src":"4433:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":559,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"b","nameLocation":"4464:1:3","nodeType":"VariableDeclaration","scope":594,"src":"4450:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:3"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"4490:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":564,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:3"},"scope":1631,"src":"4418:182:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":612,"nodeType":"Block","src":"4897:64:3","statements":[{"expression":{"arguments":[{"id":603,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4924:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":607,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4940:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":605,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:3","typeDescriptions":{}}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:3","memberName":"length","nodeType":"MemberAccess","src":"4934:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":602,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[613,644],"referencedDeclaration":644,"src":"4914:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":601,"id":611,"nodeType":"Return","src":"4907:47:3"}]},"documentation":{"id":595,"nodeType":"StructuredDocumentation","src":"4606:214:3","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:3","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"input","nameLocation":"4858:5:3","nodeType":"VariableDeclaration","scope":613,"src":"4844:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":596,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:3"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":613,"src":"4888:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:3"},"scope":1631,"src":"4825:136:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":643,"nodeType":"Block","src":"5366:153:3","statements":[{"assignments":[626,628],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"success","nameLocation":"5382:7:3","nodeType":"VariableDeclaration","scope":643,"src":"5377:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":625,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":628,"mutability":"mutable","name":"value","nameLocation":"5399:5:3","nodeType":"VariableDeclaration","scope":643,"src":"5391:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":627,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":634,"initialValue":{"arguments":[{"id":630,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"5421:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":631,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"5428:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":632,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5435:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[665,702],"referencedDeclaration":702,"src":"5408:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:3"},{"condition":{"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:3","subExpression":{"id":635,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"5454:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":640,"nodeType":"IfStatement","src":"5449:41:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":637,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"5470:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"RevertStatement","src":"5463:27:3"}},{"expression":{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"5507:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":624,"id":642,"nodeType":"Return","src":"5500:12:3"}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"4967:294:3","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":644,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:3","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"input","nameLocation":"5299:5:3","nodeType":"VariableDeclaration","scope":644,"src":"5285:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":615,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"begin","nameLocation":"5314:5:3","nodeType":"VariableDeclaration","scope":644,"src":"5306:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":617,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"end","nameLocation":"5329:3:3","nodeType":"VariableDeclaration","scope":644,"src":"5321:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:3"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":644,"src":"5357:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:3"},"scope":1631,"src":"5266:253:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":664,"nodeType":"Block","src":"5840:83:3","statements":[{"expression":{"arguments":[{"id":655,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5886:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":659,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"5902:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":657,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:3","typeDescriptions":{}}},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:3","memberName":"length","nodeType":"MemberAccess","src":"5896:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":654,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"5857:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":653,"id":663,"nodeType":"Return","src":"5850:66:3"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"5525:215:3","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":665,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:3","nodeType":"FunctionDefinition","parameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"input","nameLocation":"5781:5:3","nodeType":"VariableDeclaration","scope":665,"src":"5767:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":646,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":650,"mutability":"mutable","name":"success","nameLocation":"5816:7:3","nodeType":"VariableDeclaration","scope":665,"src":"5811:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":649,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"value","nameLocation":"5833:5:3","nodeType":"VariableDeclaration","scope":665,"src":"5825:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:3"},"scope":1631,"src":"5745:178:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"6325:144:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6339:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":682,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6351:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":680,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:3","typeDescriptions":{}}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:3","memberName":"length","nodeType":"MemberAccess","src":"6345:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"6368:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":687,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6376:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"IfStatement","src":"6335:63:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":692,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":678,"id":693,"nodeType":"Return","src":"6381:17:3"}},{"expression":{"arguments":[{"id":696,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"6444:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":697,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"6451:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":698,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"6458:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":695,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"6415:28:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":678,"id":700,"nodeType":"Return","src":"6408:54:3"}]},"documentation":{"id":666,"nodeType":"StructuredDocumentation","src":"5929:238:3","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:3","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"input","nameLocation":"6217:5:3","nodeType":"VariableDeclaration","scope":702,"src":"6203:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"begin","nameLocation":"6240:5:3","nodeType":"VariableDeclaration","scope":702,"src":"6232:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"end","nameLocation":"6263:3:3","nodeType":"VariableDeclaration","scope":702,"src":"6255:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":671,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:3"},"returnParameters":{"id":678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"success","nameLocation":"6301:7:3","nodeType":"VariableDeclaration","scope":702,"src":"6296:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":674,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"value","nameLocation":"6318:5:3","nodeType":"VariableDeclaration","scope":702,"src":"6310:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":676,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:3"},"scope":1631,"src":"6172:297:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":771,"nodeType":"Block","src":"6872:347:3","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:3","nodeType":"VariableDeclaration","scope":771,"src":"6882:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":716,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"id":720,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":705,"src":"6910:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":718,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:3","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:3"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"result","nameLocation":"6935:6:3","nodeType":"VariableDeclaration","scope":771,"src":"6927:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":726,"initialValue":{"hexValue":"30","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:3"},{"body":{"id":765,"nodeType":"Block","src":"6993:189:3","statements":[{"assignments":[738],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"chr","nameLocation":"7013:3:3","nodeType":"VariableDeclaration","scope":765,"src":"7007:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":737,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":748,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":743,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"7062:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7070:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":742,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"7039:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":740,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:3","typeDescriptions":{}}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":739,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"7019:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":749,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7092:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:3","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":756,"nodeType":"IfStatement","src":"7088:30:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":715,"id":755,"nodeType":"Return","src":"7101:17:3"}},{"expression":{"id":759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":757,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7132:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ExpressionStatement","src":"7132:12:3"},{"expression":{"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":761,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7158:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":762,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"7168:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":764,"nodeType":"ExpressionStatement","src":"7158:13:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6979:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":732,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6983:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":766,"initializationExpression":{"assignments":[728],"declarations":[{"constant":false,"id":728,"mutability":"mutable","name":"i","nameLocation":"6968:1:3","nodeType":"VariableDeclaration","scope":766,"src":"6960:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":727,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":730,"initialValue":{"id":729,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"6972:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:3"},"loopExpression":{"expression":{"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:3","subExpression":{"id":734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"6990:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":736,"nodeType":"ExpressionStatement","src":"6988:3:3"},"nodeType":"ForStatement","src":"6955:227:3"},{"expression":{"components":[{"hexValue":"74727565","id":767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":768,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"7205:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":769,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":715,"id":770,"nodeType":"Return","src":"7191:21:3"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"6475:224:3","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":772,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:3","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"input","nameLocation":"6765:5:3","nodeType":"VariableDeclaration","scope":772,"src":"6751:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":704,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":707,"mutability":"mutable","name":"begin","nameLocation":"6788:5:3","nodeType":"VariableDeclaration","scope":772,"src":"6780:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":706,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"end","nameLocation":"6811:3:3","nodeType":"VariableDeclaration","scope":772,"src":"6803:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":708,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:3"},"returnParameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":712,"mutability":"mutable","name":"success","nameLocation":"6848:7:3","nodeType":"VariableDeclaration","scope":772,"src":"6843:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":711,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":714,"mutability":"mutable","name":"value","nameLocation":"6865:5:3","nodeType":"VariableDeclaration","scope":772,"src":"6857:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":713,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:3"},"scope":1631,"src":"6704:515:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":790,"nodeType":"Block","src":"7516:63:3","statements":[{"expression":{"arguments":[{"id":781,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7542:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":785,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"7558:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:3","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:3","memberName":"length","nodeType":"MemberAccess","src":"7552:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":780,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[791,822],"referencedDeclaration":822,"src":"7533:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":779,"id":789,"nodeType":"Return","src":"7526:46:3"}]},"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"7225:216:3","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":791,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:3","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"input","nameLocation":"7478:5:3","nodeType":"VariableDeclaration","scope":791,"src":"7464:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":774,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:3"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":791,"src":"7508:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":777,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:3"},"scope":1631,"src":"7446:133:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":821,"nodeType":"Block","src":"7984:151:3","statements":[{"assignments":[804,806],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"success","nameLocation":"8000:7:3","nodeType":"VariableDeclaration","scope":821,"src":"7995:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":803,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"value","nameLocation":"8016:5:3","nodeType":"VariableDeclaration","scope":821,"src":"8009:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":805,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":812,"initialValue":{"arguments":[{"id":808,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"8037:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":809,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"8044:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8051:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":807,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[843,885],"referencedDeclaration":885,"src":"8025:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:3"},{"condition":{"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:3","subExpression":{"id":813,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8070:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":818,"nodeType":"IfStatement","src":"8065:41:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":815,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"8086:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"RevertStatement","src":"8079:27:3"}},{"expression":{"id":819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":806,"src":"8123:5:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":802,"id":820,"nodeType":"Return","src":"8116:12:3"}]},"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"7585:296:3","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":822,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:3","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"input","nameLocation":"7918:5:3","nodeType":"VariableDeclaration","scope":822,"src":"7904:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":793,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"begin","nameLocation":"7933:5:3","nodeType":"VariableDeclaration","scope":822,"src":"7925:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":798,"mutability":"mutable","name":"end","nameLocation":"7948:3:3","nodeType":"VariableDeclaration","scope":822,"src":"7940:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:3"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"7976:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":800,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:3"},"scope":1631,"src":"7886:249:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"8526:82:3","statements":[{"expression":{"arguments":[{"id":833,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8571:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":837,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"8587:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:3","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:3","memberName":"length","nodeType":"MemberAccess","src":"8581:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":832,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"8543:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":831,"id":841,"nodeType":"Return","src":"8536:65:3"}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"8141:287:3","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:3","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"input","nameLocation":"8468:5:3","nodeType":"VariableDeclaration","scope":843,"src":"8454:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":824,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:3"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"success","nameLocation":"8503:7:3","nodeType":"VariableDeclaration","scope":843,"src":"8498:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":827,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"value","nameLocation":"8519:5:3","nodeType":"VariableDeclaration","scope":843,"src":"8512:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":829,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:3"},"scope":1631,"src":"8433:175:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":848,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:3","nodeType":"VariableDeclaration","scope":1631,"src":"8614:50:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":844,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:3","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:3","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":884,"nodeType":"Block","src":"9130:143:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":862,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9144:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":865,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9156:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":864,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":863,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:3","typeDescriptions":{}}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:3","memberName":"length","nodeType":"MemberAccess","src":"9150:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":869,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9173:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":870,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9181:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":877,"nodeType":"IfStatement","src":"9140:63:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":875,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":861,"id":876,"nodeType":"Return","src":"9186:17:3"}},{"expression":{"arguments":[{"id":879,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9248:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":880,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9255:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":881,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9262:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":878,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"9220:27:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":861,"id":883,"nodeType":"Return","src":"9213:53:3"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"8671:303:3","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":885,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:3","nodeType":"FunctionDefinition","parameters":{"id":856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"input","nameLocation":"9023:5:3","nodeType":"VariableDeclaration","scope":885,"src":"9009:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":850,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"begin","nameLocation":"9046:5:3","nodeType":"VariableDeclaration","scope":885,"src":"9038:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"end","nameLocation":"9069:3:3","nodeType":"VariableDeclaration","scope":885,"src":"9061:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":854,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:3"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"success","nameLocation":"9107:7:3","nodeType":"VariableDeclaration","scope":885,"src":"9102:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":857,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"value","nameLocation":"9123:5:3","nodeType":"VariableDeclaration","scope":885,"src":"9116:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":859,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:3"},"scope":1631,"src":"8979:294:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1005,"nodeType":"Block","src":"9673:812:3","statements":[{"assignments":[900],"declarations":[{"constant":false,"id":900,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:3","nodeType":"VariableDeclaration","scope":1005,"src":"9683:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":899,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":905,"initialValue":{"arguments":[{"id":903,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9711:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":902,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:3","typeDescriptions":{}}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:3"},{"assignments":[907],"declarations":[{"constant":false,"id":907,"mutability":"mutable","name":"sign","nameLocation":"9781:4:3","nodeType":"VariableDeclaration","scope":1005,"src":"9774:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":906,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":923,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":908,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"9788:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":909,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"9797:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":918,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"9845:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":919,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"9853:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":917,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"9822:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":915,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:3","typeDescriptions":{}}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:3","trueExpression":{"arguments":[{"hexValue":"30","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":911,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:3","typeDescriptions":{}}},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:3"},{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:3","nodeType":"VariableDeclaration","scope":1005,"src":"9941:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":924,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":932,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9961:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":927,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:3","typeDescriptions":{}}},"id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:3"},{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:3","nodeType":"VariableDeclaration","scope":1005,"src":"9990:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":933,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":941,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"10010:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":936,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:3","typeDescriptions":{}}},"id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:3"},{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"offset","nameLocation":"10047:6:3","nodeType":"VariableDeclaration","scope":1005,"src":"10039:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":950,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":944,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"10057:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":945,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10073:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:3","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"10056:37:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:3"},{"assignments":[952,954],"declarations":[{"constant":false,"id":952,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:3","nodeType":"VariableDeclaration","scope":1005,"src":"10107:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":951,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":954,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:3","nodeType":"VariableDeclaration","scope":1005,"src":"10124:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":962,"initialValue":{"arguments":[{"id":956,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"10157:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"10164:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":958,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"10172:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":960,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":892,"src":"10180:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":955,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[665,702],"referencedDeclaration":702,"src":"10144:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":963,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10199:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10213:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":965,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10224:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":983,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":952,"src":"10341:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":984,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10355:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":986,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10371:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":987,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"10383:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":898,"id":1002,"nodeType":"Return","src":"10461:17:3"},"id":1003,"nodeType":"IfStatement","src":"10337:141:3","trueBody":{"id":998,"nodeType":"Block","src":"10399:56:3","statements":[{"expression":{"components":[{"hexValue":"74727565","id":990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":992,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:3","memberName":"min","nodeType":"MemberAccess","src":"10427:16:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":898,"id":997,"nodeType":"Return","src":"10413:31:3"}]}},"id":1004,"nodeType":"IfStatement","src":"10195:283:3","trueBody":{"id":982,"nodeType":"Block","src":"10240:91:3","statements":[{"expression":{"components":[{"hexValue":"74727565","id":968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":969,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"10268:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":977,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10310:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":975,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:3","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:3","trueExpression":{"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:3","subExpression":{"arguments":[{"id":972,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10291:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":970,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:3","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":980,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":898,"id":981,"nodeType":"Return","src":"10254:66:3"}]}}]},"documentation":{"id":886,"nodeType":"StructuredDocumentation","src":"9279:223:3","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1006,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:3","nodeType":"FunctionDefinition","parameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"input","nameLocation":"9567:5:3","nodeType":"VariableDeclaration","scope":1006,"src":"9553:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":890,"mutability":"mutable","name":"begin","nameLocation":"9590:5:3","nodeType":"VariableDeclaration","scope":1006,"src":"9582:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":892,"mutability":"mutable","name":"end","nameLocation":"9613:3:3","nodeType":"VariableDeclaration","scope":1006,"src":"9605:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:3"},"returnParameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":895,"mutability":"mutable","name":"success","nameLocation":"9650:7:3","nodeType":"VariableDeclaration","scope":1006,"src":"9645:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":894,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"value","nameLocation":"9666:5:3","nodeType":"VariableDeclaration","scope":1006,"src":"9659:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":896,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:3"},"scope":1631,"src":"9507:978:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1024,"nodeType":"Block","src":"10830:67:3","statements":[{"expression":{"arguments":[{"id":1015,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10860:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1019,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"10876:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1017,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:3","typeDescriptions":{}}},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:3","memberName":"length","nodeType":"MemberAccess","src":"10870:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1014,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1025,1056],"referencedDeclaration":1056,"src":"10847:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1013,"id":1023,"nodeType":"Return","src":"10840:50:3"}]},"documentation":{"id":1007,"nodeType":"StructuredDocumentation","src":"10491:259:3","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1025,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:3","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1009,"mutability":"mutable","name":"input","nameLocation":"10791:5:3","nodeType":"VariableDeclaration","scope":1025,"src":"10777:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1008,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:3"},"returnParameters":{"id":1013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1025,"src":"10821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1011,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:3"},"scope":1631,"src":"10755:142:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1055,"nodeType":"Block","src":"11318:156:3","statements":[{"assignments":[1038,1040],"declarations":[{"constant":false,"id":1038,"mutability":"mutable","name":"success","nameLocation":"11334:7:3","nodeType":"VariableDeclaration","scope":1055,"src":"11329:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1037,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1040,"mutability":"mutable","name":"value","nameLocation":"11351:5:3","nodeType":"VariableDeclaration","scope":1055,"src":"11343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1039,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1046,"initialValue":{"arguments":[{"id":1042,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"11376:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1043,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"11383:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1044,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"11390:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1041,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1077,1114],"referencedDeclaration":1114,"src":"11360:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:3"},{"condition":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:3","subExpression":{"id":1047,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1038,"src":"11409:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1052,"nodeType":"IfStatement","src":"11404:41:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1049,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"11425:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1051,"nodeType":"RevertStatement","src":"11418:27:3"}},{"expression":{"id":1053,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1040,"src":"11462:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1036,"id":1054,"nodeType":"Return","src":"11455:12:3"}]},"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"10903:307:3","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:3","nodeType":"FunctionDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"mutability":"mutable","name":"input","nameLocation":"11251:5:3","nodeType":"VariableDeclaration","scope":1056,"src":"11237:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1027,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1030,"mutability":"mutable","name":"begin","nameLocation":"11266:5:3","nodeType":"VariableDeclaration","scope":1056,"src":"11258:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1029,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1032,"mutability":"mutable","name":"end","nameLocation":"11281:3:3","nodeType":"VariableDeclaration","scope":1056,"src":"11273:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:3"},"returnParameters":{"id":1036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"11309:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:3"},"scope":1631,"src":"11215:259:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1076,"nodeType":"Block","src":"11801:86:3","statements":[{"expression":{"arguments":[{"id":1067,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11850:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1071,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"11866:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:3","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:3","memberName":"length","nodeType":"MemberAccess","src":"11860:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"11818:31:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1065,"id":1075,"nodeType":"Return","src":"11811:69:3"}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"11480:218:3","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1077,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:3","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"input","nameLocation":"11742:5:3","nodeType":"VariableDeclaration","scope":1077,"src":"11728:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1058,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:3"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"success","nameLocation":"11777:7:3","nodeType":"VariableDeclaration","scope":1077,"src":"11772:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1061,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1064,"mutability":"mutable","name":"value","nameLocation":"11794:5:3","nodeType":"VariableDeclaration","scope":1077,"src":"11786:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:3"},"scope":1631,"src":"11703:184:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1113,"nodeType":"Block","src":"12295:147:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1091,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12309:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1094,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12321:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1092,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:3","typeDescriptions":{}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:3","memberName":"length","nodeType":"MemberAccess","src":"12315:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12338:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1099,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12346:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1106,"nodeType":"IfStatement","src":"12305:63:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1090,"id":1105,"nodeType":"Return","src":"12351:17:3"}},{"expression":{"arguments":[{"id":1108,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1080,"src":"12417:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1109,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"12424:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1110,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12431:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1107,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"12385:31:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1090,"id":1112,"nodeType":"Return","src":"12378:57:3"}]},"documentation":{"id":1078,"nodeType":"StructuredDocumentation","src":"11893:241:3","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1114,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:3","nodeType":"FunctionDefinition","parameters":{"id":1085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"input","nameLocation":"12187:5:3","nodeType":"VariableDeclaration","scope":1114,"src":"12173:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1079,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"begin","nameLocation":"12210:5:3","nodeType":"VariableDeclaration","scope":1114,"src":"12202:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1081,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"end","nameLocation":"12233:3:3","nodeType":"VariableDeclaration","scope":1114,"src":"12225:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:3"},"returnParameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"success","nameLocation":"12271:7:3","nodeType":"VariableDeclaration","scope":1114,"src":"12266:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1086,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"value","nameLocation":"12288:5:3","nodeType":"VariableDeclaration","scope":1114,"src":"12280:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:3"},"scope":1631,"src":"12139:303:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"12851:881:3","statements":[{"assignments":[1129],"declarations":[{"constant":false,"id":1129,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"12861:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1134,"initialValue":{"arguments":[{"id":1132,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"12889:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1130,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:3","typeDescriptions":{}}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:3"},{"assignments":[1136],"declarations":[{"constant":false,"id":1136,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:3","nodeType":"VariableDeclaration","scope":1216,"src":"12943:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1135,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1156,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1137,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"12961:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"12967:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1146,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"13011:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1147,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13019:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1145,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"12988:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1143,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:3","typeDescriptions":{}}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1150,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:3","typeDescriptions":{}}},"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:3"},{"assignments":[1158],"declarations":[{"constant":false,"id":1158,"mutability":"mutable","name":"offset","nameLocation":"13131:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"13123:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1164,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1159,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"13140:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:3","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"13140:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:3"},{"assignments":[1166],"declarations":[{"constant":false,"id":1166,"mutability":"mutable","name":"result","nameLocation":"13181:6:3","nodeType":"VariableDeclaration","scope":1216,"src":"13173:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1168,"initialValue":{"hexValue":"30","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:3"},{"body":{"id":1210,"nodeType":"Block","src":"13248:447:3","statements":[{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"chr","nameLocation":"13268:3:3","nodeType":"VariableDeclaration","scope":1210,"src":"13262:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1181,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1192,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1187,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"13317:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13325:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1186,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"13294:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1184,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:3","typeDescriptions":{}}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1183,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"13274:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"13347:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:3","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"IfStatement","src":"13343:31:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1198,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1127,"id":1199,"nodeType":"Return","src":"13357:17:3"}},{"expression":{"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1201,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"13388:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:3","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1204,"nodeType":"ExpressionStatement","src":"13388:12:3"},{"id":1209,"nodeType":"UncheckedBlock","src":"13414:271:3","statements":[{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1205,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"13657:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1206,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"13667:3:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1208,"nodeType":"ExpressionStatement","src":"13657:13:3"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13234:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1176,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"13238:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1211,"initializationExpression":{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"i","nameLocation":"13214:1:3","nodeType":"VariableDeclaration","scope":1211,"src":"13206:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1171,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"13218:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1172,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"13226:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:3"},"loopExpression":{"expression":{"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:3","subExpression":{"id":1178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"13245:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1180,"nodeType":"ExpressionStatement","src":"13243:3:3"},"nodeType":"ForStatement","src":"13201:494:3"},{"expression":{"components":[{"hexValue":"74727565","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"13718:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1214,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1127,"id":1215,"nodeType":"Return","src":"13704:21:3"}]},"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"12448:227:3","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:3","nodeType":"FunctionDefinition","parameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1117,"mutability":"mutable","name":"input","nameLocation":"12744:5:3","nodeType":"VariableDeclaration","scope":1217,"src":"12730:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1116,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1119,"mutability":"mutable","name":"begin","nameLocation":"12767:5:3","nodeType":"VariableDeclaration","scope":1217,"src":"12759:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"end","nameLocation":"12790:3:3","nodeType":"VariableDeclaration","scope":1217,"src":"12782:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:3"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"success","nameLocation":"12827:7:3","nodeType":"VariableDeclaration","scope":1217,"src":"12822:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1123,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"value","nameLocation":"12844:5:3","nodeType":"VariableDeclaration","scope":1217,"src":"12836:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:3"},"scope":1631,"src":"12680:1052:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1235,"nodeType":"Block","src":"14030:67:3","statements":[{"expression":{"arguments":[{"id":1226,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14060:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1230,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"14076:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:3","typeDescriptions":{}}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:3","memberName":"length","nodeType":"MemberAccess","src":"14070:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1225,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1236,1267],"referencedDeclaration":1267,"src":"14047:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1224,"id":1234,"nodeType":"Return","src":"14040:50:3"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"13738:212:3","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:3","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"input","nameLocation":"13991:5:3","nodeType":"VariableDeclaration","scope":1236,"src":"13977:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1219,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:3"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1236,"src":"14021:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:3"},"scope":1631,"src":"13955:142:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1266,"nodeType":"Block","src":"14470:165:3","statements":[{"assignments":[1249,1251],"declarations":[{"constant":false,"id":1249,"mutability":"mutable","name":"success","nameLocation":"14486:7:3","nodeType":"VariableDeclaration","scope":1266,"src":"14481:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1248,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"value","nameLocation":"14503:5:3","nodeType":"VariableDeclaration","scope":1266,"src":"14495:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1257,"initialValue":{"arguments":[{"id":1253,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1239,"src":"14528:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1254,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"14535:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1255,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"14542:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1288,1392],"referencedDeclaration":1392,"src":"14512:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:3"},{"condition":{"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:3","subExpression":{"id":1258,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"14561:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1263,"nodeType":"IfStatement","src":"14556:50:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1260,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"14577:27:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"RevertStatement","src":"14570:36:3"}},{"expression":{"id":1264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"14623:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1247,"id":1265,"nodeType":"Return","src":"14616:12:3"}]},"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"14103:259:3","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1267,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:3","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"input","nameLocation":"14403:5:3","nodeType":"VariableDeclaration","scope":1267,"src":"14389:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1238,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"begin","nameLocation":"14418:5:3","nodeType":"VariableDeclaration","scope":1267,"src":"14410:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1240,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1243,"mutability":"mutable","name":"end","nameLocation":"14433:3:3","nodeType":"VariableDeclaration","scope":1267,"src":"14425:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1242,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:3"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1267,"src":"14461:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1245,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:3"},"scope":1631,"src":"14367:268:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1287,"nodeType":"Block","src":"14942:70:3","statements":[{"expression":{"arguments":[{"id":1278,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"14975:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1282,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"14991:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1280,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:3","typeDescriptions":{}}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:3","memberName":"length","nodeType":"MemberAccess","src":"14985:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1288,1392],"referencedDeclaration":1392,"src":"14959:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1276,"id":1286,"nodeType":"Return","src":"14952:53:3"}]},"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"14641:198:3","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:3","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"input","nameLocation":"14883:5:3","nodeType":"VariableDeclaration","scope":1288,"src":"14869:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1269,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:3"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"success","nameLocation":"14918:7:3","nodeType":"VariableDeclaration","scope":1288,"src":"14913:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1272,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1275,"mutability":"mutable","name":"value","nameLocation":"14935:5:3","nodeType":"VariableDeclaration","scope":1288,"src":"14927:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1274,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:3"},"scope":1631,"src":"14844:168:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1391,"nodeType":"Block","src":"15405:733:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15419:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1305,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"15431:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:3","typeDescriptions":{}}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:3","memberName":"length","nodeType":"MemberAccess","src":"15425:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15448:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1310,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15456:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"15415:72:3","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:3","typeDescriptions":{}}},"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1318,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1301,"id":1319,"nodeType":"Return","src":"15461:26:3"}},{"assignments":[1322],"declarations":[{"constant":false,"id":1322,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:3","nodeType":"VariableDeclaration","scope":1391,"src":"15498:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1321,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1345,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1323,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15516:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1324,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15522:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1334,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"15572:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1332,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:3","typeDescriptions":{}}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1336,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15580:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1331,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"15543:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1329,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:3","typeDescriptions":{}}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1339,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:3","typeDescriptions":{}}},"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:3"},{"assignments":[1347],"declarations":[{"constant":false,"id":1347,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:3","nodeType":"VariableDeclaration","scope":1391,"src":"15684:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1346,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1355,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:3","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1349,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"15714:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:3","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"15714:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"15801:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1357,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"15807:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1359,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"15816:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1389,"nodeType":"Block","src":"16081:51:3","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":1382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1383,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:3","typeDescriptions":{}}},"id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1301,"id":1388,"nodeType":"Return","src":"16095:26:3"}]},"id":1390,"nodeType":"IfStatement","src":"15797:335:3","trueBody":{"id":1381,"nodeType":"Block","src":"15832:243:3","statements":[{"assignments":[1362,1364],"declarations":[{"constant":false,"id":1362,"mutability":"mutable","name":"s","nameLocation":"15953:1:3","nodeType":"VariableDeclaration","scope":1381,"src":"15948:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1361,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"v","nameLocation":"15964:1:3","nodeType":"VariableDeclaration","scope":1381,"src":"15956:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[{"id":1366,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"16001:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1367,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1293,"src":"16008:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1368,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"16015:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1365,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"15969:31:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:3"},{"expression":{"components":[{"id":1371,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"16041:1:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":1376,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"16060:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1374,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:3","typeDescriptions":{}}},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1372,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:3","typeDescriptions":{}}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1379,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1301,"id":1380,"nodeType":"Return","src":"16033:31:3"}]}}]},"documentation":{"id":1289,"nodeType":"StructuredDocumentation","src":"15018:226:3","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:3","nodeType":"FunctionDefinition","parameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"input","nameLocation":"15297:5:3","nodeType":"VariableDeclaration","scope":1392,"src":"15283:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1290,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1293,"mutability":"mutable","name":"begin","nameLocation":"15320:5:3","nodeType":"VariableDeclaration","scope":1392,"src":"15312:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1292,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1295,"mutability":"mutable","name":"end","nameLocation":"15343:3:3","nodeType":"VariableDeclaration","scope":1392,"src":"15335:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1294,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:3"},"returnParameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1298,"mutability":"mutable","name":"success","nameLocation":"15381:7:3","nodeType":"VariableDeclaration","scope":1392,"src":"15376:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1297,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"value","nameLocation":"15398:5:3","nodeType":"VariableDeclaration","scope":1392,"src":"15390:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:3"},"scope":1631,"src":"15249:889:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1451,"nodeType":"Block","src":"16207:461:3","statements":[{"assignments":[1400],"declarations":[{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"16223:5:3","nodeType":"VariableDeclaration","scope":1451,"src":"16217:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1399,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1405,"initialValue":{"arguments":[{"id":1403,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"16237:3:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1401,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:3","typeDescriptions":{}}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:3"},{"id":1448,"nodeType":"UncheckedBlock","src":"16401:238:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1406,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16429:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":1407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:3","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16443:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:3","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16489:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:3","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16503:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:3","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16550:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:3","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16564:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:3","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":1441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1440,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":1439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:3","memberName":"max","nodeType":"MemberAccess","src":"16613:15:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1398,"id":1444,"nodeType":"Return","src":"16606:22:3"},"id":1445,"nodeType":"IfStatement","src":"16546:82:3","trueBody":{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16576:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:3","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1438,"nodeType":"ExpressionStatement","src":"16576:11:3"}},"id":1446,"nodeType":"IfStatement","src":"16485:143:3","trueBody":{"expression":{"id":1426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16516:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":1425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:3","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1427,"nodeType":"ExpressionStatement","src":"16516:11:3"}},"id":1447,"nodeType":"IfStatement","src":"16425:203:3","trueBody":{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1413,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16455:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":1414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:3","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1416,"nodeType":"ExpressionStatement","src":"16455:11:3"}}]},{"expression":{"id":1449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"16656:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":1398,"id":1450,"nodeType":"Return","src":"16649:12:3"}]},"id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:3","nodeType":"FunctionDefinition","parameters":{"id":1395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"mutability":"mutable","name":"chr","nameLocation":"16173:3:3","nodeType":"VariableDeclaration","scope":1452,"src":"16166:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1393,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:3"},"returnParameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"16200:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1396,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:3"},"scope":1631,"src":"16144:524:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1617,"nodeType":"Block","src":"17334:1331:3","statements":[{"assignments":[1461],"declarations":[{"constant":false,"id":1461,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:3","nodeType":"VariableDeclaration","scope":1617,"src":"17344:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1460,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1466,"initialValue":{"arguments":[{"id":1464,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"17372:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1462,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:3","typeDescriptions":{}}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:3"},{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"output","nameLocation":"17401:6:3","nodeType":"VariableDeclaration","scope":1617,"src":"17388:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1467,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1476,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":1472,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"17424:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:3","memberName":"length","nodeType":"MemberAccess","src":"17424:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1469,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:3"},{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:3","nodeType":"VariableDeclaration","scope":1617,"src":"17471:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1477,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1480,"initialValue":{"hexValue":"30","id":1479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:3"},{"body":{"id":1609,"nodeType":"Block","src":"17546:854:3","statements":[{"assignments":[1492],"declarations":[{"constant":false,"id":1492,"mutability":"mutable","name":"char","nameLocation":"17567:4:3","nodeType":"VariableDeclaration","scope":1609,"src":"17560:11:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1491,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1500,"initialValue":{"arguments":[{"arguments":[{"id":1496,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"17604:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1497,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"17612:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1495,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"17581:22:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1493,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:3","typeDescriptions":{}}},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:3"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1501,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"17635:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":1505,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17670:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1503,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:3","typeDescriptions":{}}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1508,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1607,"nodeType":"Block","src":"18328:62:3","statements":[{"expression":{"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1600,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18346:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1603,"indexExpression":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:3","subExpression":{"id":1601,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18353:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1604,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18371:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1606,"nodeType":"ExpressionStatement","src":"18346:29:3"}]},"id":1608,"nodeType":"IfStatement","src":"17629:761:3","trueBody":{"id":1599,"nodeType":"Block","src":"17685:637:3","statements":[{"expression":{"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1514,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17703:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1517,"indexExpression":{"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:3","subExpression":{"id":1515,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17710:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1520,"nodeType":"ExpressionStatement","src":"17703:29:3"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1521,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17754:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":1522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:3","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1531,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17823:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:3","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1541,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17892:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":1542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:3","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1551,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"17961:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:3","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1561,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18030:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:3","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1571,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18099:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:3","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"18169:4:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":1582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:3","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1592,"nodeType":"IfStatement","src":"18165:143:3","trueBody":{"id":1591,"nodeType":"Block","src":"18183:125:3","statements":[{"expression":{"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1584,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18261:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1587,"indexExpression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:3","subExpression":{"id":1585,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18268:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1590,"nodeType":"ExpressionStatement","src":"18261:28:3"}]}},"id":1593,"nodeType":"IfStatement","src":"18095:213:3","trueBody":{"expression":{"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1574,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18113:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1577,"indexExpression":{"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:3","subExpression":{"id":1575,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18120:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":1578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1580,"nodeType":"ExpressionStatement","src":"18113:29:3"}},"id":1594,"nodeType":"IfStatement","src":"18026:282:3","trueBody":{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1564,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18044:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1567,"indexExpression":{"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:3","subExpression":{"id":1565,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"18051:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":1568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1570,"nodeType":"ExpressionStatement","src":"18044:28:3"}},"id":1595,"nodeType":"IfStatement","src":"17957:351:3","trueBody":{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1554,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17975:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1557,"indexExpression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:3","subExpression":{"id":1555,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17982:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1560,"nodeType":"ExpressionStatement","src":"17975:28:3"}},"id":1596,"nodeType":"IfStatement","src":"17888:420:3","trueBody":{"expression":{"id":1549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1544,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17906:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1547,"indexExpression":{"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:3","subExpression":{"id":1545,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17913:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":1548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1550,"nodeType":"ExpressionStatement","src":"17906:28:3"}},"id":1597,"nodeType":"IfStatement","src":"17819:489:3","trueBody":{"expression":{"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1534,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17837:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1537,"indexExpression":{"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:3","subExpression":{"id":1535,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17844:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1540,"nodeType":"ExpressionStatement","src":"17837:28:3"}},"id":1598,"nodeType":"IfStatement","src":"17750:558:3","trueBody":{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1524,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17768:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1527,"indexExpression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:3","subExpression":{"id":1525,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"17775:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":1528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:3","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1530,"nodeType":"ExpressionStatement","src":"17768:28:3"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"17522:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1485,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"17526:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:3","memberName":"length","nodeType":"MemberAccess","src":"17526:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1610,"initializationExpression":{"assignments":[1482],"declarations":[{"constant":false,"id":1482,"mutability":"mutable","name":"i","nameLocation":"17519:1:3","nodeType":"VariableDeclaration","scope":1610,"src":"17511:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1481,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1483,"nodeType":"VariableDeclarationStatement","src":"17511:9:3"},"loopExpression":{"expression":{"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:3","subExpression":{"id":1488,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1482,"src":"17543:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1490,"nodeType":"ExpressionStatement","src":"17541:3:3"},"nodeType":"ForStatement","src":"17506:894:3"},{"AST":{"nodeType":"YulBlock","src":"18498:129:3","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:3"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:3"},"nodeType":"YulFunctionCall","src":"18512:28:3"},"nodeType":"YulExpressionStatement","src":"18512:28:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:3","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:3","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:3","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:3"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:3","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:3"},"nodeType":"YulFunctionCall","src":"18592:21:3"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:3"},"nodeType":"YulFunctionCall","src":"18585:29:3"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:3"},"nodeType":"YulFunctionCall","src":"18578:37:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:3"},"nodeType":"YulFunctionCall","src":"18566:50:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:3"},"nodeType":"YulFunctionCall","src":"18553:64:3"},"nodeType":"YulExpressionStatement","src":"18553:64:3"}]},"evmVersion":"paris","externalReferences":[{"declaration":1468,"isOffset":false,"isSlot":false,"src":"18519:6:3","valueSize":1},{"declaration":1468,"isOffset":false,"isSlot":false,"src":"18570:6:3","valueSize":1},{"declaration":1478,"isOffset":false,"isSlot":false,"src":"18527:12:3","valueSize":1},{"declaration":1478,"isOffset":false,"isSlot":false,"src":"18596:12:3","valueSize":1}],"flags":["memory-safe"],"id":1611,"nodeType":"InlineAssembly","src":"18473:154:3"},{"expression":{"arguments":[{"id":1614,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18651:6:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1612,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:3","typeDescriptions":{}}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1459,"id":1616,"nodeType":"Return","src":"18637:21:3"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"16674:576:3","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":1618,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:3","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"input","nameLocation":"17289:5:3","nodeType":"VariableDeclaration","scope":1618,"src":"17275:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1454,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:3"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1618,"src":"17319:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1457,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:3"},"scope":1631,"src":"17255:1410:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"19050:225:3","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:3","statements":[{"nodeType":"YulAssignment","src":"19213:46:3","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:3"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:3","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:3"},"nodeType":"YulFunctionCall","src":"19240:17:3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:3"},"nodeType":"YulFunctionCall","src":"19228:30:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:3"},"nodeType":"YulFunctionCall","src":"19222:37:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:3"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1621,"isOffset":false,"isSlot":false,"src":"19232:6:3","valueSize":1},{"declaration":1623,"isOffset":false,"isSlot":false,"src":"19250:6:3","valueSize":1},{"declaration":1626,"isOffset":false,"isSlot":false,"src":"19213:5:3","valueSize":1}],"flags":["memory-safe"],"id":1628,"nodeType":"InlineAssembly","src":"19174:95:3"}]},"documentation":{"id":1619,"nodeType":"StructuredDocumentation","src":"18671:268:3","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:3","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1621,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:3","nodeType":"VariableDeclaration","scope":1630,"src":"18976:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1620,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"offset","nameLocation":"19005:6:3","nodeType":"VariableDeclaration","scope":1630,"src":"18997:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1622,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:3"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"value","nameLocation":"19043:5:3","nodeType":"VariableDeclaration","scope":1630,"src":"19035:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:3"},"scope":1631,"src":"18944:331:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1632,"src":"297:18980:3","usedErrors":[289,292,295],"usedEvents":[]}],"src":"101:19177:3"},"id":3},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[3252],"Panic":[229],"SafeCast":[5017]},"id":3253,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1633,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":1635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3253,"sourceUnit":230,"src":"129:35:4","symbolAliases":[{"foreign":{"id":1634,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"137:5:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":1637,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3253,"sourceUnit":5018,"src":"165:40:4","symbolAliases":[{"foreign":{"id":1636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"173:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"207:73:4","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":3252,"linearizedBaseContracts":[3252],"name":"Math","nameLocation":"289:4:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1643,"members":[{"id":1639,"name":"Floor","nameLocation":"324:5:4","nodeType":"EnumValue","src":"324:5:4"},{"id":1640,"name":"Ceil","nameLocation":"367:4:4","nodeType":"EnumValue","src":"367:4:4"},{"id":1641,"name":"Trunc","nameLocation":"409:5:4","nodeType":"EnumValue","src":"409:5:4"},{"id":1642,"name":"Expand","nameLocation":"439:6:4","nodeType":"EnumValue","src":"439:6:4"}],"name":"Rounding","nameLocation":"305:8:4","nodeType":"EnumDefinition","src":"300:169:4"},{"body":{"id":1656,"nodeType":"Block","src":"731:112:4","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:4","statements":[{"nodeType":"YulAssignment","src":"780:16:4","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:4"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:4"},"nodeType":"YulFunctionCall","src":"787:9:4"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:4"}]},{"nodeType":"YulAssignment","src":"809:18:4","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:4"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:4"},"nodeType":"YulFunctionCall","src":"817:10:4"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1646,"isOffset":false,"isSlot":false,"src":"791:1:4","valueSize":1},{"declaration":1646,"isOffset":false,"isSlot":false,"src":"825:1:4","valueSize":1},{"declaration":1648,"isOffset":false,"isSlot":false,"src":"794:1:4","valueSize":1},{"declaration":1651,"isOffset":false,"isSlot":false,"src":"809:4:4","valueSize":1},{"declaration":1653,"isOffset":false,"isSlot":false,"src":"780:3:4","valueSize":1},{"declaration":1653,"isOffset":false,"isSlot":false,"src":"820:3:4","valueSize":1}],"flags":["memory-safe"],"id":1655,"nodeType":"InlineAssembly","src":"741:96:4"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"475:163:4","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":1657,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:4","nodeType":"FunctionDefinition","parameters":{"id":1649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"a","nameLocation":"667:1:4","nodeType":"VariableDeclaration","scope":1657,"src":"659:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"b","nameLocation":"678:1:4","nodeType":"VariableDeclaration","scope":1657,"src":"670:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1647,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:4"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"high","nameLocation":"712:4:4","nodeType":"VariableDeclaration","scope":1657,"src":"704:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"low","nameLocation":"726:3:4","nodeType":"VariableDeclaration","scope":1657,"src":"718:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:4"},"scope":3252,"src":"643:200:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1670,"nodeType":"Block","src":"1115:462:4","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:4","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:4"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:4","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:4"},"nodeType":"YulFunctionCall","src":"1474:6:4"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:4"},"nodeType":"YulFunctionCall","src":"1461:20:4"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:4","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:4","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:4"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:4"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:4"},"nodeType":"YulFunctionCall","src":"1501:9:4"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:4"}]},{"nodeType":"YulAssignment","src":"1523:38:4","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:4"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:4"},"nodeType":"YulFunctionCall","src":"1535:12:4"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:4"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:4"},"nodeType":"YulFunctionCall","src":"1549:11:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:4"},"nodeType":"YulFunctionCall","src":"1531:30:4"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1660,"isOffset":false,"isSlot":false,"src":"1468:1:4","valueSize":1},{"declaration":1660,"isOffset":false,"isSlot":false,"src":"1505:1:4","valueSize":1},{"declaration":1662,"isOffset":false,"isSlot":false,"src":"1471:1:4","valueSize":1},{"declaration":1662,"isOffset":false,"isSlot":false,"src":"1508:1:4","valueSize":1},{"declaration":1665,"isOffset":false,"isSlot":false,"src":"1523:4:4","valueSize":1},{"declaration":1667,"isOffset":false,"isSlot":false,"src":"1494:3:4","valueSize":1},{"declaration":1667,"isOffset":false,"isSlot":false,"src":"1543:3:4","valueSize":1},{"declaration":1667,"isOffset":false,"isSlot":false,"src":"1556:3:4","valueSize":1}],"flags":["memory-safe"],"id":1669,"nodeType":"InlineAssembly","src":"1412:159:4"}]},"documentation":{"id":1658,"nodeType":"StructuredDocumentation","src":"849:173:4","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":1671,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:4","nodeType":"FunctionDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"a","nameLocation":"1051:1:4","nodeType":"VariableDeclaration","scope":1671,"src":"1043:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"b","nameLocation":"1062:1:4","nodeType":"VariableDeclaration","scope":1671,"src":"1054:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:4"},"returnParameters":{"id":1668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1665,"mutability":"mutable","name":"high","nameLocation":"1096:4:4","nodeType":"VariableDeclaration","scope":1671,"src":"1088:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1667,"mutability":"mutable","name":"low","nameLocation":"1110:3:4","nodeType":"VariableDeclaration","scope":1671,"src":"1102:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:4"},"scope":3252,"src":"1027:550:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1705,"nodeType":"Block","src":"1784:149:4","statements":[{"id":1704,"nodeType":"UncheckedBlock","src":"1794:133:4","statements":[{"assignments":[1684],"declarations":[{"constant":false,"id":1684,"mutability":"mutable","name":"c","nameLocation":"1826:1:4","nodeType":"VariableDeclaration","scope":1704,"src":"1818:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1688,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1685,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1830:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1686,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1676,"src":"1834:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:4"},{"expression":{"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1689,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1849:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1690,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1859:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1691,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1864:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1694,"nodeType":"ExpressionStatement","src":"1849:16:4"},{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"1879:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1696,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"1888:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1699,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"1908:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1697,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"1892:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"1892:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1703,"nodeType":"ExpressionStatement","src":"1879:37:4"}]}]},"documentation":{"id":1672,"nodeType":"StructuredDocumentation","src":"1583:105:4","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:4","nodeType":"FunctionDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"a","nameLocation":"1717:1:4","nodeType":"VariableDeclaration","scope":1706,"src":"1709:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1673,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1676,"mutability":"mutable","name":"b","nameLocation":"1728:1:4","nodeType":"VariableDeclaration","scope":1706,"src":"1720:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:4"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1679,"mutability":"mutable","name":"success","nameLocation":"1759:7:4","nodeType":"VariableDeclaration","scope":1706,"src":"1754:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1678,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"result","nameLocation":"1776:6:4","nodeType":"VariableDeclaration","scope":1706,"src":"1768:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:4"},"scope":3252,"src":"1693:240:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"2143:149:4","statements":[{"id":1739,"nodeType":"UncheckedBlock","src":"2153:133:4","statements":[{"assignments":[1719],"declarations":[{"constant":false,"id":1719,"mutability":"mutable","name":"c","nameLocation":"2185:1:4","nodeType":"VariableDeclaration","scope":1739,"src":"2177:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1718,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1723,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2189:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"2193:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:4"},{"expression":{"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1724,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2208:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1725,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2218:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1726,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2223:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1729,"nodeType":"ExpressionStatement","src":"2208:16:4"},{"expression":{"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"2238:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1731,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"2247:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1734,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1714,"src":"2267:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1732,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"2251:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"2251:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1738,"nodeType":"ExpressionStatement","src":"2238:37:4"}]}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"1939:108:4","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:4","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"a","nameLocation":"2076:1:4","nodeType":"VariableDeclaration","scope":1741,"src":"2068:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"b","nameLocation":"2087:1:4","nodeType":"VariableDeclaration","scope":1741,"src":"2079:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1710,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:4"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1714,"mutability":"mutable","name":"success","nameLocation":"2118:7:4","nodeType":"VariableDeclaration","scope":1741,"src":"2113:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1713,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"result","nameLocation":"2135:6:4","nodeType":"VariableDeclaration","scope":1741,"src":"2127:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:4"},"scope":3252,"src":"2052:240:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1770,"nodeType":"Block","src":"2505:391:4","statements":[{"id":1769,"nodeType":"UncheckedBlock","src":"2515:375:4","statements":[{"assignments":[1754],"declarations":[{"constant":false,"id":1754,"mutability":"mutable","name":"c","nameLocation":"2547:1:4","nodeType":"VariableDeclaration","scope":1769,"src":"2539:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1758,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1755,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"2551:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1756,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"2555:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:4"},{"AST":{"nodeType":"YulBlock","src":"2595:188:4","statements":[{"nodeType":"YulAssignment","src":"2727:42:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:4"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:4"},"nodeType":"YulFunctionCall","src":"2744:9:4"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:4"},"nodeType":"YulFunctionCall","src":"2741:16:4"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:4"},"nodeType":"YulFunctionCall","src":"2759:9:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:4"},"nodeType":"YulFunctionCall","src":"2738:31:4"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1744,"isOffset":false,"isSlot":false,"src":"2751:1:4","valueSize":1},{"declaration":1744,"isOffset":false,"isSlot":false,"src":"2766:1:4","valueSize":1},{"declaration":1746,"isOffset":false,"isSlot":false,"src":"2755:1:4","valueSize":1},{"declaration":1754,"isOffset":false,"isSlot":false,"src":"2748:1:4","valueSize":1},{"declaration":1749,"isOffset":false,"isSlot":false,"src":"2727:7:4","valueSize":1}],"flags":["memory-safe"],"id":1759,"nodeType":"InlineAssembly","src":"2570:213:4"},{"expression":{"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1760,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"2842:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"2851:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1764,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"2871:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1762,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"2855:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"2855:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1768,"nodeType":"ExpressionStatement","src":"2842:37:4"}]}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"2298:111:4","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":1771,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:4","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"a","nameLocation":"2438:1:4","nodeType":"VariableDeclaration","scope":1771,"src":"2430:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"b","nameLocation":"2449:1:4","nodeType":"VariableDeclaration","scope":1771,"src":"2441:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:4"},"returnParameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"success","nameLocation":"2480:7:4","nodeType":"VariableDeclaration","scope":1771,"src":"2475:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1748,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1751,"mutability":"mutable","name":"result","nameLocation":"2497:6:4","nodeType":"VariableDeclaration","scope":1771,"src":"2489:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:4"},"scope":3252,"src":"2414:482:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1791,"nodeType":"Block","src":"3111:231:4","statements":[{"id":1790,"nodeType":"UncheckedBlock","src":"3121:215:4","statements":[{"expression":{"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1783,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"3145:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1784,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"3155:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1788,"nodeType":"ExpressionStatement","src":"3145:15:4"},{"AST":{"nodeType":"YulBlock","src":"3199:127:4","statements":[{"nodeType":"YulAssignment","src":"3293:19:4","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:4"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:4"},"nodeType":"YulFunctionCall","src":"3303:9:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1774,"isOffset":false,"isSlot":false,"src":"3307:1:4","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":false,"src":"3310:1:4","valueSize":1},{"declaration":1781,"isOffset":false,"isSlot":false,"src":"3293:6:4","valueSize":1}],"flags":["memory-safe"],"id":1789,"nodeType":"InlineAssembly","src":"3174:152:4"}]}]},"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"2902:113:4","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1792,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:4","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"a","nameLocation":"3044:1:4","nodeType":"VariableDeclaration","scope":1792,"src":"3036:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1773,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"b","nameLocation":"3055:1:4","nodeType":"VariableDeclaration","scope":1792,"src":"3047:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:4"},"returnParameters":{"id":1782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"success","nameLocation":"3086:7:4","nodeType":"VariableDeclaration","scope":1792,"src":"3081:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1778,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"result","nameLocation":"3103:6:4","nodeType":"VariableDeclaration","scope":1792,"src":"3095:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:4"},"scope":3252,"src":"3020:322:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"3567:231:4","statements":[{"id":1811,"nodeType":"UncheckedBlock","src":"3577:215:4","statements":[{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1804,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3601:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1805,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1797,"src":"3611:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1809,"nodeType":"ExpressionStatement","src":"3601:15:4"},{"AST":{"nodeType":"YulBlock","src":"3655:127:4","statements":[{"nodeType":"YulAssignment","src":"3749:19:4","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:4"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:4"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:4"},"nodeType":"YulFunctionCall","src":"3759:9:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1795,"isOffset":false,"isSlot":false,"src":"3763:1:4","valueSize":1},{"declaration":1797,"isOffset":false,"isSlot":false,"src":"3766:1:4","valueSize":1},{"declaration":1802,"isOffset":false,"isSlot":false,"src":"3749:6:4","valueSize":1}],"flags":["memory-safe"],"id":1810,"nodeType":"InlineAssembly","src":"3630:152:4"}]}]},"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"3348:123:4","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1813,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:4","nodeType":"FunctionDefinition","parameters":{"id":1798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"a","nameLocation":"3500:1:4","nodeType":"VariableDeclaration","scope":1813,"src":"3492:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1794,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1797,"mutability":"mutable","name":"b","nameLocation":"3511:1:4","nodeType":"VariableDeclaration","scope":1813,"src":"3503:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1796,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:4"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"success","nameLocation":"3542:7:4","nodeType":"VariableDeclaration","scope":1813,"src":"3537:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1799,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"result","nameLocation":"3559:6:4","nodeType":"VariableDeclaration","scope":1813,"src":"3551:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:4"},"scope":3252,"src":"3476:322:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1842,"nodeType":"Block","src":"3989:122:4","statements":[{"assignments":[1824,1826],"declarations":[{"constant":false,"id":1824,"mutability":"mutable","name":"success","nameLocation":"4005:7:4","nodeType":"VariableDeclaration","scope":1842,"src":"4000:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1823,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"result","nameLocation":"4022:6:4","nodeType":"VariableDeclaration","scope":1842,"src":"4014:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1831,"initialValue":{"arguments":[{"id":1828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"4039:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"4042:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1827,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"4032:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:4"},{"expression":{"arguments":[{"id":1833,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"4069:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1834,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"4078:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1836,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:4","memberName":"max","nodeType":"MemberAccess","src":"4086:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1832,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"4061:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1822,"id":1841,"nodeType":"Return","src":"4054:50:4"}]},"documentation":{"id":1814,"nodeType":"StructuredDocumentation","src":"3804:103:4","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1843,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:4","nodeType":"FunctionDefinition","parameters":{"id":1819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1816,"mutability":"mutable","name":"a","nameLocation":"3943:1:4","nodeType":"VariableDeclaration","scope":1843,"src":"3935:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1818,"mutability":"mutable","name":"b","nameLocation":"3954:1:4","nodeType":"VariableDeclaration","scope":1843,"src":"3946:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1817,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:4"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1843,"src":"3980:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1820,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:4"},"scope":3252,"src":"3912:199:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1862,"nodeType":"Block","src":"4294:73:4","statements":[{"assignments":[null,1854],"declarations":[null,{"constant":false,"id":1854,"mutability":"mutable","name":"result","nameLocation":"4315:6:4","nodeType":"VariableDeclaration","scope":1862,"src":"4307:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1859,"initialValue":{"arguments":[{"id":1856,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"4332:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1857,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"4335:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1855,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"4325:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:4"},{"expression":{"id":1860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"4354:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1852,"id":1861,"nodeType":"Return","src":"4347:13:4"}]},"documentation":{"id":1844,"nodeType":"StructuredDocumentation","src":"4117:95:4","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":1863,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:4","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"a","nameLocation":"4248:1:4","nodeType":"VariableDeclaration","scope":1863,"src":"4240:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1845,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"b","nameLocation":"4259:1:4","nodeType":"VariableDeclaration","scope":1863,"src":"4251:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:4"},"returnParameters":{"id":1852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1863,"src":"4285:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:4"},"scope":3252,"src":"4217:150:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1892,"nodeType":"Block","src":"4564:122:4","statements":[{"assignments":[1874,1876],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"success","nameLocation":"4580:7:4","nodeType":"VariableDeclaration","scope":1892,"src":"4575:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1873,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"result","nameLocation":"4597:6:4","nodeType":"VariableDeclaration","scope":1892,"src":"4589:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1881,"initialValue":{"arguments":[{"id":1878,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"4614:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1879,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"4617:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1877,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"4607:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:4"},{"expression":{"arguments":[{"id":1883,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"4644:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1884,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"4653:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":1887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1886,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:4","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1885,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:4","memberName":"max","nodeType":"MemberAccess","src":"4661:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"4636:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1872,"id":1891,"nodeType":"Return","src":"4629:50:4"}]},"documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"4373:109:4","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":1893,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:4","nodeType":"FunctionDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1866,"mutability":"mutable","name":"a","nameLocation":"4518:1:4","nodeType":"VariableDeclaration","scope":1893,"src":"4510:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1865,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1868,"mutability":"mutable","name":"b","nameLocation":"4529:1:4","nodeType":"VariableDeclaration","scope":1893,"src":"4521:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:4"},"returnParameters":{"id":1872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1893,"src":"4555:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1870,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:4"},"scope":3252,"src":"4487:199:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1919,"nodeType":"Block","src":"5158:207:4","statements":[{"id":1918,"nodeType":"UncheckedBlock","src":"5168:191:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5306:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1898,"src":"5312:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"5316:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1909,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1912,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1896,"src":"5337:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1910,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"5321:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"5321:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1904,"id":1917,"nodeType":"Return","src":"5299:49:4"}]}]},"documentation":{"id":1894,"nodeType":"StructuredDocumentation","src":"4692:374:4","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1920,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:4","nodeType":"FunctionDefinition","parameters":{"id":1901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"condition","nameLocation":"5093:9:4","nodeType":"VariableDeclaration","scope":1920,"src":"5088:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1895,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1898,"mutability":"mutable","name":"a","nameLocation":"5112:1:4","nodeType":"VariableDeclaration","scope":1920,"src":"5104:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1900,"mutability":"mutable","name":"b","nameLocation":"5123:1:4","nodeType":"VariableDeclaration","scope":1920,"src":"5115:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1899,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:4"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1903,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1920,"src":"5149:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:4"},"scope":3252,"src":"5071:294:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1938,"nodeType":"Block","src":"5502:44:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"5527:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1932,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5531:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1923,"src":"5534:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1935,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"5537:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1930,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"5519:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1929,"id":1937,"nodeType":"Return","src":"5512:27:4"}]},"documentation":{"id":1921,"nodeType":"StructuredDocumentation","src":"5371:59:4","text":" @dev Returns the largest of two numbers."},"id":1939,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:4","nodeType":"FunctionDefinition","parameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"a","nameLocation":"5456:1:4","nodeType":"VariableDeclaration","scope":1939,"src":"5448:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"b","nameLocation":"5467:1:4","nodeType":"VariableDeclaration","scope":1939,"src":"5459:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:4"},"returnParameters":{"id":1929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1939,"src":"5493:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:4"},"scope":3252,"src":"5435:111:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1957,"nodeType":"Block","src":"5684:44:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1950,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5709:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1951,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"5713:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1953,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"5716:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1954,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"5719:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1949,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"5701:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1948,"id":1956,"nodeType":"Return","src":"5694:27:4"}]},"documentation":{"id":1940,"nodeType":"StructuredDocumentation","src":"5552:60:4","text":" @dev Returns the smallest of two numbers."},"id":1958,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:4","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1942,"mutability":"mutable","name":"a","nameLocation":"5638:1:4","nodeType":"VariableDeclaration","scope":1958,"src":"5630:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1941,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"b","nameLocation":"5649:1:4","nodeType":"VariableDeclaration","scope":1958,"src":"5641:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:4"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1958,"src":"5675:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1946,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:4"},"scope":3252,"src":"5617:111:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1980,"nodeType":"Block","src":"5912:82:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1968,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"5967:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1969,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"5971:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1971,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1972,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1961,"src":"5977:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1973,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"5981:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1967,"id":1979,"nodeType":"Return","src":"5959:28:4"}]},"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"5734:102:4","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1981,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:4","nodeType":"FunctionDefinition","parameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1961,"mutability":"mutable","name":"a","nameLocation":"5866:1:4","nodeType":"VariableDeclaration","scope":1981,"src":"5858:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1963,"mutability":"mutable","name":"b","nameLocation":"5877:1:4","nodeType":"VariableDeclaration","scope":1981,"src":"5869:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1962,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:4"},"returnParameters":{"id":1967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1981,"src":"5903:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:4"},"scope":3252,"src":"5841:153:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2021,"nodeType":"Block","src":"6286:633:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6300:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2002,"nodeType":"IfStatement","src":"6296:150:4","trueBody":{"id":2001,"nodeType":"Block","src":"6308:138:4","statements":[{"expression":{"arguments":[{"expression":{"id":1997,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6412:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:4","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"6412:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1994,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"6400:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:4","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"6400:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2000,"nodeType":"ExpressionStatement","src":"6400:35:4"}]}},{"id":2020,"nodeType":"UncheckedBlock","src":"6829:84:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6876:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2003,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"6860:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"6860:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6887:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2012,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2013,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6896:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1990,"id":2019,"nodeType":"Return","src":"6853:49:4"}]}]},"documentation":{"id":1982,"nodeType":"StructuredDocumentation","src":"6000:210:4","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":2022,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:4","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1984,"mutability":"mutable","name":"a","nameLocation":"6240:1:4","nodeType":"VariableDeclaration","scope":2022,"src":"6232:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"b","nameLocation":"6251:1:4","nodeType":"VariableDeclaration","scope":2022,"src":"6243:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1985,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:4"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2022,"src":"6277:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1988,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:4"},"scope":3252,"src":"6215:704:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2157,"nodeType":"Block","src":"7340:3585:4","statements":[{"id":2156,"nodeType":"UncheckedBlock","src":"7350:3569:4","statements":[{"assignments":[2035,2037],"declarations":[{"constant":false,"id":2035,"mutability":"mutable","name":"high","nameLocation":"7383:4:4","nodeType":"VariableDeclaration","scope":2156,"src":"7375:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2034,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2037,"mutability":"mutable","name":"low","nameLocation":"7397:3:4","nodeType":"VariableDeclaration","scope":2156,"src":"7389:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2042,"initialValue":{"arguments":[{"id":2039,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2025,"src":"7411:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2040,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7414:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2038,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"7404:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"7498:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2051,"nodeType":"IfStatement","src":"7494:365:4","trueBody":{"id":2050,"nodeType":"Block","src":"7509:350:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2046,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"7827:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2047,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7833:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2049,"nodeType":"Return","src":"7820:24:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2052,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7969:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2053,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"7984:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2070,"nodeType":"IfStatement","src":"7965:142:4","trueBody":{"id":2069,"nodeType":"Block","src":"7990:117:4","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8028:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":2062,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8046:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:4","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"8046:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2064,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8070:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:4","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":192,"src":"8070:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2058,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"8020:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2055,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"8008:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:4","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"8008:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2068,"nodeType":"ExpressionStatement","src":"8008:84:4"}]}},{"assignments":[2072],"declarations":[{"constant":false,"id":2072,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:4","nodeType":"VariableDeclaration","scope":2156,"src":"8359:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2071,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2073,"nodeType":"VariableDeclarationStatement","src":"8359:17:4"},{"AST":{"nodeType":"YulBlock","src":"8415:283:4","statements":[{"nodeType":"YulAssignment","src":"8484:38:4","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:4"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:4"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:4"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:4"},"nodeType":"YulFunctionCall","src":"8497:25:4"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:4"}]},{"nodeType":"YulAssignment","src":"8604:37:4","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:4"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:4"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:4"},"nodeType":"YulFunctionCall","src":"8622:18:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:4"},"nodeType":"YulFunctionCall","src":"8612:29:4"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:4"}]},{"nodeType":"YulAssignment","src":"8658:26:4","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:4"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:4"},"nodeType":"YulFunctionCall","src":"8665:19:4"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2029,"isOffset":false,"isSlot":false,"src":"8510:11:4","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"8604:4:4","valueSize":1},{"declaration":2035,"isOffset":false,"isSlot":false,"src":"8616:4:4","valueSize":1},{"declaration":2037,"isOffset":false,"isSlot":false,"src":"8636:3:4","valueSize":1},{"declaration":2037,"isOffset":false,"isSlot":false,"src":"8658:3:4","valueSize":1},{"declaration":2037,"isOffset":false,"isSlot":false,"src":"8669:3:4","valueSize":1},{"declaration":2072,"isOffset":false,"isSlot":false,"src":"8484:9:4","valueSize":1},{"declaration":2072,"isOffset":false,"isSlot":false,"src":"8625:9:4","valueSize":1},{"declaration":2072,"isOffset":false,"isSlot":false,"src":"8674:9:4","valueSize":1},{"declaration":2025,"isOffset":false,"isSlot":false,"src":"8504:1:4","valueSize":1},{"declaration":2027,"isOffset":false,"isSlot":false,"src":"8507:1:4","valueSize":1}],"flags":["memory-safe"],"id":2074,"nodeType":"InlineAssembly","src":"8390:308:4"},{"assignments":[2076],"declarations":[{"constant":false,"id":2076,"mutability":"mutable","name":"twos","nameLocation":"8910:4:4","nodeType":"VariableDeclaration","scope":2156,"src":"8902:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2083,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8917:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2079,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"8936:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2081,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:4"},{"AST":{"nodeType":"YulBlock","src":"8987:359:4","statements":[{"nodeType":"YulAssignment","src":"9052:37:4","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:4"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:4"},"nodeType":"YulFunctionCall","src":"9067:22:4"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:4"}]},{"nodeType":"YulAssignment","src":"9153:21:4","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:4"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:4"},"nodeType":"YulFunctionCall","src":"9160:14:4"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:4"}]},{"nodeType":"YulAssignment","src":"9293:39:4","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:4","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:4"},"nodeType":"YulFunctionCall","src":"9309:12:4"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:4"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:4"},"nodeType":"YulFunctionCall","src":"9305:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:4"},"nodeType":"YulFunctionCall","src":"9301:31:4"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2029,"isOffset":false,"isSlot":false,"src":"9052:11:4","valueSize":1},{"declaration":2029,"isOffset":false,"isSlot":false,"src":"9071:11:4","valueSize":1},{"declaration":2037,"isOffset":false,"isSlot":false,"src":"9153:3:4","valueSize":1},{"declaration":2037,"isOffset":false,"isSlot":false,"src":"9164:3:4","valueSize":1},{"declaration":2076,"isOffset":false,"isSlot":false,"src":"9084:4:4","valueSize":1},{"declaration":2076,"isOffset":false,"isSlot":false,"src":"9169:4:4","valueSize":1},{"declaration":2076,"isOffset":false,"isSlot":false,"src":"9293:4:4","valueSize":1},{"declaration":2076,"isOffset":false,"isSlot":false,"src":"9316:4:4","valueSize":1},{"declaration":2076,"isOffset":false,"isSlot":false,"src":"9323:4:4","valueSize":1}],"flags":["memory-safe"],"id":2084,"nodeType":"InlineAssembly","src":"8962:384:4"},{"expression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"9409:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"9416:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2087,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"9423:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ExpressionStatement","src":"9409:18:4"},{"assignments":[2092],"declarations":[{"constant":false,"id":2092,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:4","nodeType":"VariableDeclaration","scope":2156,"src":"9762:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2091,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2099,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2094,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9785:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:4"},{"expression":{"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2100,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10018:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2102,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"10033:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2103,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10047:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2107,"nodeType":"ExpressionStatement","src":"10018:36:4"},{"expression":{"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2108,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10088:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2110,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"10103:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2111,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10117:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"nodeType":"ExpressionStatement","src":"10088:36:4"},{"expression":{"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2116,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10160:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2118,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"10175:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2119,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10189:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2123,"nodeType":"ExpressionStatement","src":"10160:36:4"},{"expression":{"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2124,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10231:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"10246:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2127,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10260:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2131,"nodeType":"ExpressionStatement","src":"10231:36:4"},{"expression":{"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2132,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10304:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"10319:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2135,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10333:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2139,"nodeType":"ExpressionStatement","src":"10304:36:4"},{"expression":{"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10378:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2142,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"10393:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2143,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10407:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2147,"nodeType":"ExpressionStatement","src":"10378:36:4"},{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"10859:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2149,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"10868:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2150,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"10874:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ExpressionStatement","src":"10859:22:4"},{"expression":{"id":2154,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2032,"src":"10902:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2033,"id":2155,"nodeType":"Return","src":"10895:13:4"}]}]},"documentation":{"id":2023,"nodeType":"StructuredDocumentation","src":"6925:312:4","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":2158,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:4","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2025,"mutability":"mutable","name":"x","nameLocation":"7266:1:4","nodeType":"VariableDeclaration","scope":2158,"src":"7258:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2024,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2027,"mutability":"mutable","name":"y","nameLocation":"7277:1:4","nodeType":"VariableDeclaration","scope":2158,"src":"7269:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2026,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:4","nodeType":"VariableDeclaration","scope":2158,"src":"7280:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:4"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2032,"mutability":"mutable","name":"result","nameLocation":"7332:6:4","nodeType":"VariableDeclaration","scope":2158,"src":"7324:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2031,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:4"},"scope":3252,"src":"7242:3683:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2194,"nodeType":"Block","src":"11164:128:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2174,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"11188:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2175,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"11191:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2176,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11194:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2173,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2158,2195],"referencedDeclaration":2158,"src":"11181:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2181,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"11242:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}],"id":2180,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"11225:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1643_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2184,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"11262:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2185,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"11265:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2186,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11268:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2183,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:4","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2178,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"11209:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"11209:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2172,"id":2193,"nodeType":"Return","src":"11174:111:4"}]},"documentation":{"id":2159,"nodeType":"StructuredDocumentation","src":"10931:118:4","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2195,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:4","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"mutability":"mutable","name":"x","nameLocation":"11078:1:4","nodeType":"VariableDeclaration","scope":2195,"src":"11070:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2163,"mutability":"mutable","name":"y","nameLocation":"11089:1:4","nodeType":"VariableDeclaration","scope":2195,"src":"11081:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2165,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:4","nodeType":"VariableDeclaration","scope":2195,"src":"11092:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:4","nodeType":"VariableDeclaration","scope":2195,"src":"11113:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"},"typeName":{"id":2167,"nodeType":"UserDefinedTypeName","pathNode":{"id":2166,"name":"Rounding","nameLocations":["11113:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"11113:8:4"},"referencedDeclaration":1643,"src":"11113:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:4"},"returnParameters":{"id":2172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2195,"src":"11155:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:4"},"scope":3252,"src":"11054:238:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2244,"nodeType":"Block","src":"11500:245:4","statements":[{"id":2243,"nodeType":"UncheckedBlock","src":"11510:229:4","statements":[{"assignments":[2208,2210],"declarations":[{"constant":false,"id":2208,"mutability":"mutable","name":"high","nameLocation":"11543:4:4","nodeType":"VariableDeclaration","scope":2243,"src":"11535:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2210,"mutability":"mutable","name":"low","nameLocation":"11557:3:4","nodeType":"VariableDeclaration","scope":2243,"src":"11549:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2215,"initialValue":{"arguments":[{"id":2212,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"11571:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2213,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"11574:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2211,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"11564:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":2214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2216,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"11594:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2218,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"11607:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2229,"nodeType":"IfStatement","src":"11590:86:4","trueBody":{"id":2228,"nodeType":"Block","src":"11610:66:4","statements":[{"expression":{"arguments":[{"expression":{"id":2224,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"11640:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:4","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":192,"src":"11640:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2221,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"11628:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:4","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"11628:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2227,"nodeType":"ExpressionStatement","src":"11628:33:4"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2230,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"11697:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":2231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:4","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2232,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"11712:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":2234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2236,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2237,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2210,"src":"11719:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2238,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2202,"src":"11726:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2206,"id":2242,"nodeType":"Return","src":"11689:39:4"}]}]},"documentation":{"id":2196,"nodeType":"StructuredDocumentation","src":"11298:111:4","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":2245,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:4","nodeType":"FunctionDefinition","parameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2198,"mutability":"mutable","name":"x","nameLocation":"11438:1:4","nodeType":"VariableDeclaration","scope":2245,"src":"11430:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"y","nameLocation":"11449:1:4","nodeType":"VariableDeclaration","scope":2245,"src":"11441:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2202,"mutability":"mutable","name":"n","nameLocation":"11458:1:4","nodeType":"VariableDeclaration","scope":2245,"src":"11452:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2201,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:4"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"result","nameLocation":"11492:6:4","nodeType":"VariableDeclaration","scope":2245,"src":"11484:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:4"},"scope":3252,"src":"11414:331:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2283,"nodeType":"Block","src":"11963:113:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2261,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"11987:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2262,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"11990:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2263,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"11993:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2260,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[2245,2284],"referencedDeclaration":2245,"src":"11980:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2268,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"12031:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}],"id":2267,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"12014:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1643_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2271,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"12051:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2272,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2250,"src":"12054:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2274,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"12062:1:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2270,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:4","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2265,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"11998:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"11998:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2259,"id":2282,"nodeType":"Return","src":"11973:96:4"}]},"documentation":{"id":2246,"nodeType":"StructuredDocumentation","src":"11751:109:4","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":2284,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:4","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"x","nameLocation":"11889:1:4","nodeType":"VariableDeclaration","scope":2284,"src":"11881:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2250,"mutability":"mutable","name":"y","nameLocation":"11900:1:4","nodeType":"VariableDeclaration","scope":2284,"src":"11892:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2249,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2252,"mutability":"mutable","name":"n","nameLocation":"11909:1:4","nodeType":"VariableDeclaration","scope":2284,"src":"11903:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2251,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:4","nodeType":"VariableDeclaration","scope":2284,"src":"11912:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"},"typeName":{"id":2254,"nodeType":"UserDefinedTypeName","pathNode":{"id":2253,"name":"Rounding","nameLocations":["11912:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"11912:8:4"},"referencedDeclaration":1643,"src":"11912:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:4"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2284,"src":"11954:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:4"},"scope":3252,"src":"11865:211:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2380,"nodeType":"Block","src":"12710:1849:4","statements":[{"id":2379,"nodeType":"UncheckedBlock","src":"12720:1833:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2294,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"12748:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"nodeType":"IfStatement","src":"12744:20:4","trueBody":{"expression":{"hexValue":"30","id":2297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2293,"id":2298,"nodeType":"Return","src":"12756:8:4"}},{"assignments":[2301],"declarations":[{"constant":false,"id":2301,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:4","nodeType":"VariableDeclaration","scope":2379,"src":"13235:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2305,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2302,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2287,"src":"13255:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2303,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"13259:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:4"},{"assignments":[2307],"declarations":[{"constant":false,"id":2307,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:4","nodeType":"VariableDeclaration","scope":2379,"src":"13274:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2306,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2309,"initialValue":{"id":2308,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"13288:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:4"},{"assignments":[2311],"declarations":[{"constant":false,"id":2311,"mutability":"mutable","name":"x","nameLocation":"13432:1:4","nodeType":"VariableDeclaration","scope":2379,"src":"13425:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2310,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2313,"initialValue":{"hexValue":"30","id":2312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:4"},{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"y","nameLocation":"13458:1:4","nodeType":"VariableDeclaration","scope":2379,"src":"13451:8:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2314,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2317,"initialValue":{"hexValue":"31","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:4"},{"body":{"id":2354,"nodeType":"Block","src":"13501:882:4","statements":[{"assignments":[2322],"declarations":[{"constant":false,"id":2322,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:4","nodeType":"VariableDeclaration","scope":2354,"src":"13519:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2321,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2326,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"13538:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2324,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"13544:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:4"},{"expression":{"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2327,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"13573:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2328,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"13578:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2329,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2330,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"13678:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"13923:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2332,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"13929:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2333,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"13941:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:4","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2338,"nodeType":"ExpressionStatement","src":"13572:395:4"},{"expression":{"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2339,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"13987:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2340,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13990:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2341,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2342,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14072:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2343,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"14326:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14330:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":2347,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"14341:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2345,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:4","typeDescriptions":{}}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2351,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:4","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2353,"nodeType":"ExpressionStatement","src":"13986:382:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2318,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"13485:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2355,"nodeType":"WhileStatement","src":"13478:905:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"14401:3:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":2357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2361,"nodeType":"IfStatement","src":"14397:22:4","trueBody":{"expression":{"hexValue":"30","id":2359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2293,"id":2360,"nodeType":"Return","src":"14411:8:4"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2363,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"14470:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2366,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"14477:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:4","subExpression":{"id":2369,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"14490:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2367,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:4","typeDescriptions":{}}},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2375,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2311,"src":"14502:1:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:4","typeDescriptions":{}}},"id":2376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2362,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"14462:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2293,"id":2378,"nodeType":"Return","src":"14455:50:4"}]}]},"documentation":{"id":2285,"nodeType":"StructuredDocumentation","src":"12082:553:4","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":2381,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:4","nodeType":"FunctionDefinition","parameters":{"id":2290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"a","nameLocation":"12664:1:4","nodeType":"VariableDeclaration","scope":2381,"src":"12656:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2286,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2289,"mutability":"mutable","name":"n","nameLocation":"12675:1:4","nodeType":"VariableDeclaration","scope":2381,"src":"12667:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2288,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:4"},"returnParameters":{"id":2293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2381,"src":"12701:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2291,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:4"},"scope":3252,"src":"12640:1919:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2401,"nodeType":"Block","src":"15159:82:4","statements":[{"id":2400,"nodeType":"UncheckedBlock","src":"15169:66:4","statements":[{"expression":{"arguments":[{"id":2393,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"15212:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2394,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"15215:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":2395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2397,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"15222:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2391,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"15200:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$3252_$","typeString":"type(library Math)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:4","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":2438,"src":"15200:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":2398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2390,"id":2399,"nodeType":"Return","src":"15193:31:4"}]}]},"documentation":{"id":2382,"nodeType":"StructuredDocumentation","src":"14565:514:4","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":2402,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:4","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"a","nameLocation":"15113:1:4","nodeType":"VariableDeclaration","scope":2402,"src":"15105:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2386,"mutability":"mutable","name":"p","nameLocation":"15124:1:4","nodeType":"VariableDeclaration","scope":2402,"src":"15116:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:4"},"returnParameters":{"id":2390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2402,"src":"15150:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2388,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:4"},"scope":3252,"src":"15084:157:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2437,"nodeType":"Block","src":"16011:174:4","statements":[{"assignments":[2415,2417],"declarations":[{"constant":false,"id":2415,"mutability":"mutable","name":"success","nameLocation":"16027:7:4","nodeType":"VariableDeclaration","scope":2437,"src":"16022:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2414,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"result","nameLocation":"16044:6:4","nodeType":"VariableDeclaration","scope":2437,"src":"16036:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2423,"initialValue":{"arguments":[{"id":2419,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"16064:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2420,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"16067:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2421,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"16070:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2418,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2462,2544],"referencedDeclaration":2462,"src":"16054:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:4"},{"condition":{"id":2425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:4","subExpression":{"id":2424,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2415,"src":"16087:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2434,"nodeType":"IfStatement","src":"16082:74:4","trueBody":{"id":2433,"nodeType":"Block","src":"16096:60:4","statements":[{"expression":{"arguments":[{"expression":{"id":2429,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"16122:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:4","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"16122:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2426,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"16110:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:4","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"16110:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2432,"nodeType":"ExpressionStatement","src":"16110:35:4"}]}},{"expression":{"id":2435,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"16172:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2413,"id":2436,"nodeType":"Return","src":"16165:13:4"}]},"documentation":{"id":2403,"nodeType":"StructuredDocumentation","src":"15247:678:4","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":2438,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:4","nodeType":"FunctionDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"b","nameLocation":"15954:1:4","nodeType":"VariableDeclaration","scope":2438,"src":"15946:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2404,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"e","nameLocation":"15965:1:4","nodeType":"VariableDeclaration","scope":2438,"src":"15957:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2406,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2409,"mutability":"mutable","name":"m","nameLocation":"15976:1:4","nodeType":"VariableDeclaration","scope":2438,"src":"15968:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:4"},"returnParameters":{"id":2413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2438,"src":"16002:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2411,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:4"},"scope":3252,"src":"15930:255:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2461,"nodeType":"Block","src":"17039:1493:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2452,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"17053:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2459,"nodeType":"IfStatement","src":"17049:29:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2451,"id":2458,"nodeType":"Return","src":"17061:17:4"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:4","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:4"},"nodeType":"YulFunctionCall","src":"17138:11:4"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:4","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:4","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:4"},"nodeType":"YulFunctionCall","src":"18050:17:4"},"nodeType":"YulExpressionStatement","src":"18050:17:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:4"},"nodeType":"YulFunctionCall","src":"18087:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:4","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:4"},"nodeType":"YulFunctionCall","src":"18080:28:4"},"nodeType":"YulExpressionStatement","src":"18080:28:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:4"},"nodeType":"YulFunctionCall","src":"18128:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:4","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:4"},"nodeType":"YulFunctionCall","src":"18121:28:4"},"nodeType":"YulExpressionStatement","src":"18121:28:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:4"},"nodeType":"YulFunctionCall","src":"18169:14:4"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:4"},"nodeType":"YulFunctionCall","src":"18162:25:4"},"nodeType":"YulExpressionStatement","src":"18162:25:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:4"},"nodeType":"YulFunctionCall","src":"18207:14:4"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:4"},"nodeType":"YulFunctionCall","src":"18200:25:4"},"nodeType":"YulExpressionStatement","src":"18200:25:4"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:4","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:4"},"nodeType":"YulFunctionCall","src":"18245:14:4"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:4"},"nodeType":"YulFunctionCall","src":"18238:25:4"},"nodeType":"YulExpressionStatement","src":"18238:25:4"},{"nodeType":"YulAssignment","src":"18425:57:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:4"},"nodeType":"YulFunctionCall","src":"18447:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:4","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:4","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:4","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:4","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:4"},"nodeType":"YulFunctionCall","src":"18436:46:4"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:4"}]},{"nodeType":"YulAssignment","src":"18495:21:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:4","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:4"},"nodeType":"YulFunctionCall","src":"18505:11:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2441,"isOffset":false,"isSlot":false,"src":"18185:1:4","valueSize":1},{"declaration":2443,"isOffset":false,"isSlot":false,"src":"18223:1:4","valueSize":1},{"declaration":2445,"isOffset":false,"isSlot":false,"src":"18261:1:4","valueSize":1},{"declaration":2450,"isOffset":false,"isSlot":false,"src":"18495:6:4","valueSize":1},{"declaration":2448,"isOffset":false,"isSlot":false,"src":"18425:7:4","valueSize":1}],"flags":["memory-safe"],"id":2460,"nodeType":"InlineAssembly","src":"17088:1438:4"}]},"documentation":{"id":2439,"nodeType":"StructuredDocumentation","src":"16191:738:4","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:4","nodeType":"FunctionDefinition","parameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2441,"mutability":"mutable","name":"b","nameLocation":"16961:1:4","nodeType":"VariableDeclaration","scope":2462,"src":"16953:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2440,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2443,"mutability":"mutable","name":"e","nameLocation":"16972:1:4","nodeType":"VariableDeclaration","scope":2462,"src":"16964:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2445,"mutability":"mutable","name":"m","nameLocation":"16983:1:4","nodeType":"VariableDeclaration","scope":2462,"src":"16975:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2444,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:4"},"returnParameters":{"id":2451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2448,"mutability":"mutable","name":"success","nameLocation":"17014:7:4","nodeType":"VariableDeclaration","scope":2462,"src":"17009:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2447,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2450,"mutability":"mutable","name":"result","nameLocation":"17031:6:4","nodeType":"VariableDeclaration","scope":2462,"src":"17023:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:4"},"scope":3252,"src":"16934:1598:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2497,"nodeType":"Block","src":"18729:179:4","statements":[{"assignments":[2475,2477],"declarations":[{"constant":false,"id":2475,"mutability":"mutable","name":"success","nameLocation":"18745:7:4","nodeType":"VariableDeclaration","scope":2497,"src":"18740:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2474,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"result","nameLocation":"18767:6:4","nodeType":"VariableDeclaration","scope":2497,"src":"18754:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2476,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2483,"initialValue":{"arguments":[{"id":2479,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"18787:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2480,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"18790:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2481,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"18793:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2478,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[2462,2544],"referencedDeclaration":2544,"src":"18777:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:4"},{"condition":{"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:4","subExpression":{"id":2484,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"18810:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2494,"nodeType":"IfStatement","src":"18805:74:4","trueBody":{"id":2493,"nodeType":"Block","src":"18819:60:4","statements":[{"expression":{"arguments":[{"expression":{"id":2489,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"18845:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:4","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":196,"src":"18845:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2486,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"18833:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$229_$","typeString":"type(library Panic)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:4","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":228,"src":"18833:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2492,"nodeType":"ExpressionStatement","src":"18833:35:4"}]}},{"expression":{"id":2495,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"18895:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2473,"id":2496,"nodeType":"Return","src":"18888:13:4"}]},"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"18538:85:4","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":2498,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:4","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"b","nameLocation":"18657:1:4","nodeType":"VariableDeclaration","scope":2498,"src":"18644:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2464,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2467,"mutability":"mutable","name":"e","nameLocation":"18673:1:4","nodeType":"VariableDeclaration","scope":2498,"src":"18660:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2466,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"m","nameLocation":"18689:1:4","nodeType":"VariableDeclaration","scope":2498,"src":"18676:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2468,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:4"},"returnParameters":{"id":2473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2498,"src":"18715:12:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2471,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:4"},"scope":3252,"src":"18628:280:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2543,"nodeType":"Block","src":"19162:771:4","statements":[{"condition":{"arguments":[{"id":2513,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"19187:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2512,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"19176:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2522,"nodeType":"IfStatement","src":"19172:47:4","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2516,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":2520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":2511,"id":2521,"nodeType":"Return","src":"19191:28:4"}},{"assignments":[2524],"declarations":[{"constant":false,"id":2524,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:4","nodeType":"VariableDeclaration","scope":2543,"src":"19230:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2523,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2527,"initialValue":{"expression":{"id":2525,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"19245:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:4","memberName":"length","nodeType":"MemberAccess","src":"19245:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:4"},{"expression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2528,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2510,"src":"19335:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"19361:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:4","memberName":"length","nodeType":"MemberAccess","src":"19361:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2533,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"19371:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:4","memberName":"length","nodeType":"MemberAccess","src":"19371:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2535,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"19381:4:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2536,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2501,"src":"19387:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2537,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2503,"src":"19390:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2538,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"19393:1:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2529,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2541,"nodeType":"ExpressionStatement","src":"19335:60:4"},{"AST":{"nodeType":"YulBlock","src":"19431:496:4","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:4","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:4"},"nodeType":"YulFunctionCall","src":"19460:17:4"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:4","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:4","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:4"},"nodeType":"YulFunctionCall","src":"19589:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:4","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:4"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:4"},"nodeType":"YulFunctionCall","src":"19611:13:4"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:4"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:4"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:4"},"nodeType":"YulFunctionCall","src":"19578:62:4"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:4"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:4"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:4"},"nodeType":"YulFunctionCall","src":"19789:20:4"},"nodeType":"YulExpressionStatement","src":"19789:20:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:4","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:4"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:4"},"nodeType":"YulFunctionCall","src":"19898:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:4"},"nodeType":"YulFunctionCall","src":"19885:32:4"},"nodeType":"YulExpressionStatement","src":"19885:32:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":2524,"isOffset":false,"isSlot":false,"src":"19635:4:4","valueSize":1},{"declaration":2524,"isOffset":false,"isSlot":false,"src":"19804:4:4","valueSize":1},{"declaration":2524,"isOffset":false,"isSlot":false,"src":"19911:4:4","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"19464:6:4","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"19617:6:4","valueSize":1},{"declaration":2510,"isOffset":false,"isSlot":false,"src":"19796:6:4","valueSize":1},{"declaration":2508,"isOffset":false,"isSlot":false,"src":"19567:7:4","valueSize":1}],"flags":["memory-safe"],"id":2542,"nodeType":"InlineAssembly","src":"19406:521:4"}]},"documentation":{"id":2499,"nodeType":"StructuredDocumentation","src":"18914:88:4","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":2544,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:4","nodeType":"FunctionDefinition","parameters":{"id":2506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2501,"mutability":"mutable","name":"b","nameLocation":"19048:1:4","nodeType":"VariableDeclaration","scope":2544,"src":"19035:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2500,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"e","nameLocation":"19072:1:4","nodeType":"VariableDeclaration","scope":2544,"src":"19059:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2502,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"m","nameLocation":"19096:1:4","nodeType":"VariableDeclaration","scope":2544,"src":"19083:14:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2504,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:4"},"returnParameters":{"id":2511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2508,"mutability":"mutable","name":"success","nameLocation":"19132:7:4","nodeType":"VariableDeclaration","scope":2544,"src":"19127:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2507,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2510,"mutability":"mutable","name":"result","nameLocation":"19154:6:4","nodeType":"VariableDeclaration","scope":2544,"src":"19141:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2509,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:4"},"scope":3252,"src":"19007:926:4","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2576,"nodeType":"Block","src":"20088:176:4","statements":[{"body":{"id":2572,"nodeType":"Block","src":"20145:92:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2563,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"20163:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2565,"indexExpression":{"id":2564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"20173:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:4","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2571,"nodeType":"IfStatement","src":"20159:68:4","trueBody":{"id":2570,"nodeType":"Block","src":"20182:45:4","statements":[{"expression":{"hexValue":"66616c7365","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2551,"id":2569,"nodeType":"Return","src":"20200:12:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2556,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"20118:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2557,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2547,"src":"20122:9:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:4","memberName":"length","nodeType":"MemberAccess","src":"20122:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2573,"initializationExpression":{"assignments":[2553],"declarations":[{"constant":false,"id":2553,"mutability":"mutable","name":"i","nameLocation":"20111:1:4","nodeType":"VariableDeclaration","scope":2573,"src":"20103:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2555,"initialValue":{"hexValue":"30","id":2554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:4"},"loopExpression":{"expression":{"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:4","subExpression":{"id":2560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"20142:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2562,"nodeType":"ExpressionStatement","src":"20140:3:4"},"nodeType":"ForStatement","src":"20098:139:4"},{"expression":{"hexValue":"74727565","id":2574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2551,"id":2575,"nodeType":"Return","src":"20246:11:4"}]},"documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"19939:72:4","text":" @dev Returns whether the provided byte array is zero."},"id":2577,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:4","nodeType":"FunctionDefinition","parameters":{"id":2548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2547,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:4","nodeType":"VariableDeclaration","scope":2577,"src":"20036:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2546,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:4"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2577,"src":"20082:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2549,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:4"},"scope":3252,"src":"20016:248:4","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2795,"nodeType":"Block","src":"20624:5124:4","statements":[{"id":2794,"nodeType":"UncheckedBlock","src":"20634:5108:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2585,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"20728:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2591,"nodeType":"IfStatement","src":"20724:53:4","trueBody":{"id":2590,"nodeType":"Block","src":"20736:41:4","statements":[{"expression":{"id":2588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"20761:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2584,"id":2589,"nodeType":"Return","src":"20754:8:4"}]}},{"assignments":[2593],"declarations":[{"constant":false,"id":2593,"mutability":"mutable","name":"aa","nameLocation":"21712:2:4","nodeType":"VariableDeclaration","scope":2794,"src":"21704:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2592,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2595,"initialValue":{"id":2594,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"21717:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:4"},{"assignments":[2597],"declarations":[{"constant":false,"id":2597,"mutability":"mutable","name":"xn","nameLocation":"21740:2:4","nodeType":"VariableDeclaration","scope":2794,"src":"21732:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2596,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2599,"initialValue":{"hexValue":"31","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2600,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"21765:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:4","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:4","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2604,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:4","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2615,"nodeType":"IfStatement","src":"21761:92:4","trueBody":{"id":2614,"nodeType":"Block","src":"21783:70:4","statements":[{"expression":{"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2606,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"21801:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:4","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2609,"nodeType":"ExpressionStatement","src":"21801:10:4"},{"expression":{"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2610,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"21829:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2613,"nodeType":"ExpressionStatement","src":"21829:9:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2616,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"21870:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:4","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:4","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2631,"nodeType":"IfStatement","src":"21866:90:4","trueBody":{"id":2630,"nodeType":"Block","src":"21887:69:4","statements":[{"expression":{"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2622,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"21905:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2625,"nodeType":"ExpressionStatement","src":"21905:9:4"},{"expression":{"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2626,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"21932:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2629,"nodeType":"ExpressionStatement","src":"21932:9:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2632,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"21973:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:4","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2636,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:4","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2647,"nodeType":"IfStatement","src":"21969:90:4","trueBody":{"id":2646,"nodeType":"Block","src":"21990:69:4","statements":[{"expression":{"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2638,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22008:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2641,"nodeType":"ExpressionStatement","src":"22008:9:4"},{"expression":{"id":2644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2642,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"22035:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":2643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2645,"nodeType":"ExpressionStatement","src":"22035:9:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2648,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22076:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:4","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:4","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"IfStatement","src":"22072:89:4","trueBody":{"id":2662,"nodeType":"Block","src":"22093:68:4","statements":[{"expression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2654,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22111:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2657,"nodeType":"ExpressionStatement","src":"22111:9:4"},{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"22138:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"22138:8:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22178:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:4","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:4","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2679,"nodeType":"IfStatement","src":"22174:87:4","trueBody":{"id":2678,"nodeType":"Block","src":"22194:67:4","statements":[{"expression":{"id":2672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2670,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22212:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2673,"nodeType":"ExpressionStatement","src":"22212:8:4"},{"expression":{"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2674,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"22238:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2677,"nodeType":"ExpressionStatement","src":"22238:8:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2680,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22278:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2684,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"IfStatement","src":"22274:87:4","trueBody":{"id":2694,"nodeType":"Block","src":"22294:67:4","statements":[{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2686,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22312:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2689,"nodeType":"ExpressionStatement","src":"22312:8:4"},{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2690,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"22338:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":2691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2693,"nodeType":"ExpressionStatement","src":"22338:8:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2696,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"22378:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2707,"nodeType":"IfStatement","src":"22374:61:4","trueBody":{"id":2706,"nodeType":"Block","src":"22394:41:4","statements":[{"expression":{"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2702,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"22412:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":2703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2705,"nodeType":"ExpressionStatement","src":"22412:8:4"}]}},{"expression":{"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2708,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"22855:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2710,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"22865:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2716,"nodeType":"ExpressionStatement","src":"22855:18:4"},{"expression":{"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2717,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24760:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2718,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24766:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2719,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"24771:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2720,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24775:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2723,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2727,"nodeType":"ExpressionStatement","src":"24760:23:4"},{"expression":{"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2728,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24869:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2729,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24875:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2730,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"24880:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2731,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24884:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2734,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2738,"nodeType":"ExpressionStatement","src":"24869:23:4"},{"expression":{"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2739,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24980:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2740,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24986:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"24991:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2742,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"24995:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2749,"nodeType":"ExpressionStatement","src":"24980:23:4"},{"expression":{"id":2759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2750,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25089:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2751,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25095:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"25100:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2753,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25104:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2756,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2760,"nodeType":"ExpressionStatement","src":"25089:23:4"},{"expression":{"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2761,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25199:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2762,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25205:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2763,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"25210:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2764,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25214:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2771,"nodeType":"ExpressionStatement","src":"25199:23:4"},{"expression":{"id":2781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2772,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25309:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2773,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25315:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2774,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"25320:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2775,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25324:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2782,"nodeType":"ExpressionStatement","src":"25309:23:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2783,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25698:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2786,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25719:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2787,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"25724:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2788,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"25728:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2784,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"25703:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"25703:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2584,"id":2793,"nodeType":"Return","src":"25691:40:4"}]}]},"documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"20270:292:4","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":2796,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:4","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2580,"mutability":"mutable","name":"a","nameLocation":"20589:1:4","nodeType":"VariableDeclaration","scope":2796,"src":"20581:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:4"},"returnParameters":{"id":2584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2796,"src":"20615:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:4"},"scope":3252,"src":"20567:5181:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2829,"nodeType":"Block","src":"25921:171:4","statements":[{"id":2828,"nodeType":"UncheckedBlock","src":"25931:155:4","statements":[{"assignments":[2808],"declarations":[{"constant":false,"id":2808,"mutability":"mutable","name":"result","nameLocation":"25963:6:4","nodeType":"VariableDeclaration","scope":2828,"src":"25955:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2812,"initialValue":{"arguments":[{"id":2810,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"25977:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2796,2830],"referencedDeclaration":2796,"src":"25972:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2813,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"26000:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2817,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"26042:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}],"id":2816,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"26025:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1643_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"26055:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2820,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"26064:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2822,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"26073:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2814,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"26009:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"26009:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2806,"id":2827,"nodeType":"Return","src":"25993:82:4"}]}]},"documentation":{"id":2797,"nodeType":"StructuredDocumentation","src":"25754:86:4","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2830,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:4","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2799,"mutability":"mutable","name":"a","nameLocation":"25867:1:4","nodeType":"VariableDeclaration","scope":2830,"src":"25859:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:4","nodeType":"VariableDeclaration","scope":2830,"src":"25870:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"},"typeName":{"id":2801,"nodeType":"UserDefinedTypeName","pathNode":{"id":2800,"name":"Rounding","nameLocations":["25870:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"25870:8:4"},"referencedDeclaration":1643,"src":"25870:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:4"},"returnParameters":{"id":2806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2830,"src":"25912:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:4"},"scope":3252,"src":"25845:247:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2920,"nodeType":"Block","src":"26281:2334:4","statements":[{"expression":{"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2838,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26363:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2841,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"26383:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:4","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2839,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"26367:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"26367:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:4","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2848,"nodeType":"ExpressionStatement","src":"26363:64:4"},{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2849,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26503:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2852,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"26525:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2853,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26530:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":2856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:4","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2850,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"26508:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"26508:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":2859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:4","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2862,"nodeType":"ExpressionStatement","src":"26503:56:4"},{"expression":{"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2863,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26634:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2866,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"26656:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2867,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26661:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:4","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2864,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"26639:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"26639:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:4","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2876,"nodeType":"ExpressionStatement","src":"26634:48:4"},{"expression":{"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2877,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26757:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2880,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"26779:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2881,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26784:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:4","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2878,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"26762:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"26762:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2890,"nodeType":"ExpressionStatement","src":"26757:44:4"},{"expression":{"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2891,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26874:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2894,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"26896:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2895,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26901:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":2898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2892,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"26879:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"26879:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2904,"nodeType":"ExpressionStatement","src":"26874:42:4"},{"expression":{"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2905,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"26988:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2908,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2833,"src":"27010:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":2909,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"27015:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:4","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2906,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"26993:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"26993:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2918,"nodeType":"ExpressionStatement","src":"26988:41:4"},{"AST":{"nodeType":"YulBlock","src":"28490:119:4","statements":[{"nodeType":"YulAssignment","src":"28504:95:4","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:4"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:4"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:4"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:4"},"nodeType":"YulFunctionCall","src":"28520:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:4","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:4"},"nodeType":"YulFunctionCall","src":"28515:83:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:4"},"nodeType":"YulFunctionCall","src":"28509:90:4"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:4"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2836,"isOffset":false,"isSlot":false,"src":"28504:1:4","valueSize":1},{"declaration":2836,"isOffset":false,"isSlot":false,"src":"28512:1:4","valueSize":1},{"declaration":2836,"isOffset":false,"isSlot":false,"src":"28524:1:4","valueSize":1},{"declaration":2833,"isOffset":false,"isSlot":false,"src":"28527:1:4","valueSize":1}],"flags":["memory-safe"],"id":2919,"nodeType":"InlineAssembly","src":"28465:144:4"}]},"documentation":{"id":2831,"nodeType":"StructuredDocumentation","src":"26098:119:4","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2921,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:4","nodeType":"FunctionDefinition","parameters":{"id":2834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2833,"mutability":"mutable","name":"x","nameLocation":"26244:1:4","nodeType":"VariableDeclaration","scope":2921,"src":"26236:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2832,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:4"},"returnParameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"r","nameLocation":"26278:1:4","nodeType":"VariableDeclaration","scope":2921,"src":"26270:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2835,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:4"},"scope":3252,"src":"26222:2393:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2954,"nodeType":"Block","src":"28848:175:4","statements":[{"id":2953,"nodeType":"UncheckedBlock","src":"28858:159:4","statements":[{"assignments":[2933],"declarations":[{"constant":false,"id":2933,"mutability":"mutable","name":"result","nameLocation":"28890:6:4","nodeType":"VariableDeclaration","scope":2953,"src":"28882:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2932,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2937,"initialValue":{"arguments":[{"id":2935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"28904:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2934,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2921,2955],"referencedDeclaration":2921,"src":"28899:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"28931:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2942,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"28973:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}],"id":2941,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"28956:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1643_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2945,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"28991:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"29000:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2939,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"28940:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"28940:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2931,"id":2952,"nodeType":"Return","src":"28924:82:4"}]}]},"documentation":{"id":2922,"nodeType":"StructuredDocumentation","src":"28621:142:4","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2955,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:4","nodeType":"FunctionDefinition","parameters":{"id":2928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2924,"mutability":"mutable","name":"value","nameLocation":"28790:5:4","nodeType":"VariableDeclaration","scope":2955,"src":"28782:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2923,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2927,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:4","nodeType":"VariableDeclaration","scope":2955,"src":"28797:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"},"typeName":{"id":2926,"nodeType":"UserDefinedTypeName","pathNode":{"id":2925,"name":"Rounding","nameLocations":["28797:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"28797:8:4"},"referencedDeclaration":1643,"src":"28797:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:4"},"returnParameters":{"id":2931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2955,"src":"28839:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:4"},"scope":3252,"src":"28768:255:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"29216:854:4","statements":[{"assignments":[2964],"declarations":[{"constant":false,"id":2964,"mutability":"mutable","name":"result","nameLocation":"29234:6:4","nodeType":"VariableDeclaration","scope":3083,"src":"29226:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2966,"initialValue":{"hexValue":"30","id":2965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:4"},{"id":3080,"nodeType":"UncheckedBlock","src":"29254:787:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29282:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2983,"nodeType":"IfStatement","src":"29278:103:4","trueBody":{"id":2982,"nodeType":"Block","src":"29301:80:4","statements":[{"expression":{"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29319:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2977,"nodeType":"ExpressionStatement","src":"29319:17:4"},{"expression":{"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29354:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:4","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2981,"nodeType":"ExpressionStatement","src":"29354:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29398:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3000,"nodeType":"IfStatement","src":"29394:103:4","trueBody":{"id":2999,"nodeType":"Block","src":"29417:80:4","statements":[{"expression":{"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29435:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2994,"nodeType":"ExpressionStatement","src":"29435:17:4"},{"expression":{"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2995,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29470:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:4","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2998,"nodeType":"ExpressionStatement","src":"29470:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29514:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3017,"nodeType":"IfStatement","src":"29510:103:4","trueBody":{"id":3016,"nodeType":"Block","src":"29533:80:4","statements":[{"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29551:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:4","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3011,"nodeType":"ExpressionStatement","src":"29551:17:4"},{"expression":{"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29586:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:4","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3015,"nodeType":"ExpressionStatement","src":"29586:12:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29630:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3034,"nodeType":"IfStatement","src":"29626:100:4","trueBody":{"id":3033,"nodeType":"Block","src":"29648:78:4","statements":[{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29666:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3028,"nodeType":"ExpressionStatement","src":"29666:16:4"},{"expression":{"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3029,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29700:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:4","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3032,"nodeType":"ExpressionStatement","src":"29700:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29743:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3051,"nodeType":"IfStatement","src":"29739:100:4","trueBody":{"id":3050,"nodeType":"Block","src":"29761:78:4","statements":[{"expression":{"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29779:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3045,"nodeType":"ExpressionStatement","src":"29779:16:4"},{"expression":{"id":3048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3046,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29813:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3049,"nodeType":"ExpressionStatement","src":"29813:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29856:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3068,"nodeType":"IfStatement","src":"29852:100:4","trueBody":{"id":3067,"nodeType":"Block","src":"29874:78:4","statements":[{"expression":{"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29892:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3062,"nodeType":"ExpressionStatement","src":"29892:16:4"},{"expression":{"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"29926:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3066,"nodeType":"ExpressionStatement","src":"29926:11:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"29969:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3079,"nodeType":"IfStatement","src":"29965:66:4","trueBody":{"id":3078,"nodeType":"Block","src":"29987:44:4","statements":[{"expression":{"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3074,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"30005:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3077,"nodeType":"ExpressionStatement","src":"30005:11:4"}]}}]},{"expression":{"id":3081,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2964,"src":"30057:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2962,"id":3082,"nodeType":"Return","src":"30050:13:4"}]},"documentation":{"id":2956,"nodeType":"StructuredDocumentation","src":"29029:120:4","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:4","nodeType":"FunctionDefinition","parameters":{"id":2959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2958,"mutability":"mutable","name":"value","nameLocation":"29177:5:4","nodeType":"VariableDeclaration","scope":3084,"src":"29169:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:4"},"returnParameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3084,"src":"29207:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:4"},"scope":3252,"src":"29154:916:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3117,"nodeType":"Block","src":"30305:177:4","statements":[{"id":3116,"nodeType":"UncheckedBlock","src":"30315:161:4","statements":[{"assignments":[3096],"declarations":[{"constant":false,"id":3096,"mutability":"mutable","name":"result","nameLocation":"30347:6:4","nodeType":"VariableDeclaration","scope":3116,"src":"30339:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3095,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3100,"initialValue":{"arguments":[{"id":3098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"30362:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3097,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3084,3118],"referencedDeclaration":3084,"src":"30356:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"30389:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3105,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3090,"src":"30431:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}],"id":3104,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"30414:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1643_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"30450:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3087,"src":"30459:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3102,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"30398:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"30398:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3094,"id":3115,"nodeType":"Return","src":"30382:83:4"}]}]},"documentation":{"id":3085,"nodeType":"StructuredDocumentation","src":"30076:143:4","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:4","nodeType":"FunctionDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3087,"mutability":"mutable","name":"value","nameLocation":"30247:5:4","nodeType":"VariableDeclaration","scope":3118,"src":"30239:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3090,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:4","nodeType":"VariableDeclaration","scope":3118,"src":"30254:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"},"typeName":{"id":3089,"nodeType":"UserDefinedTypeName","pathNode":{"id":3088,"name":"Rounding","nameLocations":["30254:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"30254:8:4"},"referencedDeclaration":1643,"src":"30254:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:4"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"30296:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3092,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:4"},"scope":3252,"src":"30224:258:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3194,"nodeType":"Block","src":"30800:675:4","statements":[{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3126,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"30882:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3129,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"30902:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:4","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3127,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"30886:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"30886:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":3133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:4","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3136,"nodeType":"ExpressionStatement","src":"30882:64:4"},{"expression":{"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3137,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31022:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3140,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"31044:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3141,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31049:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:4","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3138,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31027:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"31027:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:4","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3150,"nodeType":"ExpressionStatement","src":"31022:56:4"},{"expression":{"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3151,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31153:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"31175:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3155,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31180:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":3158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:4","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3152,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31158:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"31158:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:4","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3164,"nodeType":"ExpressionStatement","src":"31153:48:4"},{"expression":{"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3165,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31276:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3168,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"31298:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3169,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31303:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":3172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:4","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3166,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31281:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"31281:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3178,"nodeType":"ExpressionStatement","src":"31276:44:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3179,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31426:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3182,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3185,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"31453:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3186,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"31458:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3188,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:4","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3183,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31436:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"31436:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3125,"id":3193,"nodeType":"Return","src":"31418:50:4"}]},"documentation":{"id":3119,"nodeType":"StructuredDocumentation","src":"30488:246:4","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3195,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:4","nodeType":"FunctionDefinition","parameters":{"id":3122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3121,"mutability":"mutable","name":"x","nameLocation":"30763:1:4","nodeType":"VariableDeclaration","scope":3195,"src":"30755:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:4"},"returnParameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3124,"mutability":"mutable","name":"r","nameLocation":"30797:1:4","nodeType":"VariableDeclaration","scope":3195,"src":"30789:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:4"},"scope":3252,"src":"30739:736:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3231,"nodeType":"Block","src":"31712:184:4","statements":[{"id":3230,"nodeType":"UncheckedBlock","src":"31722:168:4","statements":[{"assignments":[3207],"declarations":[{"constant":false,"id":3207,"mutability":"mutable","name":"result","nameLocation":"31754:6:4","nodeType":"VariableDeclaration","scope":3230,"src":"31746:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3211,"initialValue":{"arguments":[{"id":3209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"31770:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3208,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3195,3232],"referencedDeclaration":3195,"src":"31763:6:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"31797:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3216,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"31839:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}],"id":3215,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"31822:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$1643_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3219,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"31858:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3198,"src":"31873:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3213,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"31806:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:4","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"31806:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3205,"id":3229,"nodeType":"Return","src":"31790:89:4"}]}]},"documentation":{"id":3196,"nodeType":"StructuredDocumentation","src":"31481:144:4","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:4","nodeType":"FunctionDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"value","nameLocation":"31654:5:4","nodeType":"VariableDeclaration","scope":3232,"src":"31646:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3197,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:4","nodeType":"VariableDeclaration","scope":3232,"src":"31661:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"},"typeName":{"id":3200,"nodeType":"UserDefinedTypeName","pathNode":{"id":3199,"name":"Rounding","nameLocations":["31661:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"31661:8:4"},"referencedDeclaration":1643,"src":"31661:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:4"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3232,"src":"31703:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3203,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:4"},"scope":3252,"src":"31630:266:4","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3250,"nodeType":"Block","src":"32094:48:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3243,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"32117:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3241,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:4","typeDescriptions":{}}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3240,"id":3249,"nodeType":"Return","src":"32104:31:4"}]},"documentation":{"id":3233,"nodeType":"StructuredDocumentation","src":"31902:113:4","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":3251,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:4","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3236,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:4","nodeType":"VariableDeclaration","scope":3251,"src":"32046:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"},"typeName":{"id":3235,"nodeType":"UserDefinedTypeName","pathNode":{"id":3234,"name":"Rounding","nameLocations":["32046:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1643,"src":"32046:8:4"},"referencedDeclaration":1643,"src":"32046:8:4","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1643","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:4"},"returnParameters":{"id":3240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3251,"src":"32088:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3238,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:4"},"scope":3252,"src":"32020:122:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3253,"src":"281:31863:4","usedErrors":[],"usedEvents":[]}],"src":"103:32042:4"},"id":4},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[5017]},"id":5018,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3254,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":3255,"nodeType":"StructuredDocumentation","src":"218:550:5","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":5017,"linearizedBaseContracts":[5017],"name":"SafeCast","nameLocation":"777:8:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"792:68:5","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":3262,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:5","nodeType":"ErrorDefinition","parameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3258,"mutability":"mutable","name":"bits","nameLocation":"908:4:5","nodeType":"VariableDeclaration","scope":3262,"src":"902:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3257,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3260,"mutability":"mutable","name":"value","nameLocation":"922:5:5","nodeType":"VariableDeclaration","scope":3262,"src":"914:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:5"},"src":"865:64:5"},{"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"935:75:5","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":3267,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:5","nodeType":"ErrorDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"value","nameLocation":"1056:5:5","nodeType":"VariableDeclaration","scope":3267,"src":"1049:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3264,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:5"},"src":"1015:48:5"},{"documentation":{"id":3268,"nodeType":"StructuredDocumentation","src":"1069:67:5","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":3274,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:5","nodeType":"ErrorDefinition","parameters":{"id":3273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"bits","nameLocation":"1183:4:5","nodeType":"VariableDeclaration","scope":3274,"src":"1177:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3269,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3272,"mutability":"mutable","name":"value","nameLocation":"1196:5:5","nodeType":"VariableDeclaration","scope":3274,"src":"1189:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3271,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:5"},"src":"1141:62:5"},{"documentation":{"id":3275,"nodeType":"StructuredDocumentation","src":"1209:75:5","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":3279,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:5","nodeType":"ErrorDefinition","parameters":{"id":3278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3277,"mutability":"mutable","name":"value","nameLocation":"1331:5:5","nodeType":"VariableDeclaration","scope":3279,"src":"1323:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:5"},"src":"1289:49:5"},{"body":{"id":3306,"nodeType":"Block","src":"1695:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1709:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3289,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":3288,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:5","memberName":"max","nodeType":"MemberAccess","src":"1717:17:5","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3300,"nodeType":"IfStatement","src":"1705:105:5","trueBody":{"id":3299,"nodeType":"Block","src":"1736:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:5","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1793:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3294,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"1757:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"RevertStatement","src":"1750:49:5"}]}},{"expression":{"arguments":[{"id":3303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"1834:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":3301,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:5","typeDescriptions":{}}},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":3286,"id":3305,"nodeType":"Return","src":"1819:21:5"}]},"documentation":{"id":3280,"nodeType":"StructuredDocumentation","src":"1344:280:5","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3307,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:5","nodeType":"FunctionDefinition","parameters":{"id":3283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3282,"mutability":"mutable","name":"value","nameLocation":"1656:5:5","nodeType":"VariableDeclaration","scope":3307,"src":"1648:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:5"},"returnParameters":{"id":3286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3285,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3307,"src":"1686:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":3284,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:5","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:5"},"scope":5017,"src":"1629:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3334,"nodeType":"Block","src":"2204:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2218:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3317,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":3316,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:5","memberName":"max","nodeType":"MemberAccess","src":"2226:17:5","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3328,"nodeType":"IfStatement","src":"2214:105:5","trueBody":{"id":3327,"nodeType":"Block","src":"2245:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:5","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2302:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3322,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2266:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3326,"nodeType":"RevertStatement","src":"2259:49:5"}]}},{"expression":{"arguments":[{"id":3331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"2343:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":3329,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:5","typeDescriptions":{}}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":3314,"id":3333,"nodeType":"Return","src":"2328:21:5"}]},"documentation":{"id":3308,"nodeType":"StructuredDocumentation","src":"1853:280:5","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3335,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:5","nodeType":"FunctionDefinition","parameters":{"id":3311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3310,"mutability":"mutable","name":"value","nameLocation":"2165:5:5","nodeType":"VariableDeclaration","scope":3335,"src":"2157:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:5"},"returnParameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3335,"src":"2195:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":3312,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:5","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:5"},"scope":5017,"src":"2138:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3362,"nodeType":"Block","src":"2713:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2727:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3345,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":3344,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:5","memberName":"max","nodeType":"MemberAccess","src":"2735:17:5","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3356,"nodeType":"IfStatement","src":"2723:105:5","trueBody":{"id":3355,"nodeType":"Block","src":"2754:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:5","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3352,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2811:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3350,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"2775:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3354,"nodeType":"RevertStatement","src":"2768:49:5"}]}},{"expression":{"arguments":[{"id":3359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"2852:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":3357,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:5","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":3342,"id":3361,"nodeType":"Return","src":"2837:21:5"}]},"documentation":{"id":3336,"nodeType":"StructuredDocumentation","src":"2362:280:5","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3363,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:5","nodeType":"FunctionDefinition","parameters":{"id":3339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"value","nameLocation":"2674:5:5","nodeType":"VariableDeclaration","scope":3363,"src":"2666:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:5"},"returnParameters":{"id":3342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3363,"src":"2704:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":3340,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:5","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:5"},"scope":5017,"src":"2647:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3390,"nodeType":"Block","src":"3222:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"3236:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3373,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":3372,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":3376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:5","memberName":"max","nodeType":"MemberAccess","src":"3244:17:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3384,"nodeType":"IfStatement","src":"3232:105:5","trueBody":{"id":3383,"nodeType":"Block","src":"3263:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:5","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"3320:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3378,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3284:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3382,"nodeType":"RevertStatement","src":"3277:49:5"}]}},{"expression":{"arguments":[{"id":3387,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"3361:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":3385,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:5","typeDescriptions":{}}},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":3370,"id":3389,"nodeType":"Return","src":"3346:21:5"}]},"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"2871:280:5","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3391,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:5","nodeType":"FunctionDefinition","parameters":{"id":3367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"mutability":"mutable","name":"value","nameLocation":"3183:5:5","nodeType":"VariableDeclaration","scope":3391,"src":"3175:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3365,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:5"},"returnParameters":{"id":3370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3391,"src":"3213:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":3368,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:5","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:5"},"scope":5017,"src":"3156:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3418,"nodeType":"Block","src":"3731:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3745:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3401,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":3400,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:5","memberName":"max","nodeType":"MemberAccess","src":"3753:17:5","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3412,"nodeType":"IfStatement","src":"3741:105:5","trueBody":{"id":3411,"nodeType":"Block","src":"3772:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:5","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3408,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3829:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3406,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3793:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"RevertStatement","src":"3786:49:5"}]}},{"expression":{"arguments":[{"id":3415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"3870:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":3413,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:5","typeDescriptions":{}}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":3398,"id":3417,"nodeType":"Return","src":"3855:21:5"}]},"documentation":{"id":3392,"nodeType":"StructuredDocumentation","src":"3380:280:5","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3419,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:5","nodeType":"FunctionDefinition","parameters":{"id":3395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3394,"mutability":"mutable","name":"value","nameLocation":"3692:5:5","nodeType":"VariableDeclaration","scope":3419,"src":"3684:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3393,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:5"},"returnParameters":{"id":3398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3419,"src":"3722:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":3396,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:5","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:5"},"scope":5017,"src":"3665:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3446,"nodeType":"Block","src":"4240:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4254:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3429,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":3428,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:5","memberName":"max","nodeType":"MemberAccess","src":"4262:17:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"4250:105:5","trueBody":{"id":3439,"nodeType":"Block","src":"4281:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:5","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3436,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4338:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3434,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"4302:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"RevertStatement","src":"4295:49:5"}]}},{"expression":{"arguments":[{"id":3443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"4379:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":3441,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:5","typeDescriptions":{}}},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":3426,"id":3445,"nodeType":"Return","src":"4364:21:5"}]},"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"3889:280:5","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3447,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:5","nodeType":"FunctionDefinition","parameters":{"id":3423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"value","nameLocation":"4201:5:5","nodeType":"VariableDeclaration","scope":3447,"src":"4193:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:5"},"returnParameters":{"id":3426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3425,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3447,"src":"4231:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":3424,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:5","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:5"},"scope":5017,"src":"4174:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3474,"nodeType":"Block","src":"4749:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"4763:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3457,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":3456,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:5","memberName":"max","nodeType":"MemberAccess","src":"4771:17:5","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3468,"nodeType":"IfStatement","src":"4759:105:5","trueBody":{"id":3467,"nodeType":"Block","src":"4790:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:5","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"4847:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3462,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"4811:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3466,"nodeType":"RevertStatement","src":"4804:49:5"}]}},{"expression":{"arguments":[{"id":3471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"4888:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":3469,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:5","typeDescriptions":{}}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":3454,"id":3473,"nodeType":"Return","src":"4873:21:5"}]},"documentation":{"id":3448,"nodeType":"StructuredDocumentation","src":"4398:280:5","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3475,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:5","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3450,"mutability":"mutable","name":"value","nameLocation":"4710:5:5","nodeType":"VariableDeclaration","scope":3475,"src":"4702:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:5"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3475,"src":"4740:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":3452,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:5","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:5"},"scope":5017,"src":"4683:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3502,"nodeType":"Block","src":"5258:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5272:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3485,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":3484,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:5","memberName":"max","nodeType":"MemberAccess","src":"5280:17:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3496,"nodeType":"IfStatement","src":"5268:105:5","trueBody":{"id":3495,"nodeType":"Block","src":"5299:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:5","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5356:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3490,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"5320:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3494,"nodeType":"RevertStatement","src":"5313:49:5"}]}},{"expression":{"arguments":[{"id":3499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"5397:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":3497,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:5","typeDescriptions":{}}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":3482,"id":3501,"nodeType":"Return","src":"5382:21:5"}]},"documentation":{"id":3476,"nodeType":"StructuredDocumentation","src":"4907:280:5","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3503,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:5","nodeType":"FunctionDefinition","parameters":{"id":3479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3478,"mutability":"mutable","name":"value","nameLocation":"5219:5:5","nodeType":"VariableDeclaration","scope":3503,"src":"5211:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:5"},"returnParameters":{"id":3482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3503,"src":"5249:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":3480,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:5","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:5"},"scope":5017,"src":"5192:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3530,"nodeType":"Block","src":"5767:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"5781:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3513,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":3512,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:5","memberName":"max","nodeType":"MemberAccess","src":"5789:17:5","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3524,"nodeType":"IfStatement","src":"5777:105:5","trueBody":{"id":3523,"nodeType":"Block","src":"5808:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:5","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"5865:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3518,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"5829:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3522,"nodeType":"RevertStatement","src":"5822:49:5"}]}},{"expression":{"arguments":[{"id":3527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"5906:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":3525,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:5","typeDescriptions":{}}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":3510,"id":3529,"nodeType":"Return","src":"5891:21:5"}]},"documentation":{"id":3504,"nodeType":"StructuredDocumentation","src":"5416:280:5","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3531,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:5","nodeType":"FunctionDefinition","parameters":{"id":3507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3506,"mutability":"mutable","name":"value","nameLocation":"5728:5:5","nodeType":"VariableDeclaration","scope":3531,"src":"5720:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:5"},"returnParameters":{"id":3510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3531,"src":"5758:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":3508,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:5","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:5"},"scope":5017,"src":"5701:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3558,"nodeType":"Block","src":"6276:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"6290:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3541,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":3540,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:5","memberName":"max","nodeType":"MemberAccess","src":"6298:17:5","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"IfStatement","src":"6286:105:5","trueBody":{"id":3551,"nodeType":"Block","src":"6317:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:5","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"6374:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3546,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6338:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3550,"nodeType":"RevertStatement","src":"6331:49:5"}]}},{"expression":{"arguments":[{"id":3555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3534,"src":"6415:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":3553,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:5","typeDescriptions":{}}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":3538,"id":3557,"nodeType":"Return","src":"6400:21:5"}]},"documentation":{"id":3532,"nodeType":"StructuredDocumentation","src":"5925:280:5","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3559,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:5","nodeType":"FunctionDefinition","parameters":{"id":3535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3534,"mutability":"mutable","name":"value","nameLocation":"6237:5:5","nodeType":"VariableDeclaration","scope":3559,"src":"6229:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:5"},"returnParameters":{"id":3538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3537,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3559,"src":"6267:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":3536,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:5","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:5"},"scope":5017,"src":"6210:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3586,"nodeType":"Block","src":"6785:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3567,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"6799:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3569,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":3568,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:5","memberName":"max","nodeType":"MemberAccess","src":"6807:17:5","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3580,"nodeType":"IfStatement","src":"6795:105:5","trueBody":{"id":3579,"nodeType":"Block","src":"6826:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:5","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"6883:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3574,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"6847:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3578,"nodeType":"RevertStatement","src":"6840:49:5"}]}},{"expression":{"arguments":[{"id":3583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3562,"src":"6924:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":3581,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:5","typeDescriptions":{}}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":3566,"id":3585,"nodeType":"Return","src":"6909:21:5"}]},"documentation":{"id":3560,"nodeType":"StructuredDocumentation","src":"6434:280:5","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3587,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:5","nodeType":"FunctionDefinition","parameters":{"id":3563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3562,"mutability":"mutable","name":"value","nameLocation":"6746:5:5","nodeType":"VariableDeclaration","scope":3587,"src":"6738:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3561,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:5"},"returnParameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3565,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3587,"src":"6776:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":3564,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:5","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:5"},"scope":5017,"src":"6719:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3614,"nodeType":"Block","src":"7294:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3595,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7308:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3597,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":3596,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:5","memberName":"max","nodeType":"MemberAccess","src":"7316:17:5","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3608,"nodeType":"IfStatement","src":"7304:105:5","trueBody":{"id":3607,"nodeType":"Block","src":"7335:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:5","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7392:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3602,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"7356:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3606,"nodeType":"RevertStatement","src":"7349:49:5"}]}},{"expression":{"arguments":[{"id":3611,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"7433:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3609,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:5","typeDescriptions":{}}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":3594,"id":3613,"nodeType":"Return","src":"7418:21:5"}]},"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"6943:280:5","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3615,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:5","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"value","nameLocation":"7255:5:5","nodeType":"VariableDeclaration","scope":3615,"src":"7247:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:5"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3615,"src":"7285:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3592,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:5","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:5"},"scope":5017,"src":"7228:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3642,"nodeType":"Block","src":"7803:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"7817:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3625,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":3624,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:5","memberName":"max","nodeType":"MemberAccess","src":"7825:17:5","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3636,"nodeType":"IfStatement","src":"7813:105:5","trueBody":{"id":3635,"nodeType":"Block","src":"7844:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:5","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"7901:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3630,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"7865:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3634,"nodeType":"RevertStatement","src":"7858:49:5"}]}},{"expression":{"arguments":[{"id":3639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"7942:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":3637,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:5","typeDescriptions":{}}},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":3622,"id":3641,"nodeType":"Return","src":"7927:21:5"}]},"documentation":{"id":3616,"nodeType":"StructuredDocumentation","src":"7452:280:5","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3643,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:5","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3618,"mutability":"mutable","name":"value","nameLocation":"7764:5:5","nodeType":"VariableDeclaration","scope":3643,"src":"7756:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:5"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3643,"src":"7794:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":3620,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:5","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:5"},"scope":5017,"src":"7737:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3670,"nodeType":"Block","src":"8312:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8326:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3653,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":3652,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:5","memberName":"max","nodeType":"MemberAccess","src":"8334:17:5","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3664,"nodeType":"IfStatement","src":"8322:105:5","trueBody":{"id":3663,"nodeType":"Block","src":"8353:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:5","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8410:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3658,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"8374:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3662,"nodeType":"RevertStatement","src":"8367:49:5"}]}},{"expression":{"arguments":[{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3646,"src":"8451:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3665,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:5","typeDescriptions":{}}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":3650,"id":3669,"nodeType":"Return","src":"8436:21:5"}]},"documentation":{"id":3644,"nodeType":"StructuredDocumentation","src":"7961:280:5","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3671,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:5","nodeType":"FunctionDefinition","parameters":{"id":3647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3646,"mutability":"mutable","name":"value","nameLocation":"8273:5:5","nodeType":"VariableDeclaration","scope":3671,"src":"8265:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3645,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:5"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3671,"src":"8303:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":3648,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:5","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:5"},"scope":5017,"src":"8246:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3698,"nodeType":"Block","src":"8821:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"8835:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3681,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3680,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:5","memberName":"max","nodeType":"MemberAccess","src":"8843:17:5","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"nodeType":"IfStatement","src":"8831:105:5","trueBody":{"id":3691,"nodeType":"Block","src":"8862:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:5","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3688,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"8919:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3686,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"8883:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3690,"nodeType":"RevertStatement","src":"8876:49:5"}]}},{"expression":{"arguments":[{"id":3695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"8960:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3693,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:5","typeDescriptions":{}}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3678,"id":3697,"nodeType":"Return","src":"8945:21:5"}]},"documentation":{"id":3672,"nodeType":"StructuredDocumentation","src":"8470:280:5","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3699,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:5","nodeType":"FunctionDefinition","parameters":{"id":3675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3674,"mutability":"mutable","name":"value","nameLocation":"8782:5:5","nodeType":"VariableDeclaration","scope":3699,"src":"8774:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:5"},"returnParameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3677,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3699,"src":"8812:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3676,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:5","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:5"},"scope":5017,"src":"8755:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3726,"nodeType":"Block","src":"9330:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9344:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3709,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3708,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:5","memberName":"max","nodeType":"MemberAccess","src":"9352:17:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3720,"nodeType":"IfStatement","src":"9340:105:5","trueBody":{"id":3719,"nodeType":"Block","src":"9371:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9428:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3714,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"9392:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3718,"nodeType":"RevertStatement","src":"9385:49:5"}]}},{"expression":{"arguments":[{"id":3723,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"9469:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3721,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:5","typeDescriptions":{}}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3706,"id":3725,"nodeType":"Return","src":"9454:21:5"}]},"documentation":{"id":3700,"nodeType":"StructuredDocumentation","src":"8979:280:5","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3727,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:5","nodeType":"FunctionDefinition","parameters":{"id":3703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3702,"mutability":"mutable","name":"value","nameLocation":"9291:5:5","nodeType":"VariableDeclaration","scope":3727,"src":"9283:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:5"},"returnParameters":{"id":3706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3727,"src":"9321:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3704,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:5"},"scope":5017,"src":"9264:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3754,"nodeType":"Block","src":"9839:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"9853:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3737,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3736,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:5","memberName":"max","nodeType":"MemberAccess","src":"9861:17:5","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3748,"nodeType":"IfStatement","src":"9849:105:5","trueBody":{"id":3747,"nodeType":"Block","src":"9880:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:5","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"9937:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3742,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"9901:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3746,"nodeType":"RevertStatement","src":"9894:49:5"}]}},{"expression":{"arguments":[{"id":3751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"9978:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3749,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:5","typeDescriptions":{}}},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3734,"id":3753,"nodeType":"Return","src":"9963:21:5"}]},"documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"9488:280:5","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3755,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:5","nodeType":"FunctionDefinition","parameters":{"id":3731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3730,"mutability":"mutable","name":"value","nameLocation":"9800:5:5","nodeType":"VariableDeclaration","scope":3755,"src":"9792:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:5"},"returnParameters":{"id":3734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3755,"src":"9830:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3732,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:5","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:5"},"scope":5017,"src":"9773:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3782,"nodeType":"Block","src":"10348:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10362:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3765,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3764,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:5","memberName":"max","nodeType":"MemberAccess","src":"10370:17:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3776,"nodeType":"IfStatement","src":"10358:105:5","trueBody":{"id":3775,"nodeType":"Block","src":"10389:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:5","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3772,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10446:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3770,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"10410:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3774,"nodeType":"RevertStatement","src":"10403:49:5"}]}},{"expression":{"arguments":[{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3758,"src":"10487:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3777,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:5","typeDescriptions":{}}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3762,"id":3781,"nodeType":"Return","src":"10472:21:5"}]},"documentation":{"id":3756,"nodeType":"StructuredDocumentation","src":"9997:280:5","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3783,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:5","nodeType":"FunctionDefinition","parameters":{"id":3759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3758,"mutability":"mutable","name":"value","nameLocation":"10309:5:5","nodeType":"VariableDeclaration","scope":3783,"src":"10301:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3757,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:5"},"returnParameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3783,"src":"10339:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3760,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:5","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:5"},"scope":5017,"src":"10282:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3810,"nodeType":"Block","src":"10857:152:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"10871:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3793,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3792,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:5","memberName":"max","nodeType":"MemberAccess","src":"10879:17:5","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3804,"nodeType":"IfStatement","src":"10867:105:5","trueBody":{"id":3803,"nodeType":"Block","src":"10898:74:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:5","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"10955:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3798,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"10919:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3802,"nodeType":"RevertStatement","src":"10912:49:5"}]}},{"expression":{"arguments":[{"id":3807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3786,"src":"10996:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3805,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:5","typeDescriptions":{}}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3790,"id":3809,"nodeType":"Return","src":"10981:21:5"}]},"documentation":{"id":3784,"nodeType":"StructuredDocumentation","src":"10506:280:5","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3811,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:5","nodeType":"FunctionDefinition","parameters":{"id":3787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3786,"mutability":"mutable","name":"value","nameLocation":"10818:5:5","nodeType":"VariableDeclaration","scope":3811,"src":"10810:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:5"},"returnParameters":{"id":3790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3811,"src":"10848:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3788,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:5","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:5"},"scope":5017,"src":"10791:218:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3838,"nodeType":"Block","src":"11360:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3819,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11374:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3821,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3820,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:5","memberName":"max","nodeType":"MemberAccess","src":"11382:16:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"11370:103:5","trueBody":{"id":3831,"nodeType":"Block","src":"11400:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11456:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3826,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"11421:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"RevertStatement","src":"11414:48:5"}]}},{"expression":{"arguments":[{"id":3835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11496:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3833,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:5","typeDescriptions":{}}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3818,"id":3837,"nodeType":"Return","src":"11482:20:5"}]},"documentation":{"id":3812,"nodeType":"StructuredDocumentation","src":"11015:276:5","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3839,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:5","nodeType":"FunctionDefinition","parameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"value","nameLocation":"11322:5:5","nodeType":"VariableDeclaration","scope":3839,"src":"11314:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:5"},"returnParameters":{"id":3818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3839,"src":"11352:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3816,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:5","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:5"},"scope":5017,"src":"11296:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"11860:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"11874:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3849,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3848,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:5","memberName":"max","nodeType":"MemberAccess","src":"11882:16:5","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3860,"nodeType":"IfStatement","src":"11870:103:5","trueBody":{"id":3859,"nodeType":"Block","src":"11900:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:5","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"11956:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3854,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"11921:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3858,"nodeType":"RevertStatement","src":"11914:48:5"}]}},{"expression":{"arguments":[{"id":3863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"11996:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3861,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:5","typeDescriptions":{}}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3846,"id":3865,"nodeType":"Return","src":"11982:20:5"}]},"documentation":{"id":3840,"nodeType":"StructuredDocumentation","src":"11515:276:5","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:5","nodeType":"FunctionDefinition","parameters":{"id":3843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"value","nameLocation":"11822:5:5","nodeType":"VariableDeclaration","scope":3867,"src":"11814:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3841,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:5"},"returnParameters":{"id":3846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3867,"src":"11852:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3844,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:5","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:5"},"scope":5017,"src":"11796:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3894,"nodeType":"Block","src":"12360:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12374:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3877,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3876,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:5","memberName":"max","nodeType":"MemberAccess","src":"12382:16:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3888,"nodeType":"IfStatement","src":"12370:103:5","trueBody":{"id":3887,"nodeType":"Block","src":"12400:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12456:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3882,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12421:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3886,"nodeType":"RevertStatement","src":"12414:48:5"}]}},{"expression":{"arguments":[{"id":3891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"12496:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3889,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:5","typeDescriptions":{}}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3874,"id":3893,"nodeType":"Return","src":"12482:20:5"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"12015:276:5","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:5","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"value","nameLocation":"12322:5:5","nodeType":"VariableDeclaration","scope":3895,"src":"12314:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3869,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:5"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3895,"src":"12352:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3872,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:5"},"scope":5017,"src":"12296:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3922,"nodeType":"Block","src":"12860:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"12874:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3905,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3904,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:5","memberName":"max","nodeType":"MemberAccess","src":"12882:16:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3916,"nodeType":"IfStatement","src":"12870:103:5","trueBody":{"id":3915,"nodeType":"Block","src":"12900:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:5","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"12956:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3910,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"12921:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3914,"nodeType":"RevertStatement","src":"12914:48:5"}]}},{"expression":{"arguments":[{"id":3919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"12996:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3917,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:5","typeDescriptions":{}}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3902,"id":3921,"nodeType":"Return","src":"12982:20:5"}]},"documentation":{"id":3896,"nodeType":"StructuredDocumentation","src":"12515:276:5","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:5","nodeType":"FunctionDefinition","parameters":{"id":3899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"value","nameLocation":"12822:5:5","nodeType":"VariableDeclaration","scope":3923,"src":"12814:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:5"},"returnParameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3923,"src":"12852:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3900,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:5","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:5"},"scope":5017,"src":"12796:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3950,"nodeType":"Block","src":"13360:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13374:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3933,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3932,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:5","memberName":"max","nodeType":"MemberAccess","src":"13382:16:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3944,"nodeType":"IfStatement","src":"13370:103:5","trueBody":{"id":3943,"nodeType":"Block","src":"13400:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13456:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3938,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"13421:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3942,"nodeType":"RevertStatement","src":"13414:48:5"}]}},{"expression":{"arguments":[{"id":3947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"13496:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3945,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:5","typeDescriptions":{}}},"id":3948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3930,"id":3949,"nodeType":"Return","src":"13482:20:5"}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"13015:276:5","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:5","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"value","nameLocation":"13322:5:5","nodeType":"VariableDeclaration","scope":3951,"src":"13314:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:5"},"returnParameters":{"id":3930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3951,"src":"13352:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3928,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:5","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:5"},"scope":5017,"src":"13296:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3978,"nodeType":"Block","src":"13860:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"13874:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3961,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3960,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:5","memberName":"max","nodeType":"MemberAccess","src":"13882:16:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3972,"nodeType":"IfStatement","src":"13870:103:5","trueBody":{"id":3971,"nodeType":"Block","src":"13900:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:5","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"13956:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3966,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"13921:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3970,"nodeType":"RevertStatement","src":"13914:48:5"}]}},{"expression":{"arguments":[{"id":3975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"13996:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3973,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:5","typeDescriptions":{}}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3958,"id":3977,"nodeType":"Return","src":"13982:20:5"}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"13515:276:5","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3979,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:5","nodeType":"FunctionDefinition","parameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"value","nameLocation":"13822:5:5","nodeType":"VariableDeclaration","scope":3979,"src":"13814:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:5"},"returnParameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3979,"src":"13852:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3956,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:5","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:5"},"scope":5017,"src":"13796:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4006,"nodeType":"Block","src":"14360:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"14374:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3989,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3988,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:5","memberName":"max","nodeType":"MemberAccess","src":"14382:16:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4000,"nodeType":"IfStatement","src":"14370:103:5","trueBody":{"id":3999,"nodeType":"Block","src":"14400:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"14456:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3994,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"14421:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3998,"nodeType":"RevertStatement","src":"14414:48:5"}]}},{"expression":{"arguments":[{"id":4003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3982,"src":"14496:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":4001,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:5","typeDescriptions":{}}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3986,"id":4005,"nodeType":"Return","src":"14482:20:5"}]},"documentation":{"id":3980,"nodeType":"StructuredDocumentation","src":"14015:276:5","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4007,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:5","nodeType":"FunctionDefinition","parameters":{"id":3983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3982,"mutability":"mutable","name":"value","nameLocation":"14322:5:5","nodeType":"VariableDeclaration","scope":4007,"src":"14314:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3981,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:5"},"returnParameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4007,"src":"14352:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3984,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:5","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:5"},"scope":5017,"src":"14296:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4034,"nodeType":"Block","src":"14860:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"14874:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4017,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":4016,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":4020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:5","memberName":"max","nodeType":"MemberAccess","src":"14882:16:5","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4028,"nodeType":"IfStatement","src":"14870:103:5","trueBody":{"id":4027,"nodeType":"Block","src":"14900:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:5","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"14956:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4022,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"14921:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4026,"nodeType":"RevertStatement","src":"14914:48:5"}]}},{"expression":{"arguments":[{"id":4031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"14996:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":4029,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:5","typeDescriptions":{}}},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":4014,"id":4033,"nodeType":"Return","src":"14982:20:5"}]},"documentation":{"id":4008,"nodeType":"StructuredDocumentation","src":"14515:276:5","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4035,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:5","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4010,"mutability":"mutable","name":"value","nameLocation":"14822:5:5","nodeType":"VariableDeclaration","scope":4035,"src":"14814:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:5"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4035,"src":"14852:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":4012,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:5","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:5"},"scope":5017,"src":"14796:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4062,"nodeType":"Block","src":"15360:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"15374:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4045,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":4044,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":4048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:5","memberName":"max","nodeType":"MemberAccess","src":"15382:16:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4056,"nodeType":"IfStatement","src":"15370:103:5","trueBody":{"id":4055,"nodeType":"Block","src":"15400:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"15456:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4050,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"15421:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4054,"nodeType":"RevertStatement","src":"15414:48:5"}]}},{"expression":{"arguments":[{"id":4059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4038,"src":"15496:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":4057,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:5","typeDescriptions":{}}},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4042,"id":4061,"nodeType":"Return","src":"15482:20:5"}]},"documentation":{"id":4036,"nodeType":"StructuredDocumentation","src":"15015:276:5","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4063,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:5","nodeType":"FunctionDefinition","parameters":{"id":4039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4038,"mutability":"mutable","name":"value","nameLocation":"15322:5:5","nodeType":"VariableDeclaration","scope":4063,"src":"15314:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4037,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:5"},"returnParameters":{"id":4042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4063,"src":"15352:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4040,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:5","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:5"},"scope":5017,"src":"15296:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4090,"nodeType":"Block","src":"15860:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"15874:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4073,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":4072,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:5","memberName":"max","nodeType":"MemberAccess","src":"15882:16:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4084,"nodeType":"IfStatement","src":"15870:103:5","trueBody":{"id":4083,"nodeType":"Block","src":"15900:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:5","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"15956:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4078,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"15921:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4082,"nodeType":"RevertStatement","src":"15914:48:5"}]}},{"expression":{"arguments":[{"id":4087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4066,"src":"15996:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":4085,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:5","typeDescriptions":{}}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":4070,"id":4089,"nodeType":"Return","src":"15982:20:5"}]},"documentation":{"id":4064,"nodeType":"StructuredDocumentation","src":"15515:276:5","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4091,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:5","nodeType":"FunctionDefinition","parameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"value","nameLocation":"15822:5:5","nodeType":"VariableDeclaration","scope":4091,"src":"15814:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:5"},"returnParameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4091,"src":"15852:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4068,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:5","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:5"},"scope":5017,"src":"15796:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4118,"nodeType":"Block","src":"16360:149:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"16374:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4101,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":4100,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:5","memberName":"max","nodeType":"MemberAccess","src":"16382:16:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4112,"nodeType":"IfStatement","src":"16370:103:5","trueBody":{"id":4111,"nodeType":"Block","src":"16400:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"16456:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4106,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"16421:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4110,"nodeType":"RevertStatement","src":"16414:48:5"}]}},{"expression":{"arguments":[{"id":4115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"16496:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":4113,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:5","typeDescriptions":{}}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4098,"id":4117,"nodeType":"Return","src":"16482:20:5"}]},"documentation":{"id":4092,"nodeType":"StructuredDocumentation","src":"16015:276:5","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:5","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"value","nameLocation":"16322:5:5","nodeType":"VariableDeclaration","scope":4119,"src":"16314:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:5"},"returnParameters":{"id":4098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4119,"src":"16352:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4096,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:5","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:5"},"scope":5017,"src":"16296:213:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4146,"nodeType":"Block","src":"16854:146:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"16868:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4129,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":4128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:5","memberName":"max","nodeType":"MemberAccess","src":"16876:15:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4140,"nodeType":"IfStatement","src":"16864:101:5","trueBody":{"id":4139,"nodeType":"Block","src":"16893:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"16948:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4134,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"16914:30:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4138,"nodeType":"RevertStatement","src":"16907:47:5"}]}},{"expression":{"arguments":[{"id":4143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"16987:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4141,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:5","typeDescriptions":{}}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":4126,"id":4145,"nodeType":"Return","src":"16974:19:5"}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"16515:272:5","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4147,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:5","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"value","nameLocation":"16817:5:5","nodeType":"VariableDeclaration","scope":4147,"src":"16809:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:5"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4147,"src":"16847:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4124,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:5"},"scope":5017,"src":"16792:208:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4169,"nodeType":"Block","src":"17236:128:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17250:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4163,"nodeType":"IfStatement","src":"17246:81:5","trueBody":{"id":4162,"nodeType":"Block","src":"17261:66:5","statements":[{"errorCall":{"arguments":[{"id":4159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17310:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4158,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"17282:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4161,"nodeType":"RevertStatement","src":"17275:41:5"}]}},{"expression":{"arguments":[{"id":4166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"17351:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4164,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:5","typeDescriptions":{}}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4154,"id":4168,"nodeType":"Return","src":"17336:21:5"}]},"documentation":{"id":4148,"nodeType":"StructuredDocumentation","src":"17006:160:5","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":4170,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:5","nodeType":"FunctionDefinition","parameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4150,"mutability":"mutable","name":"value","nameLocation":"17197:5:5","nodeType":"VariableDeclaration","scope":4170,"src":"17190:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4149,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:5"},"returnParameters":{"id":4154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4170,"src":"17227:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:5"},"scope":5017,"src":"17171:193:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4195,"nodeType":"Block","src":"17761:150:5","statements":[{"expression":{"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4178,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"17771:10:5","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"17791:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":4179,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:5","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:5","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":4184,"nodeType":"ExpressionStatement","src":"17771:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4176,"src":"17811:10:5","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"17825:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4194,"nodeType":"IfStatement","src":"17807:98:5","trueBody":{"id":4193,"nodeType":"Block","src":"17832:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:5","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4173,"src":"17888:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4188,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"17853:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4192,"nodeType":"RevertStatement","src":"17846:48:5"}]}}]},"documentation":{"id":4171,"nodeType":"StructuredDocumentation","src":"17370:312:5","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4196,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:5","nodeType":"FunctionDefinition","parameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4173,"mutability":"mutable","name":"value","nameLocation":"17712:5:5","nodeType":"VariableDeclaration","scope":4196,"src":"17705:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4172,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:5"},"returnParameters":{"id":4177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4176,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:5","nodeType":"VariableDeclaration","scope":4196,"src":"17742:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":4175,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:5","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:5"},"scope":5017,"src":"17687:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"18308:150:5","statements":[{"expression":{"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4204,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"18318:10:5","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"18338:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":4205,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:5","typeDescriptions":{}}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:5","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":4210,"nodeType":"ExpressionStatement","src":"18318:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4211,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4202,"src":"18358:10:5","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4212,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"18372:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4220,"nodeType":"IfStatement","src":"18354:98:5","trueBody":{"id":4219,"nodeType":"Block","src":"18379:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:5","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"18435:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4214,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"18400:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4218,"nodeType":"RevertStatement","src":"18393:48:5"}]}}]},"documentation":{"id":4197,"nodeType":"StructuredDocumentation","src":"17917:312:5","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:5","nodeType":"FunctionDefinition","parameters":{"id":4200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4199,"mutability":"mutable","name":"value","nameLocation":"18259:5:5","nodeType":"VariableDeclaration","scope":4222,"src":"18252:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4198,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:5"},"returnParameters":{"id":4203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4202,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:5","nodeType":"VariableDeclaration","scope":4222,"src":"18289:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":4201,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:5","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:5"},"scope":5017,"src":"18234:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4247,"nodeType":"Block","src":"18855:150:5","statements":[{"expression":{"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4230,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"18865:10:5","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4233,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"18885:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":4231,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:5","typeDescriptions":{}}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:5","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":4236,"nodeType":"ExpressionStatement","src":"18865:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4237,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4228,"src":"18905:10:5","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4238,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"18919:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4246,"nodeType":"IfStatement","src":"18901:98:5","trueBody":{"id":4245,"nodeType":"Block","src":"18926:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:5","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"18982:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4240,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"18947:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4244,"nodeType":"RevertStatement","src":"18940:48:5"}]}}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"18464:312:5","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:5","nodeType":"FunctionDefinition","parameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"value","nameLocation":"18806:5:5","nodeType":"VariableDeclaration","scope":4248,"src":"18799:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4224,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:5"},"returnParameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:5","nodeType":"VariableDeclaration","scope":4248,"src":"18836:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":4227,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:5","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:5"},"scope":5017,"src":"18781:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4273,"nodeType":"Block","src":"19402:150:5","statements":[{"expression":{"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"19412:10:5","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"19432:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":4257,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:5","typeDescriptions":{}}},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:5","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":4262,"nodeType":"ExpressionStatement","src":"19412:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4263,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4254,"src":"19452:10:5","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4264,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"19466:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4272,"nodeType":"IfStatement","src":"19448:98:5","trueBody":{"id":4271,"nodeType":"Block","src":"19473:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:5","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"19529:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4266,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"19494:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4270,"nodeType":"RevertStatement","src":"19487:48:5"}]}}]},"documentation":{"id":4249,"nodeType":"StructuredDocumentation","src":"19011:312:5","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4274,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:5","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"value","nameLocation":"19353:5:5","nodeType":"VariableDeclaration","scope":4274,"src":"19346:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4250,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:5"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:5","nodeType":"VariableDeclaration","scope":4274,"src":"19383:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":4253,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:5","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:5"},"scope":5017,"src":"19328:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4299,"nodeType":"Block","src":"19949:150:5","statements":[{"expression":{"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4282,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"19959:10:5","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"19979:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":4283,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:5","typeDescriptions":{}}},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:5","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":4288,"nodeType":"ExpressionStatement","src":"19959:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4289,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4280,"src":"19999:10:5","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"20013:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4298,"nodeType":"IfStatement","src":"19995:98:5","trueBody":{"id":4297,"nodeType":"Block","src":"20020:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:5","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4277,"src":"20076:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4292,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"20041:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4296,"nodeType":"RevertStatement","src":"20034:48:5"}]}}]},"documentation":{"id":4275,"nodeType":"StructuredDocumentation","src":"19558:312:5","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4300,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:5","nodeType":"FunctionDefinition","parameters":{"id":4278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4277,"mutability":"mutable","name":"value","nameLocation":"19900:5:5","nodeType":"VariableDeclaration","scope":4300,"src":"19893:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4276,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:5"},"returnParameters":{"id":4281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4280,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:5","nodeType":"VariableDeclaration","scope":4300,"src":"19930:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":4279,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:5","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:5"},"scope":5017,"src":"19875:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4325,"nodeType":"Block","src":"20496:150:5","statements":[{"expression":{"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4308,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"20506:10:5","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"20526:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":4309,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:5","typeDescriptions":{}}},"id":4312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:5","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":4314,"nodeType":"ExpressionStatement","src":"20506:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4315,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4306,"src":"20546:10:5","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"20560:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4324,"nodeType":"IfStatement","src":"20542:98:5","trueBody":{"id":4323,"nodeType":"Block","src":"20567:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:5","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"20623:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4318,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"20588:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4322,"nodeType":"RevertStatement","src":"20581:48:5"}]}}]},"documentation":{"id":4301,"nodeType":"StructuredDocumentation","src":"20105:312:5","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4326,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:5","nodeType":"FunctionDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4303,"mutability":"mutable","name":"value","nameLocation":"20447:5:5","nodeType":"VariableDeclaration","scope":4326,"src":"20440:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4302,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:5"},"returnParameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:5","nodeType":"VariableDeclaration","scope":4326,"src":"20477:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":4305,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:5","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:5"},"scope":5017,"src":"20422:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4351,"nodeType":"Block","src":"21043:150:5","statements":[{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4334,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"21053:10:5","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"21073:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":4335,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:5","typeDescriptions":{}}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:5","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":4340,"nodeType":"ExpressionStatement","src":"21053:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4332,"src":"21093:10:5","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"21107:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4350,"nodeType":"IfStatement","src":"21089:98:5","trueBody":{"id":4349,"nodeType":"Block","src":"21114:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:5","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4329,"src":"21170:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4344,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"21135:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4348,"nodeType":"RevertStatement","src":"21128:48:5"}]}}]},"documentation":{"id":4327,"nodeType":"StructuredDocumentation","src":"20652:312:5","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4352,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:5","nodeType":"FunctionDefinition","parameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"value","nameLocation":"20994:5:5","nodeType":"VariableDeclaration","scope":4352,"src":"20987:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4328,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:5"},"returnParameters":{"id":4333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4332,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:5","nodeType":"VariableDeclaration","scope":4352,"src":"21024:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":4331,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:5","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:5"},"scope":5017,"src":"20969:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4377,"nodeType":"Block","src":"21590:150:5","statements":[{"expression":{"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4360,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"21600:10:5","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21620:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":4361,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:5","typeDescriptions":{}}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:5","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":4366,"nodeType":"ExpressionStatement","src":"21600:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4367,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4358,"src":"21640:10:5","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21654:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4376,"nodeType":"IfStatement","src":"21636:98:5","trueBody":{"id":4375,"nodeType":"Block","src":"21661:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:5","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4355,"src":"21717:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4370,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"21682:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4374,"nodeType":"RevertStatement","src":"21675:48:5"}]}}]},"documentation":{"id":4353,"nodeType":"StructuredDocumentation","src":"21199:312:5","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4378,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:5","nodeType":"FunctionDefinition","parameters":{"id":4356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4355,"mutability":"mutable","name":"value","nameLocation":"21541:5:5","nodeType":"VariableDeclaration","scope":4378,"src":"21534:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4354,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:5"},"returnParameters":{"id":4359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4358,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:5","nodeType":"VariableDeclaration","scope":4378,"src":"21571:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":4357,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:5","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:5"},"scope":5017,"src":"21516:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4403,"nodeType":"Block","src":"22137:150:5","statements":[{"expression":{"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"22147:10:5","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"22167:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":4387,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:5","typeDescriptions":{}}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:5","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":4392,"nodeType":"ExpressionStatement","src":"22147:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4393,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4384,"src":"22187:10:5","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"22201:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4402,"nodeType":"IfStatement","src":"22183:98:5","trueBody":{"id":4401,"nodeType":"Block","src":"22208:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:5","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"22264:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4396,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"22229:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4400,"nodeType":"RevertStatement","src":"22222:48:5"}]}}]},"documentation":{"id":4379,"nodeType":"StructuredDocumentation","src":"21746:312:5","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4404,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:5","nodeType":"FunctionDefinition","parameters":{"id":4382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4381,"mutability":"mutable","name":"value","nameLocation":"22088:5:5","nodeType":"VariableDeclaration","scope":4404,"src":"22081:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4380,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:5"},"returnParameters":{"id":4385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4384,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:5","nodeType":"VariableDeclaration","scope":4404,"src":"22118:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":4383,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:5","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:5"},"scope":5017,"src":"22063:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4429,"nodeType":"Block","src":"22684:150:5","statements":[{"expression":{"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"22694:10:5","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"22714:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":4413,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:5","typeDescriptions":{}}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:5","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":4418,"nodeType":"ExpressionStatement","src":"22694:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4419,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"22734:10:5","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"22748:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4428,"nodeType":"IfStatement","src":"22730:98:5","trueBody":{"id":4427,"nodeType":"Block","src":"22755:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:5","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4407,"src":"22811:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4422,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"22776:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4426,"nodeType":"RevertStatement","src":"22769:48:5"}]}}]},"documentation":{"id":4405,"nodeType":"StructuredDocumentation","src":"22293:312:5","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4430,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:5","nodeType":"FunctionDefinition","parameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"value","nameLocation":"22635:5:5","nodeType":"VariableDeclaration","scope":4430,"src":"22628:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4406,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:5"},"returnParameters":{"id":4411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:5","nodeType":"VariableDeclaration","scope":4430,"src":"22665:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":4409,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:5","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:5"},"scope":5017,"src":"22610:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4455,"nodeType":"Block","src":"23231:150:5","statements":[{"expression":{"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4438,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"23241:10:5","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"23261:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":4439,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:5","typeDescriptions":{}}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:5","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":4444,"nodeType":"ExpressionStatement","src":"23241:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4445,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4436,"src":"23281:10:5","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"23295:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4454,"nodeType":"IfStatement","src":"23277:98:5","trueBody":{"id":4453,"nodeType":"Block","src":"23302:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:5","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4433,"src":"23358:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4448,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"23323:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4452,"nodeType":"RevertStatement","src":"23316:48:5"}]}}]},"documentation":{"id":4431,"nodeType":"StructuredDocumentation","src":"22840:312:5","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4456,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:5","nodeType":"FunctionDefinition","parameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"value","nameLocation":"23182:5:5","nodeType":"VariableDeclaration","scope":4456,"src":"23175:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4432,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:5"},"returnParameters":{"id":4437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4436,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:5","nodeType":"VariableDeclaration","scope":4456,"src":"23212:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":4435,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:5","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:5"},"scope":5017,"src":"23157:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4481,"nodeType":"Block","src":"23778:150:5","statements":[{"expression":{"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"23788:10:5","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"23808:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":4465,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:5","typeDescriptions":{}}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:5","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":4470,"nodeType":"ExpressionStatement","src":"23788:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4471,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"23828:10:5","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"23842:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4480,"nodeType":"IfStatement","src":"23824:98:5","trueBody":{"id":4479,"nodeType":"Block","src":"23849:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:5","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"23905:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4474,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"23870:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4478,"nodeType":"RevertStatement","src":"23863:48:5"}]}}]},"documentation":{"id":4457,"nodeType":"StructuredDocumentation","src":"23387:312:5","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4482,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:5","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"value","nameLocation":"23729:5:5","nodeType":"VariableDeclaration","scope":4482,"src":"23722:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4458,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:5"},"returnParameters":{"id":4463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:5","nodeType":"VariableDeclaration","scope":4482,"src":"23759:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":4461,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:5","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:5"},"scope":5017,"src":"23704:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4507,"nodeType":"Block","src":"24325:150:5","statements":[{"expression":{"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4490,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"24335:10:5","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"24355:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":4491,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:5","typeDescriptions":{}}},"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:5","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":4496,"nodeType":"ExpressionStatement","src":"24335:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4497,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"24375:10:5","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"24389:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4506,"nodeType":"IfStatement","src":"24371:98:5","trueBody":{"id":4505,"nodeType":"Block","src":"24396:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:5","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"24452:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4500,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"24417:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4504,"nodeType":"RevertStatement","src":"24410:48:5"}]}}]},"documentation":{"id":4483,"nodeType":"StructuredDocumentation","src":"23934:312:5","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4508,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:5","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"value","nameLocation":"24276:5:5","nodeType":"VariableDeclaration","scope":4508,"src":"24269:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4484,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:5"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:5","nodeType":"VariableDeclaration","scope":4508,"src":"24306:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":4487,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:5","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:5"},"scope":5017,"src":"24251:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4533,"nodeType":"Block","src":"24872:150:5","statements":[{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4516,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"24882:10:5","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"24902:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":4517,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:5","typeDescriptions":{}}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:5","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":4522,"nodeType":"ExpressionStatement","src":"24882:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4514,"src":"24922:10:5","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"24936:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4532,"nodeType":"IfStatement","src":"24918:98:5","trueBody":{"id":4531,"nodeType":"Block","src":"24943:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:5","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4511,"src":"24999:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4526,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"24964:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4530,"nodeType":"RevertStatement","src":"24957:48:5"}]}}]},"documentation":{"id":4509,"nodeType":"StructuredDocumentation","src":"24481:312:5","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4534,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:5","nodeType":"FunctionDefinition","parameters":{"id":4512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4511,"mutability":"mutable","name":"value","nameLocation":"24823:5:5","nodeType":"VariableDeclaration","scope":4534,"src":"24816:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4510,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:5"},"returnParameters":{"id":4515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:5","nodeType":"VariableDeclaration","scope":4534,"src":"24853:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":4513,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:5","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:5"},"scope":5017,"src":"24798:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4559,"nodeType":"Block","src":"25419:150:5","statements":[{"expression":{"id":4547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4542,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"25429:10:5","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4545,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"25449:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":4543,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:5","typeDescriptions":{}}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:5","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":4548,"nodeType":"ExpressionStatement","src":"25429:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4549,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"25469:10:5","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"25483:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4558,"nodeType":"IfStatement","src":"25465:98:5","trueBody":{"id":4557,"nodeType":"Block","src":"25490:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:5","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":4554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4537,"src":"25546:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4552,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"25511:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4556,"nodeType":"RevertStatement","src":"25504:48:5"}]}}]},"documentation":{"id":4535,"nodeType":"StructuredDocumentation","src":"25028:312:5","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":4560,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:5","nodeType":"FunctionDefinition","parameters":{"id":4538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4537,"mutability":"mutable","name":"value","nameLocation":"25370:5:5","nodeType":"VariableDeclaration","scope":4560,"src":"25363:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4536,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:5"},"returnParameters":{"id":4541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:5","nodeType":"VariableDeclaration","scope":4560,"src":"25400:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":4539,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:5","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:5"},"scope":5017,"src":"25345:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4585,"nodeType":"Block","src":"25966:150:5","statements":[{"expression":{"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4568,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"25976:10:5","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"25996:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":4569,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:5","typeDescriptions":{}}},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:5","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":4574,"nodeType":"ExpressionStatement","src":"25976:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4575,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"26016:10:5","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4576,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"26030:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4584,"nodeType":"IfStatement","src":"26012:98:5","trueBody":{"id":4583,"nodeType":"Block","src":"26037:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:5","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4563,"src":"26093:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4578,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"26058:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4582,"nodeType":"RevertStatement","src":"26051:48:5"}]}}]},"documentation":{"id":4561,"nodeType":"StructuredDocumentation","src":"25575:312:5","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":4586,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:5","nodeType":"FunctionDefinition","parameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"value","nameLocation":"25917:5:5","nodeType":"VariableDeclaration","scope":4586,"src":"25910:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4562,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:5"},"returnParameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4566,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:5","nodeType":"VariableDeclaration","scope":4586,"src":"25947:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":4565,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:5","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:5"},"scope":5017,"src":"25892:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"26513:150:5","statements":[{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4594,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"26523:10:5","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"26543:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":4595,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:5","typeDescriptions":{}}},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:5","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":4600,"nodeType":"ExpressionStatement","src":"26523:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"26563:10:5","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"26577:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4610,"nodeType":"IfStatement","src":"26559:98:5","trueBody":{"id":4609,"nodeType":"Block","src":"26584:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:5","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":4606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"26640:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4604,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"26605:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4608,"nodeType":"RevertStatement","src":"26598:48:5"}]}}]},"documentation":{"id":4587,"nodeType":"StructuredDocumentation","src":"26122:312:5","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:5","nodeType":"FunctionDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4589,"mutability":"mutable","name":"value","nameLocation":"26464:5:5","nodeType":"VariableDeclaration","scope":4612,"src":"26457:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4588,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:5"},"returnParameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4592,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:5","nodeType":"VariableDeclaration","scope":4612,"src":"26494:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":4591,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:5","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:5"},"scope":5017,"src":"26439:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4637,"nodeType":"Block","src":"27060:150:5","statements":[{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4620,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"27070:10:5","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4623,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"27090:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":4621,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:5","typeDescriptions":{}}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:5","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":4626,"nodeType":"ExpressionStatement","src":"27070:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4627,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"27110:10:5","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4628,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"27124:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4636,"nodeType":"IfStatement","src":"27106:98:5","trueBody":{"id":4635,"nodeType":"Block","src":"27131:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":4631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:5","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":4632,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"27187:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4630,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"27152:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4634,"nodeType":"RevertStatement","src":"27145:48:5"}]}}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"26669:312:5","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":4638,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:5","nodeType":"FunctionDefinition","parameters":{"id":4616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"value","nameLocation":"27011:5:5","nodeType":"VariableDeclaration","scope":4638,"src":"27004:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4614,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:5"},"returnParameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4618,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:5","nodeType":"VariableDeclaration","scope":4638,"src":"27041:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":4617,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:5","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:5"},"scope":5017,"src":"26986:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4663,"nodeType":"Block","src":"27607:150:5","statements":[{"expression":{"id":4651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4646,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"27617:10:5","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"27637:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":4647,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:5","typeDescriptions":{}}},"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:5","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":4652,"nodeType":"ExpressionStatement","src":"27617:26:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4653,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4644,"src":"27657:10:5","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"27671:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4662,"nodeType":"IfStatement","src":"27653:98:5","trueBody":{"id":4661,"nodeType":"Block","src":"27678:73:5","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:5","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":4658,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"27734:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4656,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"27699:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4660,"nodeType":"RevertStatement","src":"27692:48:5"}]}}]},"documentation":{"id":4639,"nodeType":"StructuredDocumentation","src":"27216:312:5","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4664,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:5","nodeType":"FunctionDefinition","parameters":{"id":4642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4641,"mutability":"mutable","name":"value","nameLocation":"27558:5:5","nodeType":"VariableDeclaration","scope":4664,"src":"27551:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4640,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:5"},"returnParameters":{"id":4645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4644,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:5","nodeType":"VariableDeclaration","scope":4664,"src":"27588:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":4643,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:5","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:5"},"scope":5017,"src":"27533:224:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4689,"nodeType":"Block","src":"28147:148:5","statements":[{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4672,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"28157:10:5","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"28176:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4673,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:5","typeDescriptions":{}}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:5","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4678,"nodeType":"ExpressionStatement","src":"28157:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"28196:10:5","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4680,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"28210:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4688,"nodeType":"IfStatement","src":"28192:97:5","trueBody":{"id":4687,"nodeType":"Block","src":"28217:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:5","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4684,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"28272:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4682,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"28238:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4686,"nodeType":"RevertStatement","src":"28231:47:5"}]}}]},"documentation":{"id":4665,"nodeType":"StructuredDocumentation","src":"27763:307:5","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4690,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:5","nodeType":"FunctionDefinition","parameters":{"id":4668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"value","nameLocation":"28099:5:5","nodeType":"VariableDeclaration","scope":4690,"src":"28092:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4666,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:5"},"returnParameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4670,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:5","nodeType":"VariableDeclaration","scope":4690,"src":"28129:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4669,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:5","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:5"},"scope":5017,"src":"28075:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4715,"nodeType":"Block","src":"28685:148:5","statements":[{"expression":{"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4698,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"28695:10:5","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"28714:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4699,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:5","typeDescriptions":{}}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:5","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4704,"nodeType":"ExpressionStatement","src":"28695:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4705,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4696,"src":"28734:10:5","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"28748:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4714,"nodeType":"IfStatement","src":"28730:97:5","trueBody":{"id":4713,"nodeType":"Block","src":"28755:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:5","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"28810:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4708,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"28776:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4712,"nodeType":"RevertStatement","src":"28769:47:5"}]}}]},"documentation":{"id":4691,"nodeType":"StructuredDocumentation","src":"28301:307:5","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4716,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:5","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4693,"mutability":"mutable","name":"value","nameLocation":"28637:5:5","nodeType":"VariableDeclaration","scope":4716,"src":"28630:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4692,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:5"},"returnParameters":{"id":4697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4696,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:5","nodeType":"VariableDeclaration","scope":4716,"src":"28667:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4695,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:5","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:5"},"scope":5017,"src":"28613:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4741,"nodeType":"Block","src":"29223:148:5","statements":[{"expression":{"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4724,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"29233:10:5","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"29252:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4725,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:5","typeDescriptions":{}}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:5","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4730,"nodeType":"ExpressionStatement","src":"29233:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4722,"src":"29272:10:5","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"29286:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4740,"nodeType":"IfStatement","src":"29268:97:5","trueBody":{"id":4739,"nodeType":"Block","src":"29293:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:5","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4719,"src":"29348:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4734,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"29314:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4738,"nodeType":"RevertStatement","src":"29307:47:5"}]}}]},"documentation":{"id":4717,"nodeType":"StructuredDocumentation","src":"28839:307:5","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4742,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:5","nodeType":"FunctionDefinition","parameters":{"id":4720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4719,"mutability":"mutable","name":"value","nameLocation":"29175:5:5","nodeType":"VariableDeclaration","scope":4742,"src":"29168:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4718,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:5"},"returnParameters":{"id":4723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4722,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:5","nodeType":"VariableDeclaration","scope":4742,"src":"29205:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4721,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:5","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:5"},"scope":5017,"src":"29151:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4767,"nodeType":"Block","src":"29761:148:5","statements":[{"expression":{"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4750,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"29771:10:5","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"29790:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4751,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:5","typeDescriptions":{}}},"id":4754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:5","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4756,"nodeType":"ExpressionStatement","src":"29771:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4757,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4748,"src":"29810:10:5","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"29824:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4766,"nodeType":"IfStatement","src":"29806:97:5","trueBody":{"id":4765,"nodeType":"Block","src":"29831:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:5","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"29886:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4760,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"29852:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4764,"nodeType":"RevertStatement","src":"29845:47:5"}]}}]},"documentation":{"id":4743,"nodeType":"StructuredDocumentation","src":"29377:307:5","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4768,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:5","nodeType":"FunctionDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"value","nameLocation":"29713:5:5","nodeType":"VariableDeclaration","scope":4768,"src":"29706:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4744,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:5"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:5","nodeType":"VariableDeclaration","scope":4768,"src":"29743:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4747,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:5","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:5"},"scope":5017,"src":"29689:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4793,"nodeType":"Block","src":"30299:148:5","statements":[{"expression":{"id":4781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4776,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"30309:10:5","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"30328:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4777,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:5","typeDescriptions":{}}},"id":4780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:5","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4782,"nodeType":"ExpressionStatement","src":"30309:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"30348:10:5","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"30362:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4792,"nodeType":"IfStatement","src":"30344:97:5","trueBody":{"id":4791,"nodeType":"Block","src":"30369:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:5","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4771,"src":"30424:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4786,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"30390:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4790,"nodeType":"RevertStatement","src":"30383:47:5"}]}}]},"documentation":{"id":4769,"nodeType":"StructuredDocumentation","src":"29915:307:5","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4794,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:5","nodeType":"FunctionDefinition","parameters":{"id":4772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4771,"mutability":"mutable","name":"value","nameLocation":"30251:5:5","nodeType":"VariableDeclaration","scope":4794,"src":"30244:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4770,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:5"},"returnParameters":{"id":4775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4774,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:5","nodeType":"VariableDeclaration","scope":4794,"src":"30281:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4773,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:5","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:5"},"scope":5017,"src":"30227:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"30837:148:5","statements":[{"expression":{"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4802,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"30847:10:5","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4805,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"30866:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4803,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:5","typeDescriptions":{}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:5","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4808,"nodeType":"ExpressionStatement","src":"30847:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4809,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"30886:10:5","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"30900:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4818,"nodeType":"IfStatement","src":"30882:97:5","trueBody":{"id":4817,"nodeType":"Block","src":"30907:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:5","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4797,"src":"30962:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4812,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"30928:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4816,"nodeType":"RevertStatement","src":"30921:47:5"}]}}]},"documentation":{"id":4795,"nodeType":"StructuredDocumentation","src":"30453:307:5","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:5","nodeType":"FunctionDefinition","parameters":{"id":4798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4797,"mutability":"mutable","name":"value","nameLocation":"30789:5:5","nodeType":"VariableDeclaration","scope":4820,"src":"30782:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4796,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:5"},"returnParameters":{"id":4801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:5","nodeType":"VariableDeclaration","scope":4820,"src":"30819:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4799,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:5","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:5"},"scope":5017,"src":"30765:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4845,"nodeType":"Block","src":"31375:148:5","statements":[{"expression":{"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4828,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"31385:10:5","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"31404:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4829,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:5","typeDescriptions":{}}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:5","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4834,"nodeType":"ExpressionStatement","src":"31385:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4835,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4826,"src":"31424:10:5","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"31438:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4844,"nodeType":"IfStatement","src":"31420:97:5","trueBody":{"id":4843,"nodeType":"Block","src":"31445:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:5","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4823,"src":"31500:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4838,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"31466:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4842,"nodeType":"RevertStatement","src":"31459:47:5"}]}}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"30991:307:5","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4846,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:5","nodeType":"FunctionDefinition","parameters":{"id":4824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"value","nameLocation":"31327:5:5","nodeType":"VariableDeclaration","scope":4846,"src":"31320:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4822,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:5"},"returnParameters":{"id":4827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4826,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:5","nodeType":"VariableDeclaration","scope":4846,"src":"31357:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4825,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:5","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:5"},"scope":5017,"src":"31303:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4871,"nodeType":"Block","src":"31913:148:5","statements":[{"expression":{"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4854,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"31923:10:5","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"31942:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4855,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:5","typeDescriptions":{}}},"id":4858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:5","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4860,"nodeType":"ExpressionStatement","src":"31923:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4861,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4852,"src":"31962:10:5","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"31976:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4870,"nodeType":"IfStatement","src":"31958:97:5","trueBody":{"id":4869,"nodeType":"Block","src":"31983:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:5","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"32038:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4864,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"32004:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4868,"nodeType":"RevertStatement","src":"31997:47:5"}]}}]},"documentation":{"id":4847,"nodeType":"StructuredDocumentation","src":"31529:307:5","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4872,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:5","nodeType":"FunctionDefinition","parameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4849,"mutability":"mutable","name":"value","nameLocation":"31865:5:5","nodeType":"VariableDeclaration","scope":4872,"src":"31858:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4848,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:5"},"returnParameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:5","nodeType":"VariableDeclaration","scope":4872,"src":"31895:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4851,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:5","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:5"},"scope":5017,"src":"31841:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4897,"nodeType":"Block","src":"32451:148:5","statements":[{"expression":{"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4880,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"32461:10:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"32480:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4881,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:5","typeDescriptions":{}}},"id":4884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4886,"nodeType":"ExpressionStatement","src":"32461:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4878,"src":"32500:10:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"32514:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4896,"nodeType":"IfStatement","src":"32496:97:5","trueBody":{"id":4895,"nodeType":"Block","src":"32521:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"32576:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4890,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"32542:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4894,"nodeType":"RevertStatement","src":"32535:47:5"}]}}]},"documentation":{"id":4873,"nodeType":"StructuredDocumentation","src":"32067:307:5","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:5","nodeType":"FunctionDefinition","parameters":{"id":4876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4875,"mutability":"mutable","name":"value","nameLocation":"32403:5:5","nodeType":"VariableDeclaration","scope":4898,"src":"32396:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4874,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:5"},"returnParameters":{"id":4879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4878,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:5","nodeType":"VariableDeclaration","scope":4898,"src":"32433:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4877,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:5","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:5"},"scope":5017,"src":"32379:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4923,"nodeType":"Block","src":"32989:148:5","statements":[{"expression":{"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"32999:10:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4909,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"33018:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4907,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:5","typeDescriptions":{}}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4912,"nodeType":"ExpressionStatement","src":"32999:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4913,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4904,"src":"33038:10:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"33052:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4922,"nodeType":"IfStatement","src":"33034:97:5","trueBody":{"id":4921,"nodeType":"Block","src":"33059:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:5","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"33114:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4916,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"33080:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4920,"nodeType":"RevertStatement","src":"33073:47:5"}]}}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"32605:307:5","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4924,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:5","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"value","nameLocation":"32941:5:5","nodeType":"VariableDeclaration","scope":4924,"src":"32934:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4900,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:5"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:5","nodeType":"VariableDeclaration","scope":4924,"src":"32971:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4903,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:5","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:5"},"scope":5017,"src":"32917:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4949,"nodeType":"Block","src":"33527:148:5","statements":[{"expression":{"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4932,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"33537:10:5","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"33556:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4933,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:5","typeDescriptions":{}}},"id":4936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:5","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4938,"nodeType":"ExpressionStatement","src":"33537:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4939,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4930,"src":"33576:10:5","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"33590:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4948,"nodeType":"IfStatement","src":"33572:97:5","trueBody":{"id":4947,"nodeType":"Block","src":"33597:72:5","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:5","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4927,"src":"33652:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4942,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"33618:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4946,"nodeType":"RevertStatement","src":"33611:47:5"}]}}]},"documentation":{"id":4925,"nodeType":"StructuredDocumentation","src":"33143:307:5","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4950,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:5","nodeType":"FunctionDefinition","parameters":{"id":4928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4927,"mutability":"mutable","name":"value","nameLocation":"33479:5:5","nodeType":"VariableDeclaration","scope":4950,"src":"33472:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4926,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:5"},"returnParameters":{"id":4931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4930,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:5","nodeType":"VariableDeclaration","scope":4950,"src":"33509:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4929,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:5","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:5"},"scope":5017,"src":"33455:220:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4975,"nodeType":"Block","src":"34058:146:5","statements":[{"expression":{"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4958,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"34068:10:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"34086:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4959,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:5","typeDescriptions":{}}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4964,"nodeType":"ExpressionStatement","src":"34068:24:5"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4965,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4956,"src":"34106:10:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"34120:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4974,"nodeType":"IfStatement","src":"34102:96:5","trueBody":{"id":4973,"nodeType":"Block","src":"34127:71:5","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4953,"src":"34181:5:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4968,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"34148:29:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":4971,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4972,"nodeType":"RevertStatement","src":"34141:46:5"}]}}]},"documentation":{"id":4951,"nodeType":"StructuredDocumentation","src":"33681:302:5","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4976,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:5","nodeType":"FunctionDefinition","parameters":{"id":4954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4953,"mutability":"mutable","name":"value","nameLocation":"34011:5:5","nodeType":"VariableDeclaration","scope":4976,"src":"34004:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4952,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:5"},"returnParameters":{"id":4957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4956,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:5","nodeType":"VariableDeclaration","scope":4976,"src":"34041:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4955,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:5","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:5"},"scope":5017,"src":"33988:216:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5005,"nodeType":"Block","src":"34444:250:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4984,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"34557:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4988,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:5","memberName":"max","nodeType":"MemberAccess","src":"34573:16:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:5","typeDescriptions":{}}},"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4999,"nodeType":"IfStatement","src":"34553:105:5","trueBody":{"id":4998,"nodeType":"Block","src":"34592:66:5","statements":[{"errorCall":{"arguments":[{"id":4995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"34641:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4994,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"34613:27:5","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4997,"nodeType":"RevertStatement","src":"34606:41:5"}]}},{"expression":{"arguments":[{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4979,"src":"34681:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5000,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:5","typeDescriptions":{}}},"id":5003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4983,"id":5004,"nodeType":"Return","src":"34667:20:5"}]},"documentation":{"id":4977,"nodeType":"StructuredDocumentation","src":"34210:165:5","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:5","nodeType":"FunctionDefinition","parameters":{"id":4980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4979,"mutability":"mutable","name":"value","nameLocation":"34406:5:5","nodeType":"VariableDeclaration","scope":5006,"src":"34398:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4978,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:5"},"returnParameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5006,"src":"34436:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4981,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:5"},"scope":5017,"src":"34380:314:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5015,"nodeType":"Block","src":"34853:87:5","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:5","statements":[{"nodeType":"YulAssignment","src":"34902:22:5","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:5"},"nodeType":"YulFunctionCall","src":"34914:9:5"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:5"},"nodeType":"YulFunctionCall","src":"34907:17:5"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5009,"isOffset":false,"isSlot":false,"src":"34921:1:5","valueSize":1},{"declaration":5012,"isOffset":false,"isSlot":false,"src":"34902:1:5","valueSize":1}],"flags":["memory-safe"],"id":5014,"nodeType":"InlineAssembly","src":"34863:71:5"}]},"documentation":{"id":5007,"nodeType":"StructuredDocumentation","src":"34700:90:5","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":5016,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:5","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"b","nameLocation":"34816:1:5","nodeType":"VariableDeclaration","scope":5016,"src":"34811:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5008,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:5"},"returnParameters":{"id":5013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5012,"mutability":"mutable","name":"u","nameLocation":"34850:1:5","nodeType":"VariableDeclaration","scope":5016,"src":"34842:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5011,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:5"},"scope":5017,"src":"34795:145:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5018,"src":"769:34173:5","usedErrors":[3262,3267,3274,3279],"usedEvents":[]}],"src":"192:34751:5"},"id":5},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[5017],"SignedMath":[5161]},"id":5162,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5019,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5021,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5162,"sourceUnit":5018,"src":"135:40:6","symbolAliases":[{"foreign":{"id":5020,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"143:8:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":5022,"nodeType":"StructuredDocumentation","src":"177:80:6","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5161,"linearizedBaseContracts":[5161],"name":"SignedMath","nameLocation":"266:10:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":5051,"nodeType":"Block","src":"746:215:6","statements":[{"id":5050,"nodeType":"UncheckedBlock","src":"756:199:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5034,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"894:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5035,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5027,"src":"900:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5036,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"904:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5038,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":5043,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"932:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5041,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5017,"src":"916:8:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$5017_$","typeString":"type(library SafeCast)"}},"id":5042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:6","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":5016,"src":"916:15:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5039,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:6","typeDescriptions":{}}},"id":5045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5033,"id":5049,"nodeType":"Return","src":"887:57:6"}]}]},"documentation":{"id":5023,"nodeType":"StructuredDocumentation","src":"283:374:6","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5052,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:6","nodeType":"FunctionDefinition","parameters":{"id":5030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"condition","nameLocation":"684:9:6","nodeType":"VariableDeclaration","scope":5052,"src":"679:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5024,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5027,"mutability":"mutable","name":"a","nameLocation":"702:1:6","nodeType":"VariableDeclaration","scope":5052,"src":"695:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5026,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5029,"mutability":"mutable","name":"b","nameLocation":"712:1:6","nodeType":"VariableDeclaration","scope":5052,"src":"705:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5028,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:6"},"returnParameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5052,"src":"738:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5031,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:6"},"scope":5161,"src":"662:299:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5070,"nodeType":"Block","src":"1102:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5063,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"1127:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5064,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"1131:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5055,"src":"1134:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5067,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5057,"src":"1137:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5062,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"1119:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5061,"id":5069,"nodeType":"Return","src":"1112:27:6"}]},"documentation":{"id":5053,"nodeType":"StructuredDocumentation","src":"967:66:6","text":" @dev Returns the largest of two signed numbers."},"id":5071,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:6","nodeType":"FunctionDefinition","parameters":{"id":5058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"a","nameLocation":"1058:1:6","nodeType":"VariableDeclaration","scope":5071,"src":"1051:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5054,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5057,"mutability":"mutable","name":"b","nameLocation":"1068:1:6","nodeType":"VariableDeclaration","scope":5071,"src":"1061:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5056,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:6"},"returnParameters":{"id":5061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5071,"src":"1094:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5059,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:6"},"scope":5161,"src":"1038:108:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5089,"nodeType":"Block","src":"1288:44:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5082,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"1313:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5083,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"1317:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5085,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5074,"src":"1320:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":5086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5076,"src":"1323:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5081,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"1305:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5080,"id":5088,"nodeType":"Return","src":"1298:27:6"}]},"documentation":{"id":5072,"nodeType":"StructuredDocumentation","src":"1152:67:6","text":" @dev Returns the smallest of two signed numbers."},"id":5090,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:6","nodeType":"FunctionDefinition","parameters":{"id":5077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5074,"mutability":"mutable","name":"a","nameLocation":"1244:1:6","nodeType":"VariableDeclaration","scope":5090,"src":"1237:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5073,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5076,"mutability":"mutable","name":"b","nameLocation":"1254:1:6","nodeType":"VariableDeclaration","scope":5090,"src":"1247:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5075,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:6"},"returnParameters":{"id":5080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5090,"src":"1280:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5078,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:6"},"scope":5161,"src":"1224:108:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5133,"nodeType":"Block","src":"1537:162:6","statements":[{"assignments":[5101],"declarations":[{"constant":false,"id":5101,"mutability":"mutable","name":"x","nameLocation":"1606:1:6","nodeType":"VariableDeclaration","scope":5133,"src":"1599:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5100,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5114,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1611:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5103,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"1615:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1622:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5107,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"1626:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5112,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:6"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5115,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"1651:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5120,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5101,"src":"1671:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:6","typeDescriptions":{}}},"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5116,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:6","typeDescriptions":{}}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5093,"src":"1685:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5126,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"1689:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5130,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5099,"id":5132,"nodeType":"Return","src":"1644:48:6"}]},"documentation":{"id":5091,"nodeType":"StructuredDocumentation","src":"1338:126:6","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:6","nodeType":"FunctionDefinition","parameters":{"id":5096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5093,"mutability":"mutable","name":"a","nameLocation":"1493:1:6","nodeType":"VariableDeclaration","scope":5134,"src":"1486:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5092,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":5095,"mutability":"mutable","name":"b","nameLocation":"1503:1:6","nodeType":"VariableDeclaration","scope":5134,"src":"1496:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5094,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:6"},"returnParameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5134,"src":"1529:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5097,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:6"},"scope":5161,"src":"1469:230:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5159,"nodeType":"Block","src":"1843:767:6","statements":[{"id":5158,"nodeType":"UncheckedBlock","src":"1853:751:6","statements":[{"assignments":[5143],"declarations":[{"constant":false,"id":5143,"mutability":"mutable","name":"mask","nameLocation":"2424:4:6","nodeType":"VariableDeclaration","scope":5158,"src":"2417:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5142,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5147,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5144,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"2431:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":5145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:6"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5150,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"2576:1:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5151,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"2580:4:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5153,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5154,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"2588:4:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:6","typeDescriptions":{}}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5141,"id":5157,"nodeType":"Return","src":"2560:33:6"}]}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"1705:78:6","text":" @dev Returns the absolute unsigned value of a signed value."},"id":5160,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:6","nodeType":"FunctionDefinition","parameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"n","nameLocation":"1808:1:6","nodeType":"VariableDeclaration","scope":5160,"src":"1801:8:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5136,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:6"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5160,"src":"1834:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:6"},"scope":5161,"src":"1788:822:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5162,"src":"258:2354:6","usedErrors":[],"usedEvents":[]}],"src":"109:2504:6"},"id":6},"src/contracts/AdminManagement.sol":{"ast":{"absolutePath":"src/contracts/AdminManagement.sol","exportedSymbols":{"AdminManagement":[5474],"Context":[177],"Math":[3252],"Ownable":[147],"SafeCast":[5017],"SignedMath":[5161],"Strings":[1631]},"id":5475,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5163,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5475,"sourceUnit":148,"src":"57:52:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":5165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5475,"sourceUnit":1632,"src":"110:51:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5166,"name":"Ownable","nameLocations":["191:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"191:7:7"},"id":5167,"nodeType":"InheritanceSpecifier","src":"191:7:7"}],"canonicalName":"AdminManagement","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5474,"linearizedBaseContracts":[5474,147,177],"name":"AdminManagement","nameLocation":"172:15:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5170,"libraryName":{"id":5168,"name":"Strings","nameLocations":["211:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"211:7:7"},"nodeType":"UsingForDirective","src":"205:26:7","typeName":{"id":5169,"name":"uint256","nodeType":"ElementaryTypeName","src":"223:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"anonymous":false,"eventSelector":"51fadfdef046410e08649e65456ef08f429833c2095cd7092ee0bb0cbf519ded","id":5176,"name":"OfficerAppointed","nameLocation":"257:16:7","nodeType":"EventDefinition","parameters":{"id":5175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"indexed":true,"mutability":"mutable","name":"officer","nameLocation":"290:7:7","nodeType":"VariableDeclaration","scope":5176,"src":"274:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5171,"name":"address","nodeType":"ElementaryTypeName","src":"274:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5174,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"306:4:7","nodeType":"VariableDeclaration","scope":5176,"src":"299:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5173,"name":"string","nodeType":"ElementaryTypeName","src":"299:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"273:38:7"},"src":"251:61:7"},{"anonymous":false,"eventSelector":"c71ac73682f965d639a2f97202d5b162f5ea75f1ef0e933bad7f1db870a4c254","id":5180,"name":"OfficerRemoved","nameLocation":"323:14:7","nodeType":"EventDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"indexed":true,"mutability":"mutable","name":"officer","nameLocation":"354:7:7","nodeType":"VariableDeclaration","scope":5180,"src":"338:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5177,"name":"address","nodeType":"ElementaryTypeName","src":"338:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"337:25:7"},"src":"317:46:7"},{"anonymous":false,"eventSelector":"1409a6573d9c6d90ded7d595beb38d129f18081ae8a1018662713cbc1488041c","id":5188,"name":"OfficerPermissionsUpdated","nameLocation":"374:25:7","nodeType":"EventDefinition","parameters":{"id":5187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5182,"indexed":true,"mutability":"mutable","name":"officer","nameLocation":"416:7:7","nodeType":"VariableDeclaration","scope":5188,"src":"400:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5181,"name":"address","nodeType":"ElementaryTypeName","src":"400:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5184,"indexed":false,"mutability":"mutable","name":"canCreate","nameLocation":"430:9:7","nodeType":"VariableDeclaration","scope":5188,"src":"425:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5183,"name":"bool","nodeType":"ElementaryTypeName","src":"425:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5186,"indexed":false,"mutability":"mutable","name":"canApprove","nameLocation":"446:10:7","nodeType":"VariableDeclaration","scope":5188,"src":"441:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5185,"name":"bool","nodeType":"ElementaryTypeName","src":"441:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"399:58:7"},"src":"368:90:7"},{"body":{"id":5196,"nodeType":"Block","src":"539:2:7","statements":[]},"id":5197,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5193,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5190,"src":"525:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5194,"kind":"baseConstructorSpecifier","modifierName":{"id":5192,"name":"Ownable","nameLocations":["517:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"517:7:7"},"nodeType":"ModifierInvocation","src":"517:21:7"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5190,"mutability":"mutable","name":"initialOwner","nameLocation":"503:12:7","nodeType":"VariableDeclaration","scope":5197,"src":"495:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5189,"name":"address","nodeType":"ElementaryTypeName","src":"495:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"494:22:7"},"returnParameters":{"id":5195,"nodeType":"ParameterList","parameters":[],"src":"539:0:7"},"scope":5474,"src":"483:58:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"AdminManagement.Officer","id":5206,"members":[{"constant":false,"id":5199,"mutability":"mutable","name":"name","nameLocation":"601:4:7","nodeType":"VariableDeclaration","scope":5206,"src":"594:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5198,"name":"string","nodeType":"ElementaryTypeName","src":"594:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5201,"mutability":"mutable","name":"canCreateTenders","nameLocation":"620:16:7","nodeType":"VariableDeclaration","scope":5206,"src":"615:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5200,"name":"bool","nodeType":"ElementaryTypeName","src":"615:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5203,"mutability":"mutable","name":"canApproveBids","nameLocation":"651:14:7","nodeType":"VariableDeclaration","scope":5206,"src":"646:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5202,"name":"bool","nodeType":"ElementaryTypeName","src":"646:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5205,"mutability":"mutable","name":"isActive","nameLocation":"680:8:7","nodeType":"VariableDeclaration","scope":5206,"src":"675:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5204,"name":"bool","nodeType":"ElementaryTypeName","src":"675:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Officer","nameLocation":"576:7:7","nodeType":"StructDefinition","scope":5474,"src":"569:126:7","visibility":"public"},{"constant":false,"functionSelector":"084866dd","id":5211,"mutability":"mutable","name":"officers","nameLocation":"763:8:7","nodeType":"VariableDeclaration","scope":5474,"src":"728:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer)"},"typeName":{"id":5210,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5207,"name":"address","nodeType":"ElementaryTypeName","src":"736:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"728:27:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5209,"nodeType":"UserDefinedTypeName","pathNode":{"id":5208,"name":"Officer","nameLocations":["747:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5206,"src":"747:7:7"},"referencedDeclaration":5206,"src":"747:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage_ptr","typeString":"struct AdminManagement.Officer"}}},"visibility":"public"},{"constant":false,"functionSelector":"48cace83","id":5214,"mutability":"mutable","name":"officerList","nameLocation":"794:11:7","nodeType":"VariableDeclaration","scope":5474,"src":"777:28:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":5212,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5213,"nodeType":"ArrayTypeName","src":"777:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"body":{"id":5226,"nodeType":"Block","src":"884:94:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5217,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"902:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5220,"indexExpression":{"expression":{"id":5218,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"911:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"915:6:7","memberName":"sender","nodeType":"MemberAccess","src":"911:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"902:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"923:8:7","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5205,"src":"902:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f7420616e206f666669636572","id":5222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"933:26:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_9237d67fade782e71f65807b95c1d7b0c17c01d8b0ea219b40e37b336c2e833e","typeString":"literal_string \"Caller is not an officer\""},"value":"Caller is not an officer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9237d67fade782e71f65807b95c1d7b0c17c01d8b0ea219b40e37b336c2e833e","typeString":"literal_string \"Caller is not an officer\""}],"id":5216,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"894:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"894:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5224,"nodeType":"ExpressionStatement","src":"894:66:7"},{"id":5225,"nodeType":"PlaceholderStatement","src":"970:1:7"}]},"id":5227,"name":"onlyOfficer","nameLocation":"870:11:7","nodeType":"ModifierDefinition","parameters":{"id":5215,"nodeType":"ParameterList","parameters":[],"src":"881:2:7"},"src":"861:117:7","virtual":false,"visibility":"internal"},{"body":{"id":5253,"nodeType":"Block","src":"1118:245:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5234,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1149:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5237,"indexExpression":{"expression":{"id":5235,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1158:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1162:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1158:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1149:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5238,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1170:16:7","memberName":"canCreateTenders","nodeType":"MemberAccess","referencedDeclaration":5201,"src":"1149:37:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5239,"name":"createPermission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5229,"src":"1190:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1149:57:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5241,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1222:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5244,"indexExpression":{"expression":{"id":5242,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1231:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1235:6:7","memberName":"sender","nodeType":"MemberAccess","src":"1231:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1222:20:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1243:14:7","memberName":"canApproveBids","nodeType":"MemberAccess","referencedDeclaration":5203,"src":"1222:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5246,"name":"approvePermission","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5231,"src":"1261:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1222:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1149:129:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c657220646f6573206e6f742068617665207265717569726564207065726d697373696f6e73","id":5249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1292:43:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_19a53f723fd352e3745694956416cba91022e6439077cf00da1d1766aa0e809e","typeString":"literal_string \"Caller does not have required permissions\""},"value":"Caller does not have required permissions"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_19a53f723fd352e3745694956416cba91022e6439077cf00da1d1766aa0e809e","typeString":"literal_string \"Caller does not have required permissions\""}],"id":5233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1128:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1128:217:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5251,"nodeType":"ExpressionStatement","src":"1128:217:7"},{"id":5252,"nodeType":"PlaceholderStatement","src":"1355:1:7"}]},"id":5254,"name":"onlyWithPermission","nameLocation":"1052:18:7","nodeType":"ModifierDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"createPermission","nameLocation":"1076:16:7","nodeType":"VariableDeclaration","scope":5254,"src":"1071:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5228,"name":"bool","nodeType":"ElementaryTypeName","src":"1071:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5231,"mutability":"mutable","name":"approvePermission","nameLocation":"1099:17:7","nodeType":"VariableDeclaration","scope":5254,"src":"1094:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5230,"name":"bool","nodeType":"ElementaryTypeName","src":"1094:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1070:47:7"},"src":"1043:320:7","virtual":false,"visibility":"internal"},{"body":{"id":5308,"nodeType":"Block","src":"1569:406:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5268,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"1587:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1614:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1606:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5269,"name":"address","nodeType":"ElementaryTypeName","src":"1606:7:7","typeDescriptions":{}}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1606:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1587:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":5274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1618:17:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":5267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1579:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1579:57:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5276,"nodeType":"ExpressionStatement","src":"1579:57:7"},{"expression":{"arguments":[{"id":5282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1654:35:7","subExpression":{"expression":{"baseExpression":{"id":5278,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1655:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5280,"indexExpression":{"id":5279,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"1664:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1655:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1681:8:7","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5205,"src":"1655:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f66666963657220616c726561647920657869737473","id":5283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1691:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_dd5841d61980cbbac3df1818592b8bb8eaf72f86c85ad53d22514ba6aae2b79c","typeString":"literal_string \"Officer already exists\""},"value":"Officer already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dd5841d61980cbbac3df1818592b8bb8eaf72f86c85ad53d22514ba6aae2b79c","typeString":"literal_string \"Officer already exists\""}],"id":5277,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1646:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1646:70:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5285,"nodeType":"ExpressionStatement","src":"1646:70:7"},{"expression":{"id":5295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5286,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"1727:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5288,"indexExpression":{"id":5287,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"1736:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1727:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5290,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"1776:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5291,"name":"_canCreateTenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5260,"src":"1795:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5292,"name":"_canApproveBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"1826:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"74727565","id":5293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1855:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5289,"name":"Officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"1755:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Officer_$5206_storage_ptr_$","typeString":"type(struct AdminManagement.Officer storage pointer)"}},"id":5294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1755:114:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_memory_ptr","typeString":"struct AdminManagement.Officer memory"}},"src":"1727:142:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5296,"nodeType":"ExpressionStatement","src":"1727:142:7"},{"expression":{"arguments":[{"id":5300,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"1896:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":5297,"name":"officerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"1879:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1891:4:7","memberName":"push","nodeType":"MemberAccess","src":"1879:16:7","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5302,"nodeType":"ExpressionStatement","src":"1879:33:7"},{"eventCall":{"arguments":[{"id":5304,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5256,"src":"1945:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5305,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5258,"src":"1962:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5303,"name":"OfficerAppointed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"1928:16:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5307,"nodeType":"EmitStatement","src":"1923:45:7"}]},"functionSelector":"34a3537b","id":5309,"implemented":true,"kind":"function","modifiers":[{"id":5265,"kind":"modifierInvocation","modifierName":{"id":5264,"name":"onlyOwner","nameLocations":["1559:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"1559:9:7"},"nodeType":"ModifierInvocation","src":"1559:9:7"}],"name":"appointOfficer","nameLocation":"1407:14:7","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"_officerAddress","nameLocation":"1439:15:7","nodeType":"VariableDeclaration","scope":5309,"src":"1431:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5255,"name":"address","nodeType":"ElementaryTypeName","src":"1431:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5258,"mutability":"mutable","name":"_name","nameLocation":"1478:5:7","nodeType":"VariableDeclaration","scope":5309,"src":"1464:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5257,"name":"string","nodeType":"ElementaryTypeName","src":"1464:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5260,"mutability":"mutable","name":"_canCreateTenders","nameLocation":"1498:17:7","nodeType":"VariableDeclaration","scope":5309,"src":"1493:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5259,"name":"bool","nodeType":"ElementaryTypeName","src":"1493:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5262,"mutability":"mutable","name":"_canApproveBids","nameLocation":"1530:15:7","nodeType":"VariableDeclaration","scope":5309,"src":"1525:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5261,"name":"bool","nodeType":"ElementaryTypeName","src":"1525:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1421:130:7"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[],"src":"1569:0:7"},"scope":5474,"src":"1398:577:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5335,"nodeType":"Block","src":"2071:193:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5317,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"2089:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5319,"indexExpression":{"id":5318,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"2098:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2089:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2115:8:7","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5205,"src":"2089:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f66666963657220646f6573206e6f74206578697374","id":5321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2125:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa9f024bb61265f0cad48af90fcaf040b090f9a054339c5a13c926d65ff43517","typeString":"literal_string \"Officer does not exist\""},"value":"Officer does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa9f024bb61265f0cad48af90fcaf040b090f9a054339c5a13c926d65ff43517","typeString":"literal_string \"Officer does not exist\""}],"id":5316,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2081:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2081:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5323,"nodeType":"ExpressionStatement","src":"2081:69:7"},{"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5324,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"2169:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5326,"indexExpression":{"id":5325,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"2178:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2195:8:7","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5205,"src":"2169:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2206:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2169:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5330,"nodeType":"ExpressionStatement","src":"2169:42:7"},{"eventCall":{"arguments":[{"id":5332,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5311,"src":"2241:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5331,"name":"OfficerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5180,"src":"2226:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5334,"nodeType":"EmitStatement","src":"2221:36:7"}]},"functionSelector":"719a0f8c","id":5336,"implemented":true,"kind":"function","modifiers":[{"id":5314,"kind":"modifierInvocation","modifierName":{"id":5313,"name":"onlyOwner","nameLocations":["2061:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2061:9:7"},"nodeType":"ModifierInvocation","src":"2061:9:7"}],"name":"removeOfficer","nameLocation":"2015:13:7","nodeType":"FunctionDefinition","parameters":{"id":5312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5311,"mutability":"mutable","name":"_officerAddress","nameLocation":"2037:15:7","nodeType":"VariableDeclaration","scope":5336,"src":"2029:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5310,"name":"address","nodeType":"ElementaryTypeName","src":"2029:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2028:25:7"},"returnParameters":{"id":5315,"nodeType":"ParameterList","parameters":[],"src":"2071:0:7"},"scope":5474,"src":"2006:258:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5375,"nodeType":"Block","src":"2456:383:7","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5348,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"2474:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5350,"indexExpression":{"id":5349,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"2483:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2474:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2500:8:7","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5205,"src":"2474:34:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f66666963657220646f6573206e6f74206578697374","id":5352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2510:24:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa9f024bb61265f0cad48af90fcaf040b090f9a054339c5a13c926d65ff43517","typeString":"literal_string \"Officer does not exist\""},"value":"Officer does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa9f024bb61265f0cad48af90fcaf040b090f9a054339c5a13c926d65ff43517","typeString":"literal_string \"Officer does not exist\""}],"id":5347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2466:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2466:69:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5354,"nodeType":"ExpressionStatement","src":"2466:69:7"},{"expression":{"id":5360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5355,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"2554:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5357,"indexExpression":{"id":5356,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"2563:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2554:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2580:16:7","memberName":"canCreateTenders","nodeType":"MemberAccess","referencedDeclaration":5201,"src":"2554:42:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5359,"name":"_canCreateTenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"2599:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2554:62:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5361,"nodeType":"ExpressionStatement","src":"2554:62:7"},{"expression":{"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":5362,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"2626:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5364,"indexExpression":{"id":5363,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"2635:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2626:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5365,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2652:14:7","memberName":"canApproveBids","nodeType":"MemberAccess","referencedDeclaration":5203,"src":"2626:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5366,"name":"_canApproveBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"2669:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2626:58:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5368,"nodeType":"ExpressionStatement","src":"2626:58:7"},{"eventCall":{"arguments":[{"id":5370,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5338,"src":"2747:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5371,"name":"_canCreateTenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5340,"src":"2776:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5372,"name":"_canApproveBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5342,"src":"2807:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":5369,"name":"OfficerPermissionsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5188,"src":"2708:25:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$","typeString":"function (address,bool,bool)"}},"id":5373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2708:124:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5374,"nodeType":"EmitStatement","src":"2703:129:7"}]},"functionSelector":"4ac52c24","id":5376,"implemented":true,"kind":"function","modifiers":[{"id":5345,"kind":"modifierInvocation","modifierName":{"id":5344,"name":"onlyOwner","nameLocations":["2446:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2446:9:7"},"nodeType":"ModifierInvocation","src":"2446:9:7"}],"name":"updateOfficerPermissions","nameLocation":"2313:24:7","nodeType":"FunctionDefinition","parameters":{"id":5343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5338,"mutability":"mutable","name":"_officerAddress","nameLocation":"2355:15:7","nodeType":"VariableDeclaration","scope":5376,"src":"2347:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5337,"name":"address","nodeType":"ElementaryTypeName","src":"2347:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5340,"mutability":"mutable","name":"_canCreateTenders","nameLocation":"2385:17:7","nodeType":"VariableDeclaration","scope":5376,"src":"2380:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5339,"name":"bool","nodeType":"ElementaryTypeName","src":"2380:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5342,"mutability":"mutable","name":"_canApproveBids","nameLocation":"2417:15:7","nodeType":"VariableDeclaration","scope":5376,"src":"2412:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5341,"name":"bool","nodeType":"ElementaryTypeName","src":"2412:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2337:101:7"},"returnParameters":{"id":5346,"nodeType":"ParameterList","parameters":[],"src":"2456:0:7"},"scope":5474,"src":"2304:535:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5459,"nodeType":"Block","src":"2944:535:7","statements":[{"assignments":[5383],"declarations":[{"constant":false,"id":5383,"mutability":"mutable","name":"count","nameLocation":"2962:5:7","nodeType":"VariableDeclaration","scope":5459,"src":"2954:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5382,"name":"uint256","nodeType":"ElementaryTypeName","src":"2954:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5385,"initialValue":{"hexValue":"30","id":5384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2970:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2954:17:7"},{"body":{"id":5408,"nodeType":"Block","src":"3030:103:7","statements":[{"condition":{"expression":{"baseExpression":{"id":5397,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"3048:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5401,"indexExpression":{"baseExpression":{"id":5398,"name":"officerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"3057:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5400,"indexExpression":{"id":5399,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"3069:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3057:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3048:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5402,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3073:8:7","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5205,"src":"3048:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"3044:79:7","trueBody":{"id":5406,"nodeType":"Block","src":"3083:40:7","statements":[{"expression":{"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3101:7:7","subExpression":{"id":5403,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"3101:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5405,"nodeType":"ExpressionStatement","src":"3101:7:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5390,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"3001:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5391,"name":"officerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"3005:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3017:6:7","memberName":"length","nodeType":"MemberAccess","src":"3005:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3001:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5409,"initializationExpression":{"assignments":[5387],"declarations":[{"constant":false,"id":5387,"mutability":"mutable","name":"i","nameLocation":"2994:1:7","nodeType":"VariableDeclaration","scope":5409,"src":"2986:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5386,"name":"uint256","nodeType":"ElementaryTypeName","src":"2986:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5389,"initialValue":{"hexValue":"30","id":5388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2998:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2986:13:7"},"loopExpression":{"expression":{"id":5395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3025:3:7","subExpression":{"id":5394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5387,"src":"3025:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5396,"nodeType":"ExpressionStatement","src":"3025:3:7"},"nodeType":"ForStatement","src":"2981:152:7"},{"assignments":[5414],"declarations":[{"constant":false,"id":5414,"mutability":"mutable","name":"activeOfficers","nameLocation":"3160:14:7","nodeType":"VariableDeclaration","scope":5459,"src":"3143:31:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5412,"name":"address","nodeType":"ElementaryTypeName","src":"3143:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5413,"nodeType":"ArrayTypeName","src":"3143:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":5420,"initialValue":{"arguments":[{"id":5418,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5383,"src":"3191:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3177:13:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":5415,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5416,"nodeType":"ArrayTypeName","src":"3181:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":5419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3177:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"3143:54:7"},{"assignments":[5422],"declarations":[{"constant":false,"id":5422,"mutability":"mutable","name":"index","nameLocation":"3215:5:7","nodeType":"VariableDeclaration","scope":5459,"src":"3207:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5421,"name":"uint256","nodeType":"ElementaryTypeName","src":"3207:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5424,"initialValue":{"hexValue":"30","id":5423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3223:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3207:17:7"},{"body":{"id":5455,"nodeType":"Block","src":"3283:159:7","statements":[{"condition":{"expression":{"baseExpression":{"id":5436,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"3301:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5440,"indexExpression":{"baseExpression":{"id":5437,"name":"officerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"3310:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5439,"indexExpression":{"id":5438,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"3322:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3310:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3301:24:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"id":5441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3326:8:7","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5205,"src":"3301:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5454,"nodeType":"IfStatement","src":"3297:135:7","trueBody":{"id":5453,"nodeType":"Block","src":"3336:96:7","statements":[{"expression":{"id":5448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5442,"name":"activeOfficers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"3354:14:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":5444,"indexExpression":{"id":5443,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"3369:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3354:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5445,"name":"officerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"3378:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5447,"indexExpression":{"id":5446,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"3390:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3378:14:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3354:38:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5449,"nodeType":"ExpressionStatement","src":"3354:38:7"},{"expression":{"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3410:7:7","subExpression":{"id":5450,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5422,"src":"3410:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5452,"nodeType":"ExpressionStatement","src":"3410:7:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5429,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"3254:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5430,"name":"officerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5214,"src":"3258:11:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3270:6:7","memberName":"length","nodeType":"MemberAccess","src":"3258:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3254:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5456,"initializationExpression":{"assignments":[5426],"declarations":[{"constant":false,"id":5426,"mutability":"mutable","name":"i","nameLocation":"3247:1:7","nodeType":"VariableDeclaration","scope":5456,"src":"3239:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3239:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5428,"initialValue":{"hexValue":"30","id":5427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3251:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3239:13:7"},"loopExpression":{"expression":{"id":5434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3278:3:7","subExpression":{"id":5433,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"3278:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5435,"nodeType":"ExpressionStatement","src":"3278:3:7"},"nodeType":"ForStatement","src":"3234:208:7"},{"expression":{"id":5457,"name":"activeOfficers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5414,"src":"3458:14:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":5381,"id":5458,"nodeType":"Return","src":"3451:21:7"}]},"functionSelector":"c10fd6dd","id":5460,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveOfficers","nameLocation":"2885:17:7","nodeType":"FunctionDefinition","parameters":{"id":5377,"nodeType":"ParameterList","parameters":[],"src":"2902:2:7"},"returnParameters":{"id":5381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5460,"src":"2926:16:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":5378,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":5379,"nodeType":"ArrayTypeName","src":"2926:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2925:18:7"},"scope":5474,"src":"2876:603:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5472,"nodeType":"Block","src":"3594:49:7","statements":[{"expression":{"baseExpression":{"id":5468,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"3611:8:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$5206_storage_$","typeString":"mapping(address => struct AdminManagement.Officer storage ref)"}},"id":5470,"indexExpression":{"id":5469,"name":"_officerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"3620:15:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3611:25:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage","typeString":"struct AdminManagement.Officer storage ref"}},"functionReturnParameters":5467,"id":5471,"nodeType":"Return","src":"3604:32:7"}]},"functionSelector":"1e572c0f","id":5473,"implemented":true,"kind":"function","modifiers":[],"name":"getOfficer","nameLocation":"3521:10:7","nodeType":"FunctionDefinition","parameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5462,"mutability":"mutable","name":"_officerAddress","nameLocation":"3540:15:7","nodeType":"VariableDeclaration","scope":5473,"src":"3532:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5461,"name":"address","nodeType":"ElementaryTypeName","src":"3532:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3531:25:7"},"returnParameters":{"id":5467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5473,"src":"3578:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_memory_ptr","typeString":"struct AdminManagement.Officer"},"typeName":{"id":5465,"nodeType":"UserDefinedTypeName","pathNode":{"id":5464,"name":"Officer","nameLocations":["3578:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5206,"src":"3578:7:7"},"referencedDeclaration":5206,"src":"3578:7:7","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$5206_storage_ptr","typeString":"struct AdminManagement.Officer"}},"visibility":"internal"}],"src":"3577:16:7"},"scope":5474,"src":"3512:131:7","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":5475,"src":"163:3482:7","usedErrors":[13,18],"usedEvents":[24,5176,5180,5188]}],"src":"32:3614:7"},"id":7},"src/contracts/BidManagement.sol":{"ast":{"absolutePath":"src/contracts/BidManagement.sol","exportedSymbols":{"BidManagement":[6102],"Context":[177],"Math":[3252],"Ownable":[147],"SafeCast":[5017],"SignedMath":[5161],"Strings":[1631]},"id":6103,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5476,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:8"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6103,"sourceUnit":148,"src":"57:52:8","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":5478,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6103,"sourceUnit":1632,"src":"110:51:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5479,"name":"Ownable","nameLocations":["189:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"189:7:8"},"id":5480,"nodeType":"InheritanceSpecifier","src":"189:7:8"}],"canonicalName":"BidManagement","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6102,"linearizedBaseContracts":[6102,147,177],"name":"BidManagement","nameLocation":"172:13:8","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5483,"libraryName":{"id":5481,"name":"Strings","nameLocations":["209:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"209:7:8"},"nodeType":"UsingForDirective","src":"203:26:8","typeName":{"id":5482,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"anonymous":false,"eventSelector":"d7ed299e5e685e22477fc439df8043df54d62f2b07ada5aeda8003a8b376014e","id":5491,"name":"BidFeedbackGiven","nameLocation":"255:16:8","nodeType":"EventDefinition","parameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5485,"indexed":true,"mutability":"mutable","name":"tenderId","nameLocation":"288:8:8","nodeType":"VariableDeclaration","scope":5491,"src":"272:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5484,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5487,"indexed":true,"mutability":"mutable","name":"bidIndex","nameLocation":"314:8:8","nodeType":"VariableDeclaration","scope":5491,"src":"298:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5486,"name":"uint256","nodeType":"ElementaryTypeName","src":"298:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5489,"indexed":false,"mutability":"mutable","name":"feedback","nameLocation":"331:8:8","nodeType":"VariableDeclaration","scope":5491,"src":"324:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5488,"name":"string","nodeType":"ElementaryTypeName","src":"324:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"271:69:8"},"src":"249:92:8"},{"anonymous":false,"eventSelector":"1131d9b33dacd5043302ebe5126de7550c4ca8f01092e4a8f198e52e6bbdfcce","id":5499,"name":"BidModificationRequested","nameLocation":"352:24:8","nodeType":"EventDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5493,"indexed":true,"mutability":"mutable","name":"tenderId","nameLocation":"393:8:8","nodeType":"VariableDeclaration","scope":5499,"src":"377:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5492,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5495,"indexed":true,"mutability":"mutable","name":"bidIndex","nameLocation":"419:8:8","nodeType":"VariableDeclaration","scope":5499,"src":"403:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5494,"name":"uint256","nodeType":"ElementaryTypeName","src":"403:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5497,"indexed":false,"mutability":"mutable","name":"modifications","nameLocation":"436:13:8","nodeType":"VariableDeclaration","scope":5499,"src":"429:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5496,"name":"string","nodeType":"ElementaryTypeName","src":"429:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"376:74:8"},"src":"346:105:8"},{"anonymous":false,"eventSelector":"ff8032bdb7048063741d028837c6b1dc7ba91d1915100882519364c030a04418","id":5509,"name":"BidModified","nameLocation":"462:11:8","nodeType":"EventDefinition","parameters":{"id":5508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5501,"indexed":true,"mutability":"mutable","name":"tenderId","nameLocation":"490:8:8","nodeType":"VariableDeclaration","scope":5509,"src":"474:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5500,"name":"uint256","nodeType":"ElementaryTypeName","src":"474:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5503,"indexed":true,"mutability":"mutable","name":"bidIndex","nameLocation":"516:8:8","nodeType":"VariableDeclaration","scope":5509,"src":"500:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5502,"name":"uint256","nodeType":"ElementaryTypeName","src":"500:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5505,"indexed":false,"mutability":"mutable","name":"newAmount","nameLocation":"534:9:8","nodeType":"VariableDeclaration","scope":5509,"src":"526:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5507,"indexed":false,"mutability":"mutable","name":"newDescription","nameLocation":"552:14:8","nodeType":"VariableDeclaration","scope":5509,"src":"545:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5506,"name":"string","nodeType":"ElementaryTypeName","src":"545:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"473:94:8"},"src":"456:112:8"},{"anonymous":false,"eventSelector":"7a9bc058a0636c74f09fba8b41a836b2d26f59e8b63350b3b633df61def6f1cf","id":5517,"name":"BidRejectedWithReason","nameLocation":"579:21:8","nodeType":"EventDefinition","parameters":{"id":5516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5511,"indexed":true,"mutability":"mutable","name":"tenderId","nameLocation":"617:8:8","nodeType":"VariableDeclaration","scope":5517,"src":"601:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5510,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5513,"indexed":true,"mutability":"mutable","name":"bidIndex","nameLocation":"643:8:8","nodeType":"VariableDeclaration","scope":5517,"src":"627:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5512,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5515,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"660:6:8","nodeType":"VariableDeclaration","scope":5517,"src":"653:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5514,"name":"string","nodeType":"ElementaryTypeName","src":"653:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"600:67:8"},"src":"573:95:8"},{"anonymous":false,"eventSelector":"b5cc2e6a75ba593196ae1600d90399014d2790179ceae0b5d9a2303144028bad","id":5527,"name":"BidSubmitted","nameLocation":"679:12:8","nodeType":"EventDefinition","parameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5519,"indexed":true,"mutability":"mutable","name":"tenderId","nameLocation":"708:8:8","nodeType":"VariableDeclaration","scope":5527,"src":"692:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5518,"name":"uint256","nodeType":"ElementaryTypeName","src":"692:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5521,"indexed":true,"mutability":"mutable","name":"bidIndex","nameLocation":"734:8:8","nodeType":"VariableDeclaration","scope":5527,"src":"718:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5520,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5523,"indexed":false,"mutability":"mutable","name":"bidder","nameLocation":"752:6:8","nodeType":"VariableDeclaration","scope":5527,"src":"744:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5522,"name":"address","nodeType":"ElementaryTypeName","src":"744:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5525,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"768:6:8","nodeType":"VariableDeclaration","scope":5527,"src":"760:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5524,"name":"uint256","nodeType":"ElementaryTypeName","src":"760:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"691:84:8"},"src":"673:103:8"},{"body":{"id":5535,"nodeType":"Block","src":"857:2:8","statements":[]},"id":5536,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":5532,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5529,"src":"843:12:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5533,"kind":"baseConstructorSpecifier","modifierName":{"id":5531,"name":"Ownable","nameLocations":["835:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"835:7:8"},"nodeType":"ModifierInvocation","src":"835:21:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5529,"mutability":"mutable","name":"initialOwner","nameLocation":"821:12:8","nodeType":"VariableDeclaration","scope":5536,"src":"813:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5528,"name":"address","nodeType":"ElementaryTypeName","src":"813:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"812:22:8"},"returnParameters":{"id":5534,"nodeType":"ParameterList","parameters":[],"src":"857:0:8"},"scope":6102,"src":"801:58:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"BidManagement.BidStatus","id":5542,"members":[{"id":5537,"name":"PENDING","nameLocation":"913:7:8","nodeType":"EnumValue","src":"913:7:8"},{"id":5538,"name":"APPROVED","nameLocation":"930:8:8","nodeType":"EnumValue","src":"930:8:8"},{"id":5539,"name":"REJECTED","nameLocation":"948:8:8","nodeType":"EnumValue","src":"948:8:8"},{"id":5540,"name":"MODIFIED","nameLocation":"966:8:8","nodeType":"EnumValue","src":"966:8:8"},{"id":5541,"name":"MODIFICATION_REQUESTED","nameLocation":"984:22:8","nodeType":"EnumValue","src":"984:22:8"}],"name":"BidStatus","nameLocation":"893:9:8","nodeType":"EnumDefinition","src":"888:124:8"},{"canonicalName":"BidManagement.Bid","id":5562,"members":[{"constant":false,"id":5544,"mutability":"mutable","name":"tenderId","nameLocation":"1065:8:8","nodeType":"VariableDeclaration","scope":5562,"src":"1057:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5546,"mutability":"mutable","name":"bidderAddress","nameLocation":"1091:13:8","nodeType":"VariableDeclaration","scope":5562,"src":"1083:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5545,"name":"address","nodeType":"ElementaryTypeName","src":"1083:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5548,"mutability":"mutable","name":"amount","nameLocation":"1122:6:8","nodeType":"VariableDeclaration","scope":5562,"src":"1114:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5550,"mutability":"mutable","name":"description","nameLocation":"1145:11:8","nodeType":"VariableDeclaration","scope":5562,"src":"1138:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5549,"name":"string","nodeType":"ElementaryTypeName","src":"1138:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5552,"mutability":"mutable","name":"submittedAt","nameLocation":"1174:11:8","nodeType":"VariableDeclaration","scope":5562,"src":"1166:19:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1166:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5555,"mutability":"mutable","name":"status","nameLocation":"1205:6:8","nodeType":"VariableDeclaration","scope":5562,"src":"1195:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"},"typeName":{"id":5554,"nodeType":"UserDefinedTypeName","pathNode":{"id":5553,"name":"BidStatus","nameLocations":["1195:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":5542,"src":"1195:9:8"},"referencedDeclaration":5542,"src":"1195:9:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"visibility":"internal"},{"constant":false,"id":5557,"mutability":"mutable","name":"feedback","nameLocation":"1228:8:8","nodeType":"VariableDeclaration","scope":5562,"src":"1221:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5556,"name":"string","nodeType":"ElementaryTypeName","src":"1221:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5559,"mutability":"mutable","name":"modificationRequest","nameLocation":"1253:19:8","nodeType":"VariableDeclaration","scope":5562,"src":"1246:26:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5558,"name":"string","nodeType":"ElementaryTypeName","src":"1246:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5561,"mutability":"mutable","name":"rejectionReason","nameLocation":"1289:15:8","nodeType":"VariableDeclaration","scope":5562,"src":"1282:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":5560,"name":"string","nodeType":"ElementaryTypeName","src":"1282:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Bid","nameLocation":"1043:3:8","nodeType":"StructDefinition","scope":6102,"src":"1036:275:8","visibility":"public"},{"constant":false,"functionSelector":"7b3c4baa","id":5569,"mutability":"mutable","name":"bids","nameLocation":"1391:4:8","nodeType":"VariableDeclaration","scope":6102,"src":"1340:55:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid))"},"typeName":{"id":5568,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1340:43:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5567,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5564,"name":"uint256","nodeType":"ElementaryTypeName","src":"1367:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1359:23:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5566,"nodeType":"UserDefinedTypeName","pathNode":{"id":5565,"name":"Bid","nameLocations":["1378:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"1378:3:8"},"referencedDeclaration":5562,"src":"1378:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}}}},"visibility":"public"},{"constant":false,"functionSelector":"7c8ecd2f","id":5573,"mutability":"mutable","name":"bidCounts","nameLocation":"1436:9:8","nodeType":"VariableDeclaration","scope":6102,"src":"1401:44:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":5572,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5570,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1401:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5571,"name":"uint256","nodeType":"ElementaryTypeName","src":"1420:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"canonicalName":"BidManagement.Tender","id":5580,"members":[{"constant":false,"id":5575,"mutability":"mutable","name":"officerAddress","nameLocation":"1510:14:8","nodeType":"VariableDeclaration","scope":5580,"src":"1502:22:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5574,"name":"address","nodeType":"ElementaryTypeName","src":"1502:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5577,"mutability":"mutable","name":"isActive","nameLocation":"1539:8:8","nodeType":"VariableDeclaration","scope":5580,"src":"1534:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5576,"name":"bool","nodeType":"ElementaryTypeName","src":"1534:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5579,"mutability":"mutable","name":"deadline","nameLocation":"1565:8:8","nodeType":"VariableDeclaration","scope":5580,"src":"1557:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5578,"name":"uint256","nodeType":"ElementaryTypeName","src":"1557:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Tender","nameLocation":"1485:6:8","nodeType":"StructDefinition","scope":6102,"src":"1478:102:8","visibility":"public"},{"constant":false,"functionSelector":"465e1def","id":5585,"mutability":"mutable","name":"tenders","nameLocation":"1646:7:8","nodeType":"VariableDeclaration","scope":6102,"src":"1612:41:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$5580_storage_$","typeString":"mapping(uint256 => struct BidManagement.Tender)"},"typeName":{"id":5584,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":5581,"name":"uint256","nodeType":"ElementaryTypeName","src":"1620:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1612:26:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$5580_storage_$","typeString":"mapping(uint256 => struct BidManagement.Tender)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5583,"nodeType":"UserDefinedTypeName","pathNode":{"id":5582,"name":"Tender","nameLocations":["1631:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":5580,"src":"1631:6:8"},"referencedDeclaration":5580,"src":"1631:6:8","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$5580_storage_ptr","typeString":"struct BidManagement.Tender"}}},"visibility":"public"},{"body":{"id":5601,"nodeType":"Block","src":"1759:116:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5590,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"1777:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$5580_storage_$","typeString":"mapping(uint256 => struct BidManagement.Tender storage ref)"}},"id":5592,"indexExpression":{"id":5591,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5587,"src":"1785:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1777:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$5580_storage","typeString":"struct BidManagement.Tender storage ref"}},"id":5593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1796:14:8","memberName":"officerAddress","nodeType":"MemberAccess","referencedDeclaration":5575,"src":"1777:33:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5594,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1814:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1818:6:8","memberName":"sender","nodeType":"MemberAccess","src":"1814:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1777:47:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6572206973206e6f742074656e646572206f666669636572","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1826:30:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_25e913bc0f4ac466570824759adb4b1dd70f5c1861e28c24d6691a1253eca7b9","typeString":"literal_string \"Caller is not tender officer\""},"value":"Caller is not tender officer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25e913bc0f4ac466570824759adb4b1dd70f5c1861e28c24d6691a1253eca7b9","typeString":"literal_string \"Caller is not tender officer\""}],"id":5589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1769:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1769:88:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5599,"nodeType":"ExpressionStatement","src":"1769:88:8"},{"id":5600,"nodeType":"PlaceholderStatement","src":"1867:1:8"}]},"id":5602,"name":"onlyTenderOfficer","nameLocation":"1722:17:8","nodeType":"ModifierDefinition","parameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5587,"mutability":"mutable","name":"_tenderId","nameLocation":"1748:9:8","nodeType":"VariableDeclaration","scope":5602,"src":"1740:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5586,"name":"uint256","nodeType":"ElementaryTypeName","src":"1740:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1739:19:8"},"src":"1713:162:8","virtual":false,"visibility":"internal"},{"body":{"id":5618,"nodeType":"Block","src":"1977:91:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5609,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"1995:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":5610,"name":"bidCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"2007:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5612,"indexExpression":{"id":5611,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"2017:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2007:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1995:32:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420646f6573206e6f74206578697374","id":5614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2029:20:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b008252175809adc965a2027b1c1e66621bf2817fed6a22f353c1a7d116c78c","typeString":"literal_string \"Bid does not exist\""},"value":"Bid does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b008252175809adc965a2027b1c1e66621bf2817fed6a22f353c1a7d116c78c","typeString":"literal_string \"Bid does not exist\""}],"id":5608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1987:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1987:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5616,"nodeType":"ExpressionStatement","src":"1987:63:8"},{"id":5617,"nodeType":"PlaceholderStatement","src":"2060:1:8"}]},"id":5619,"name":"bidExists","nameLocation":"1929:9:8","nodeType":"ModifierDefinition","parameters":{"id":5607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5604,"mutability":"mutable","name":"_tenderId","nameLocation":"1947:9:8","nodeType":"VariableDeclaration","scope":5619,"src":"1939:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"1939:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5606,"mutability":"mutable","name":"_bidIndex","nameLocation":"1966:9:8","nodeType":"VariableDeclaration","scope":5619,"src":"1958:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1958:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1938:38:8"},"src":"1920:148:8","virtual":false,"visibility":"internal"},{"body":{"id":5663,"nodeType":"Block","src":"2290:238:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":5636,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2308:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5638,"indexExpression":{"id":5637,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"2313:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2308:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5640,"indexExpression":{"id":5639,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2324:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2308:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2335:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"2308:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5642,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"2345:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2355:7:8","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":5537,"src":"2345:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"2308:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426964206e6f7420696e2070656e64696e67207374617465","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2364:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4769538a25ab61c0fa3522b7af2447c24170a3b563b268d59f1165923fff23d","typeString":"literal_string \"Bid not in pending state\""},"value":"Bid not in pending state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4769538a25ab61c0fa3522b7af2447c24170a3b563b268d59f1165923fff23d","typeString":"literal_string \"Bid not in pending state\""}],"id":5635,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2300:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:91:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5647,"nodeType":"ExpressionStatement","src":"2300:91:8"},{"expression":{"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5648,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2410:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5651,"indexExpression":{"id":5649,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"2415:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2410:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5652,"indexExpression":{"id":5650,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2426:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2410:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5653,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2437:8:8","memberName":"feedback","nodeType":"MemberAccess","referencedDeclaration":5557,"src":"2410:35:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5654,"name":"_feedback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"2448:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2410:47:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5656,"nodeType":"ExpressionStatement","src":"2410:47:8"},{"eventCall":{"arguments":[{"id":5658,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"2489:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5659,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2500:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5660,"name":"_feedback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"2511:9:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5657,"name":"BidFeedbackGiven","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5491,"src":"2472:16:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2472:49:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5662,"nodeType":"EmitStatement","src":"2467:54:8"}]},"functionSelector":"928c1784","id":5664,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5628,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"2247:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5629,"kind":"modifierInvocation","modifierName":{"id":5627,"name":"onlyTenderOfficer","nameLocations":["2229:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":5602,"src":"2229:17:8"},"nodeType":"ModifierInvocation","src":"2229:28:8"},{"arguments":[{"id":5631,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5621,"src":"2268:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5632,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5623,"src":"2279:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5633,"kind":"modifierInvocation","modifierName":{"id":5630,"name":"bidExists","nameLocations":["2258:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":5619,"src":"2258:9:8"},"nodeType":"ModifierInvocation","src":"2258:31:8"}],"name":"giveBidFeedback","nameLocation":"2113:15:8","nodeType":"FunctionDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5621,"mutability":"mutable","name":"_tenderId","nameLocation":"2146:9:8","nodeType":"VariableDeclaration","scope":5664,"src":"2138:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5620,"name":"uint256","nodeType":"ElementaryTypeName","src":"2138:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5623,"mutability":"mutable","name":"_bidIndex","nameLocation":"2173:9:8","nodeType":"VariableDeclaration","scope":5664,"src":"2165:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5625,"mutability":"mutable","name":"_feedback","nameLocation":"2206:9:8","nodeType":"VariableDeclaration","scope":5664,"src":"2192:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5624,"name":"string","nodeType":"ElementaryTypeName","src":"2192:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2128:93:8"},"returnParameters":{"id":5634,"nodeType":"ParameterList","parameters":[],"src":"2290:0:8"},"scope":6102,"src":"2104:424:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5718,"nodeType":"Block","src":"2764:354:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":5681,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2782:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5683,"indexExpression":{"id":5682,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"2787:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2782:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5685,"indexExpression":{"id":5684,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"2798:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2782:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2809:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"2782:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5687,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"2819:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2829:7:8","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":5537,"src":"2819:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"2782:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426964206e6f7420696e2070656e64696e67207374617465","id":5690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2838:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_e4769538a25ab61c0fa3522b7af2447c24170a3b563b268d59f1165923fff23d","typeString":"literal_string \"Bid not in pending state\""},"value":"Bid not in pending state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e4769538a25ab61c0fa3522b7af2447c24170a3b563b268d59f1165923fff23d","typeString":"literal_string \"Bid not in pending state\""}],"id":5680,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2774:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2774:91:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5692,"nodeType":"ExpressionStatement","src":"2774:91:8"},{"expression":{"id":5701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5693,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2884:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5696,"indexExpression":{"id":5694,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"2889:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2884:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5697,"indexExpression":{"id":5695,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"2900:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2884:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2911:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"2884:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5699,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"2920:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5700,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2930:22:8","memberName":"MODIFICATION_REQUESTED","nodeType":"MemberAccess","referencedDeclaration":5541,"src":"2920:32:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"2884:68:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"id":5702,"nodeType":"ExpressionStatement","src":"2884:68:8"},{"expression":{"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5703,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"2962:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5706,"indexExpression":{"id":5704,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"2967:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2962:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5707,"indexExpression":{"id":5705,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"2978:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2962:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2989:19:8","memberName":"modificationRequest","nodeType":"MemberAccess","referencedDeclaration":5559,"src":"2962:46:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5709,"name":"_modifications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"3011:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2962:63:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5711,"nodeType":"ExpressionStatement","src":"2962:63:8"},{"eventCall":{"arguments":[{"id":5713,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"3074:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5714,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"3085:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5715,"name":"_modifications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5670,"src":"3096:14:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5712,"name":"BidModificationRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"3049:24:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3049:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5717,"nodeType":"EmitStatement","src":"3044:67:8"}]},"functionSelector":"5b8c665c","id":5719,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5673,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"2721:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5674,"kind":"modifierInvocation","modifierName":{"id":5672,"name":"onlyTenderOfficer","nameLocations":["2703:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":5602,"src":"2703:17:8"},"nodeType":"ModifierInvocation","src":"2703:28:8"},{"arguments":[{"id":5676,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5666,"src":"2742:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5677,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"2753:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5678,"kind":"modifierInvocation","modifierName":{"id":5675,"name":"bidExists","nameLocations":["2732:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":5619,"src":"2732:9:8"},"nodeType":"ModifierInvocation","src":"2732:31:8"}],"name":"requestBidModification","nameLocation":"2575:22:8","nodeType":"FunctionDefinition","parameters":{"id":5671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5666,"mutability":"mutable","name":"_tenderId","nameLocation":"2615:9:8","nodeType":"VariableDeclaration","scope":5719,"src":"2607:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2607:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5668,"mutability":"mutable","name":"_bidIndex","nameLocation":"2642:9:8","nodeType":"VariableDeclaration","scope":5719,"src":"2634:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2634:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5670,"mutability":"mutable","name":"_modifications","nameLocation":"2675:14:8","nodeType":"VariableDeclaration","scope":5719,"src":"2661:28:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5669,"name":"string","nodeType":"ElementaryTypeName","src":"2661:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2597:98:8"},"returnParameters":{"id":5679,"nodeType":"ParameterList","parameters":[],"src":"2764:0:8"},"scope":6102,"src":"2566:552:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5795,"nodeType":"Block","src":"3339:529:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":5735,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"3357:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5737,"indexExpression":{"id":5736,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"3362:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3357:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5739,"indexExpression":{"id":5738,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"3373:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3357:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3384:13:8","memberName":"bidderAddress","nodeType":"MemberAccess","referencedDeclaration":5546,"src":"3357:40:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3401:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3405:6:8","memberName":"sender","nodeType":"MemberAccess","src":"3401:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3357:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206d6f64696679207468697320626964","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3413:35:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad21143b94b344964bd6a684f490a112558f4755068836a14e389890fc11b48c","typeString":"literal_string \"Not authorized to modify this bid\""},"value":"Not authorized to modify this bid"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad21143b94b344964bd6a684f490a112558f4755068836a14e389890fc11b48c","typeString":"literal_string \"Not authorized to modify this bid\""}],"id":5734,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3349:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3349:100:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5746,"nodeType":"ExpressionStatement","src":"3349:100:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":5748,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"3467:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5750,"indexExpression":{"id":5749,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"3472:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3467:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5752,"indexExpression":{"id":5751,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"3483:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3467:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3494:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"3467:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5754,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"3504:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3514:22:8","memberName":"MODIFICATION_REQUESTED","nodeType":"MemberAccess","referencedDeclaration":5541,"src":"3504:32:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"3467:69:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426964206e6f7420696e206d6f64696669636174696f6e20726571756573746564207374617465","id":5757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3538:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0af9021b913ab139128d7912daa76e8215ae017d47f5d45ad9eb430bd2693131","typeString":"literal_string \"Bid not in modification requested state\""},"value":"Bid not in modification requested state"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0af9021b913ab139128d7912daa76e8215ae017d47f5d45ad9eb430bd2693131","typeString":"literal_string \"Bid not in modification requested state\""}],"id":5747,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3459:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3459:121:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5759,"nodeType":"ExpressionStatement","src":"3459:121:8"},{"expression":{"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5760,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"3599:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5763,"indexExpression":{"id":5761,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"3604:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3599:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5764,"indexExpression":{"id":5762,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"3615:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3599:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5765,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3626:6:8","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":5548,"src":"3599:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5766,"name":"_newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"3635:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3599:46:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5768,"nodeType":"ExpressionStatement","src":"3599:46:8"},{"expression":{"id":5776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5769,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"3655:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5772,"indexExpression":{"id":5770,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"3660:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3655:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5773,"indexExpression":{"id":5771,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"3671:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3655:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3682:11:8","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":5550,"src":"3655:38:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5775,"name":"_newDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"3696:15:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3655:56:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5777,"nodeType":"ExpressionStatement","src":"3655:56:8"},{"expression":{"id":5786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5778,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"3721:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5781,"indexExpression":{"id":5779,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"3726:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3721:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5782,"indexExpression":{"id":5780,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"3737:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3721:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3748:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"3721:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5784,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"3757:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:8:8","memberName":"MODIFIED","nodeType":"MemberAccess","referencedDeclaration":5540,"src":"3757:18:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"3721:54:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"id":5787,"nodeType":"ExpressionStatement","src":"3721:54:8"},{"eventCall":{"arguments":[{"id":5789,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"3811:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5790,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"3822:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5791,"name":"_newAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"3833:10:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5792,"name":"_newDescription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5727,"src":"3845:15:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5788,"name":"BidModified","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"3799:11:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,uint256,string memory)"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:62:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5794,"nodeType":"EmitStatement","src":"3794:67:8"}]},"functionSelector":"3fc898d2","id":5796,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5730,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5721,"src":"3317:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5731,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5723,"src":"3328:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5732,"kind":"modifierInvocation","modifierName":{"id":5729,"name":"bidExists","nameLocations":["3307:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":5619,"src":"3307:9:8"},"nodeType":"ModifierInvocation","src":"3307:31:8"}],"name":"modifyBid","nameLocation":"3163:9:8","nodeType":"FunctionDefinition","parameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5721,"mutability":"mutable","name":"_tenderId","nameLocation":"3190:9:8","nodeType":"VariableDeclaration","scope":5796,"src":"3182:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5720,"name":"uint256","nodeType":"ElementaryTypeName","src":"3182:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5723,"mutability":"mutable","name":"_bidIndex","nameLocation":"3217:9:8","nodeType":"VariableDeclaration","scope":5796,"src":"3209:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5722,"name":"uint256","nodeType":"ElementaryTypeName","src":"3209:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5725,"mutability":"mutable","name":"_newAmount","nameLocation":"3244:10:8","nodeType":"VariableDeclaration","scope":5796,"src":"3236:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5724,"name":"uint256","nodeType":"ElementaryTypeName","src":"3236:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5727,"mutability":"mutable","name":"_newDescription","nameLocation":"3278:15:8","nodeType":"VariableDeclaration","scope":5796,"src":"3264:29:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5726,"name":"string","nodeType":"ElementaryTypeName","src":"3264:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3172:127:8"},"returnParameters":{"id":5733,"nodeType":"ParameterList","parameters":[],"src":"3339:0:8"},"scope":6102,"src":"3154:714:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5860,"nodeType":"Block","src":"4082:375:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":5813,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"4100:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5815,"indexExpression":{"id":5814,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4105:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4100:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5817,"indexExpression":{"id":5816,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"4116:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4100:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5818,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4127:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"4100:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5819,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"4137:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4147:7:8","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":5537,"src":"4137:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"4100:54:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"},"id":5830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":5822,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"4158:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5824,"indexExpression":{"id":5823,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4163:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4158:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5826,"indexExpression":{"id":5825,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"4174:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4158:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4185:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"4158:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":5828,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"4195:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4205:8:8","memberName":"MODIFIED","nodeType":"MemberAccess","referencedDeclaration":5540,"src":"4195:18:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"4158:55:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4100:113:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420616c72656164792070726f636573736564","id":5832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4215:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b9433fc00f84be20dc1ce24be95002eee8787860f118ec224723401bd4779350","typeString":"literal_string \"Bid already processed\""},"value":"Bid already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b9433fc00f84be20dc1ce24be95002eee8787860f118ec224723401bd4779350","typeString":"literal_string \"Bid already processed\""}],"id":5812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4092:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4092:147:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5834,"nodeType":"ExpressionStatement","src":"4092:147:8"},{"expression":{"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5835,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"4258:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5838,"indexExpression":{"id":5836,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4263:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4258:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5839,"indexExpression":{"id":5837,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"4274:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4258:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4285:6:8","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":5555,"src":"4258:33:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":5841,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"4294:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4304:8:8","memberName":"REJECTED","nodeType":"MemberAccess","referencedDeclaration":5539,"src":"4294:18:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"src":"4258:54:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},"id":5844,"nodeType":"ExpressionStatement","src":"4258:54:8"},{"expression":{"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":5845,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"4322:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5848,"indexExpression":{"id":5846,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4327:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4322:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5849,"indexExpression":{"id":5847,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"4338:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4322:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4349:15:8","memberName":"rejectionReason","nodeType":"MemberAccess","referencedDeclaration":5561,"src":"4322:42:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5851,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"4367:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4322:52:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":5853,"nodeType":"ExpressionStatement","src":"4322:52:8"},{"eventCall":{"arguments":[{"id":5855,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4420:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5856,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"4431:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5857,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5802,"src":"4442:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5854,"name":"BidRejectedWithReason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"4398:21:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":5858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4398:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5859,"nodeType":"EmitStatement","src":"4393:57:8"}]},"functionSelector":"9f07d462","id":5861,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":5805,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4039:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5806,"kind":"modifierInvocation","modifierName":{"id":5804,"name":"onlyTenderOfficer","nameLocations":["4021:17:8"],"nodeType":"IdentifierPath","referencedDeclaration":5602,"src":"4021:17:8"},"nodeType":"ModifierInvocation","src":"4021:28:8"},{"arguments":[{"id":5808,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5798,"src":"4060:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5809,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5800,"src":"4071:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5810,"kind":"modifierInvocation","modifierName":{"id":5807,"name":"bidExists","nameLocations":["4050:9:8"],"nodeType":"IdentifierPath","referencedDeclaration":5619,"src":"4050:9:8"},"nodeType":"ModifierInvocation","src":"4050:31:8"}],"name":"rejectBid","nameLocation":"3913:9:8","nodeType":"FunctionDefinition","parameters":{"id":5803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5798,"mutability":"mutable","name":"_tenderId","nameLocation":"3940:9:8","nodeType":"VariableDeclaration","scope":5861,"src":"3932:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5797,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5800,"mutability":"mutable","name":"_bidIndex","nameLocation":"3967:9:8","nodeType":"VariableDeclaration","scope":5861,"src":"3959:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5799,"name":"uint256","nodeType":"ElementaryTypeName","src":"3959:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5802,"mutability":"mutable","name":"_reason","nameLocation":"4000:7:8","nodeType":"VariableDeclaration","scope":5861,"src":"3986:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5801,"name":"string","nodeType":"ElementaryTypeName","src":"3986:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3922:91:8"},"returnParameters":{"id":5811,"nodeType":"ParameterList","parameters":[],"src":"4082:0:8"},"scope":6102,"src":"3904:553:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5931,"nodeType":"Block","src":"4605:602:8","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":5871,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"4623:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$5580_storage_$","typeString":"mapping(uint256 => struct BidManagement.Tender storage ref)"}},"id":5873,"indexExpression":{"id":5872,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"4631:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4623:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$5580_storage","typeString":"struct BidManagement.Tender storage ref"}},"id":5874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4642:8:8","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":5577,"src":"4623:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e646572206973206e6f7420616374697665","id":5875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4652:22:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a7eb68471882d2f4c89682070c1733976b9adde8e0cb4108ee5929db1861dc2","typeString":"literal_string \"Tender is not active\""},"value":"Tender is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a7eb68471882d2f4c89682070c1733976b9adde8e0cb4108ee5929db1861dc2","typeString":"literal_string \"Tender is not active\""}],"id":5870,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4615:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4615:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5877,"nodeType":"ExpressionStatement","src":"4615:60:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5879,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4693:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4699:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"4693:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":5881,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5585,"src":"4712:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$5580_storage_$","typeString":"mapping(uint256 => struct BidManagement.Tender storage ref)"}},"id":5883,"indexExpression":{"id":5882,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"4720:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4712:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$5580_storage","typeString":"struct BidManagement.Tender storage ref"}},"id":5884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4731:8:8","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":5579,"src":"4712:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4693:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e64657220646561646c696e6520706173736564","id":5886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4741:24:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_988f788847b836df8732e0a8661a5f83e695ef8ac34eee81c8247677ec8cf84a","typeString":"literal_string \"Tender deadline passed\""},"value":"Tender deadline passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_988f788847b836df8732e0a8661a5f83e695ef8ac34eee81c8247677ec8cf84a","typeString":"literal_string \"Tender deadline passed\""}],"id":5878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4685:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5888,"nodeType":"ExpressionStatement","src":"4685:81:8"},{"expression":{"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4785:22:8","subExpression":{"baseExpression":{"id":5889,"name":"bidCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"4785:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5891,"indexExpression":{"id":5890,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"4795:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4785:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5893,"nodeType":"ExpressionStatement","src":"4785:22:8"},{"assignments":[5895],"declarations":[{"constant":false,"id":5895,"mutability":"mutable","name":"bidIndex","nameLocation":"4825:8:8","nodeType":"VariableDeclaration","scope":5931,"src":"4817:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5894,"name":"uint256","nodeType":"ElementaryTypeName","src":"4817:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5901,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":5896,"name":"bidCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"4836:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5898,"indexExpression":{"id":5897,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"4846:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4836:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4859:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4836:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4817:43:8"},{"expression":{"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":5902,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"4879:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5905,"indexExpression":{"id":5903,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"4884:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4879:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5906,"indexExpression":{"id":5904,"name":"bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"4895:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4879:25:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5908,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"4924:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4947:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:6:8","memberName":"sender","nodeType":"MemberAccess","src":"4947:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5911,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"4971:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5912,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5867,"src":"4992:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":5913,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5018:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5024:9:8","memberName":"timestamp","nodeType":"MemberAccess","src":"5018:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5915,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"5047:9:8","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$5542_$","typeString":"type(enum BidManagement.BidStatus)"}},"id":5916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5057:7:8","memberName":"PENDING","nodeType":"MemberAccess","referencedDeclaration":5537,"src":"5047:17:8","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"}},{"hexValue":"","id":5917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5078:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":5918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5094:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5110:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BidStatus_$5542","typeString":"enum BidManagement.BidStatus"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":5907,"name":"Bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"4907:3:8","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Bid_$5562_storage_ptr_$","typeString":"type(struct BidManagement.Bid storage pointer)"}},"id":5920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4907:215:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_memory_ptr","typeString":"struct BidManagement.Bid memory"}},"src":"4879:243:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":5922,"nodeType":"ExpressionStatement","src":"4879:243:8"},{"eventCall":{"arguments":[{"id":5924,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"5159:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5925,"name":"bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5895,"src":"5170:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5180:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5184:6:8","memberName":"sender","nodeType":"MemberAccess","src":"5180:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5928,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"5192:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5923,"name":"BidSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"5146:12:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,address,uint256)"}},"id":5929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5146:54:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5930,"nodeType":"EmitStatement","src":"5141:59:8"}]},"functionSelector":"14c60bdd","id":5932,"implemented":true,"kind":"function","modifiers":[],"name":"submitBid","nameLocation":"4494:9:8","nodeType":"FunctionDefinition","parameters":{"id":5868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"_tenderId","nameLocation":"4521:9:8","nodeType":"VariableDeclaration","scope":5932,"src":"4513:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5862,"name":"uint256","nodeType":"ElementaryTypeName","src":"4513:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5865,"mutability":"mutable","name":"_amount","nameLocation":"4548:7:8","nodeType":"VariableDeclaration","scope":5932,"src":"4540:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5864,"name":"uint256","nodeType":"ElementaryTypeName","src":"4540:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5867,"mutability":"mutable","name":"_description","nameLocation":"4579:12:8","nodeType":"VariableDeclaration","scope":5932,"src":"4565:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5866,"name":"string","nodeType":"ElementaryTypeName","src":"4565:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4503:94:8"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[],"src":"4605:0:8"},"scope":6102,"src":"4485:722:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5948,"nodeType":"Block","src":"5344:50:8","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":5942,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"5361:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5944,"indexExpression":{"id":5943,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"5366:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5361:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5946,"indexExpression":{"id":5945,"name":"_bidIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"5377:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5361:26:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"functionReturnParameters":5941,"id":5947,"nodeType":"Return","src":"5354:33:8"}]},"functionSelector":"582c7ffd","id":5949,"implemented":true,"kind":"function","modifiers":[],"name":"getBid","nameLocation":"5244:6:8","nodeType":"FunctionDefinition","parameters":{"id":5937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"_tenderId","nameLocation":"5268:9:8","nodeType":"VariableDeclaration","scope":5949,"src":"5260:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5933,"name":"uint256","nodeType":"ElementaryTypeName","src":"5260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5936,"mutability":"mutable","name":"_bidIndex","nameLocation":"5295:9:8","nodeType":"VariableDeclaration","scope":5949,"src":"5287:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5935,"name":"uint256","nodeType":"ElementaryTypeName","src":"5287:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5250:60:8"},"returnParameters":{"id":5941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5949,"src":"5332:10:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_memory_ptr","typeString":"struct BidManagement.Bid"},"typeName":{"id":5939,"nodeType":"UserDefinedTypeName","pathNode":{"id":5938,"name":"Bid","nameLocations":["5332:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"5332:3:8"},"referencedDeclaration":5562,"src":"5332:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}},"visibility":"internal"}],"src":"5331:12:8"},"scope":6102,"src":"5235:159:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5998,"nodeType":"Block","src":"5480:211:8","statements":[{"assignments":[5962],"declarations":[{"constant":false,"id":5962,"mutability":"mutable","name":"allBids","nameLocation":"5503:7:8","nodeType":"VariableDeclaration","scope":5998,"src":"5490:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid[]"},"typeName":{"baseType":{"id":5960,"nodeType":"UserDefinedTypeName","pathNode":{"id":5959,"name":"Bid","nameLocations":["5490:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"5490:3:8"},"referencedDeclaration":5562,"src":"5490:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}},"id":5961,"nodeType":"ArrayTypeName","src":"5490:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_storage_$dyn_storage_ptr","typeString":"struct BidManagement.Bid[]"}},"visibility":"internal"}],"id":5971,"initialValue":{"arguments":[{"baseExpression":{"id":5967,"name":"bidCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"5523:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5969,"indexExpression":{"id":5968,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"5533:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5523:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5513:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct BidManagement.Bid memory[] memory)"},"typeName":{"baseType":{"id":5964,"nodeType":"UserDefinedTypeName","pathNode":{"id":5963,"name":"Bid","nameLocations":["5517:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"5517:3:8"},"referencedDeclaration":5562,"src":"5517:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}},"id":5965,"nodeType":"ArrayTypeName","src":"5517:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_storage_$dyn_storage_ptr","typeString":"struct BidManagement.Bid[]"}}},"id":5970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5513:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5490:54:8"},{"body":{"id":5994,"nodeType":"Block","src":"5605:56:8","statements":[{"expression":{"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5984,"name":"allBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"5619:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid memory[] memory"}},"id":5986,"indexExpression":{"id":5985,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"5627:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5619:10:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_memory_ptr","typeString":"struct BidManagement.Bid memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":5987,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"5632:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":5989,"indexExpression":{"id":5988,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"5637:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5632:15:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":5991,"indexExpression":{"id":5990,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"5648:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5632:18:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"src":"5619:31:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_memory_ptr","typeString":"struct BidManagement.Bid memory"}},"id":5993,"nodeType":"ExpressionStatement","src":"5619:31:8"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5976,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"5574:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"baseExpression":{"id":5977,"name":"bidCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"5578:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":5979,"indexExpression":{"id":5978,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"5588:9:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5578:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5574:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5995,"initializationExpression":{"assignments":[5973],"declarations":[{"constant":false,"id":5973,"mutability":"mutable","name":"i","nameLocation":"5567:1:8","nodeType":"VariableDeclaration","scope":5995,"src":"5559:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5972,"name":"uint256","nodeType":"ElementaryTypeName","src":"5559:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5975,"initialValue":{"hexValue":"30","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5571:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5559:13:8"},"loopExpression":{"expression":{"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5600:3:8","subExpression":{"id":5981,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5973,"src":"5600:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5983,"nodeType":"ExpressionStatement","src":"5600:3:8"},"nodeType":"ForStatement","src":"5554:107:8"},{"expression":{"id":5996,"name":"allBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5962,"src":"5677:7:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid memory[] memory"}},"functionReturnParameters":5957,"id":5997,"nodeType":"Return","src":"5670:14:8"}]},"functionSelector":"267b51b3","id":5999,"implemented":true,"kind":"function","modifiers":[],"name":"getBidsForTender","nameLocation":"5409:16:8","nodeType":"FunctionDefinition","parameters":{"id":5952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5951,"mutability":"mutable","name":"_tenderId","nameLocation":"5434:9:8","nodeType":"VariableDeclaration","scope":5999,"src":"5426:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"5426:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5425:19:8"},"returnParameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5999,"src":"5466:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid[]"},"typeName":{"baseType":{"id":5954,"nodeType":"UserDefinedTypeName","pathNode":{"id":5953,"name":"Bid","nameLocations":["5466:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"5466:3:8"},"referencedDeclaration":5562,"src":"5466:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}},"id":5955,"nodeType":"ArrayTypeName","src":"5466:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_storage_$dyn_storage_ptr","typeString":"struct BidManagement.Bid[]"}},"visibility":"internal"}],"src":"5465:14:8"},"scope":6102,"src":"5400:291:8","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6100,"nodeType":"Block","src":"5771:501:8","statements":[{"assignments":[6009],"declarations":[{"constant":false,"id":6009,"mutability":"mutable","name":"count","nameLocation":"5789:5:8","nodeType":"VariableDeclaration","scope":6100,"src":"5781:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5781:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6011,"initialValue":{"hexValue":"30","id":6010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5797:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5781:17:8"},{"body":{"id":6039,"nodeType":"Block","src":"5852:105:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":6024,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"5870:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":6026,"indexExpression":{"hexValue":"30","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5875:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5870:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":6030,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6027,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"5878:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5880:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5878:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5870:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":6031,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5883:13:8","memberName":"bidderAddress","nodeType":"MemberAccess","referencedDeclaration":5546,"src":"5870:26:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6032,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"5900:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5870:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6038,"nodeType":"IfStatement","src":"5866:81:8","trueBody":{"id":6037,"nodeType":"Block","src":"5907:40:8","statements":[{"expression":{"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5925:7:8","subExpression":{"id":6034,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"5925:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6036,"nodeType":"ExpressionStatement","src":"5925:7:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6016,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"5828:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":6017,"name":"bidCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"5833:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6019,"indexExpression":{"hexValue":"30","id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5843:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5833:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5828:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6040,"initializationExpression":{"assignments":[6013],"declarations":[{"constant":false,"id":6013,"mutability":"mutable","name":"i","nameLocation":"5821:1:8","nodeType":"VariableDeclaration","scope":6040,"src":"5813:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6012,"name":"uint256","nodeType":"ElementaryTypeName","src":"5813:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6015,"initialValue":{"hexValue":"31","id":6014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5825:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"5813:13:8"},"loopExpression":{"expression":{"id":6022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5847:3:8","subExpression":{"id":6021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6013,"src":"5847:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6023,"nodeType":"ExpressionStatement","src":"5847:3:8"},"nodeType":"ForStatement","src":"5808:149:8"},{"assignments":[6045],"declarations":[{"constant":false,"id":6045,"mutability":"mutable","name":"userBids","nameLocation":"5980:8:8","nodeType":"VariableDeclaration","scope":6100,"src":"5967:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid[]"},"typeName":{"baseType":{"id":6043,"nodeType":"UserDefinedTypeName","pathNode":{"id":6042,"name":"Bid","nameLocations":["5967:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"5967:3:8"},"referencedDeclaration":5562,"src":"5967:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}},"id":6044,"nodeType":"ArrayTypeName","src":"5967:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_storage_$dyn_storage_ptr","typeString":"struct BidManagement.Bid[]"}},"visibility":"internal"}],"id":6052,"initialValue":{"arguments":[{"id":6050,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"6001:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5991:9:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct BidManagement.Bid memory[] memory)"},"typeName":{"baseType":{"id":6047,"nodeType":"UserDefinedTypeName","pathNode":{"id":6046,"name":"Bid","nameLocations":["5995:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"5995:3:8"},"referencedDeclaration":5562,"src":"5995:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}},"id":6048,"nodeType":"ArrayTypeName","src":"5995:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_storage_$dyn_storage_ptr","typeString":"struct BidManagement.Bid[]"}}},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5991:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5967:40:8"},{"assignments":[6054],"declarations":[{"constant":false,"id":6054,"mutability":"mutable","name":"index","nameLocation":"6025:5:8","nodeType":"VariableDeclaration","scope":6100,"src":"6017:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6053,"name":"uint256","nodeType":"ElementaryTypeName","src":"6017:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6056,"initialValue":{"hexValue":"30","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6033:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6017:17:8"},{"body":{"id":6096,"nodeType":"Block","src":"6088:153:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"baseExpression":{"id":6069,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"6106:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":6071,"indexExpression":{"hexValue":"30","id":6070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6111:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6106:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":6075,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"6114:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6116:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6114:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6106:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"id":6076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6119:13:8","memberName":"bidderAddress","nodeType":"MemberAccess","referencedDeclaration":5546,"src":"6106:26:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6077,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6001,"src":"6136:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6106:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6095,"nodeType":"IfStatement","src":"6102:129:8","trueBody":{"id":6094,"nodeType":"Block","src":"6143:88:8","statements":[{"expression":{"id":6089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6079,"name":"userBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"6161:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid memory[] memory"}},"id":6081,"indexExpression":{"id":6080,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"6170:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6161:15:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_memory_ptr","typeString":"struct BidManagement.Bid memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"baseExpression":{"id":6082,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5569,"src":"6179:4:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$_$","typeString":"mapping(uint256 => mapping(uint256 => struct BidManagement.Bid storage ref))"}},"id":6084,"indexExpression":{"hexValue":"30","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6184:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6179:7:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Bid_$5562_storage_$","typeString":"mapping(uint256 => struct BidManagement.Bid storage ref)"}},"id":6088,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6085,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"6187:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6189:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6187:3:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6179:12:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage","typeString":"struct BidManagement.Bid storage ref"}},"src":"6161:30:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_memory_ptr","typeString":"struct BidManagement.Bid memory"}},"id":6090,"nodeType":"ExpressionStatement","src":"6161:30:8"},{"expression":{"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6209:7:8","subExpression":{"id":6091,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6054,"src":"6209:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6093,"nodeType":"ExpressionStatement","src":"6209:7:8"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6061,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"6064:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"baseExpression":{"id":6062,"name":"bidCounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5573,"src":"6069:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":6064,"indexExpression":{"hexValue":"30","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6079:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6069:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6064:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6097,"initializationExpression":{"assignments":[6058],"declarations":[{"constant":false,"id":6058,"mutability":"mutable","name":"i","nameLocation":"6057:1:8","nodeType":"VariableDeclaration","scope":6097,"src":"6049:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6057,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6060,"initialValue":{"hexValue":"31","id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6061:1:8","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"6049:13:8"},"loopExpression":{"expression":{"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6083:3:8","subExpression":{"id":6066,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6058,"src":"6083:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6068,"nodeType":"ExpressionStatement","src":"6083:3:8"},"nodeType":"ForStatement","src":"6044:197:8"},{"expression":{"id":6098,"name":"userBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"6257:8:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid memory[] memory"}},"functionReturnParameters":6007,"id":6099,"nodeType":"Return","src":"6250:15:8"}]},"functionSelector":"2e78b869","id":6101,"implemented":true,"kind":"function","modifiers":[],"name":"getBidsForUser","nameLocation":"5706:14:8","nodeType":"FunctionDefinition","parameters":{"id":6002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6001,"mutability":"mutable","name":"_user","nameLocation":"5729:5:8","nodeType":"VariableDeclaration","scope":6101,"src":"5721:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6000,"name":"address","nodeType":"ElementaryTypeName","src":"5721:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5720:15:8"},"returnParameters":{"id":6007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6101,"src":"5757:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_memory_ptr_$dyn_memory_ptr","typeString":"struct BidManagement.Bid[]"},"typeName":{"baseType":{"id":6004,"nodeType":"UserDefinedTypeName","pathNode":{"id":6003,"name":"Bid","nameLocations":["5757:3:8"],"nodeType":"IdentifierPath","referencedDeclaration":5562,"src":"5757:3:8"},"referencedDeclaration":5562,"src":"5757:3:8","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$5562_storage_ptr","typeString":"struct BidManagement.Bid"}},"id":6005,"nodeType":"ArrayTypeName","src":"5757:5:8","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$5562_storage_$dyn_storage_ptr","typeString":"struct BidManagement.Bid[]"}},"visibility":"internal"}],"src":"5756:14:8"},"scope":6102,"src":"5697:575:8","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6103,"src":"163:6111:8","usedErrors":[13,18],"usedEvents":[24,5491,5499,5509,5517,5527]}],"src":"32:6243:8"},"id":8},"src/contracts/Database.sol":{"ast":{"absolutePath":"src/contracts/Database.sol","exportedSymbols":{"Context":[177],"Database":[6592],"Math":[3252],"Ownable":[147],"SafeCast":[5017],"SignedMath":[5161],"Strings":[1631]},"id":6593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6104,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6593,"sourceUnit":148,"src":"57:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":6106,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6593,"sourceUnit":1632,"src":"110:51:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6107,"name":"Ownable","nameLocations":["184:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"184:7:9"},"id":6108,"nodeType":"InheritanceSpecifier","src":"184:7:9"}],"canonicalName":"Database","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":6592,"linearizedBaseContracts":[6592,147,177],"name":"Database","nameLocation":"172:8:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":6111,"libraryName":{"id":6109,"name":"Strings","nameLocations":["204:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1631,"src":"204:7:9"},"nodeType":"UsingForDirective","src":"198:26:9","typeName":{"id":6110,"name":"uint256","nodeType":"ElementaryTypeName","src":"216:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"body":{"id":6119,"nodeType":"Block","src":"305:2:9","statements":[]},"id":6120,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6116,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"291:12:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6117,"kind":"baseConstructorSpecifier","modifierName":{"id":6115,"name":"Ownable","nameLocations":["283:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"283:7:9"},"nodeType":"ModifierInvocation","src":"283:21:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"initialOwner","nameLocation":"269:12:9","nodeType":"VariableDeclaration","scope":6120,"src":"261:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6112,"name":"address","nodeType":"ElementaryTypeName","src":"261:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"260:22:9"},"returnParameters":{"id":6118,"nodeType":"ParameterList","parameters":[],"src":"305:0:9"},"scope":6592,"src":"249:58:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"canonicalName":"Database.UserRole","id":6124,"members":[{"id":6121,"name":"ADMIN","nameLocation":"355:5:9","nodeType":"EnumValue","src":"355:5:9"},{"id":6122,"name":"OFFICER","nameLocation":"370:7:9","nodeType":"EnumValue","src":"370:7:9"},{"id":6123,"name":"BIDDER","nameLocation":"387:6:9","nodeType":"EnumValue","src":"387:6:9"}],"name":"UserRole","nameLocation":"336:8:9","nodeType":"EnumDefinition","src":"331:68:9"},{"canonicalName":"Database.User","id":6142,"members":[{"constant":false,"id":6126,"mutability":"mutable","name":"name","nameLocation":"453:4:9","nodeType":"VariableDeclaration","scope":6142,"src":"446:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6125,"name":"string","nodeType":"ElementaryTypeName","src":"446:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6128,"mutability":"mutable","name":"username","nameLocation":"474:8:9","nodeType":"VariableDeclaration","scope":6142,"src":"467:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6127,"name":"string","nodeType":"ElementaryTypeName","src":"467:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6130,"mutability":"mutable","name":"email","nameLocation":"499:5:9","nodeType":"VariableDeclaration","scope":6142,"src":"492:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6129,"name":"string","nodeType":"ElementaryTypeName","src":"492:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6132,"mutability":"mutable","name":"walletAddress","nameLocation":"522:13:9","nodeType":"VariableDeclaration","scope":6142,"src":"514:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6131,"name":"address","nodeType":"ElementaryTypeName","src":"514:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6135,"mutability":"mutable","name":"role","nameLocation":"554:4:9","nodeType":"VariableDeclaration","scope":6142,"src":"545:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"},"typeName":{"id":6134,"nodeType":"UserDefinedTypeName","pathNode":{"id":6133,"name":"UserRole","nameLocations":["545:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"545:8:9"},"referencedDeclaration":6124,"src":"545:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},"visibility":"internal"},{"constant":false,"id":6137,"mutability":"mutable","name":"isApproved","nameLocation":"573:10:9","nodeType":"VariableDeclaration","scope":6142,"src":"568:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6136,"name":"bool","nodeType":"ElementaryTypeName","src":"568:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6139,"mutability":"mutable","name":"approvalRemark","nameLocation":"600:14:9","nodeType":"VariableDeclaration","scope":6142,"src":"593:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6138,"name":"string","nodeType":"ElementaryTypeName","src":"593:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6141,"mutability":"mutable","name":"createdAt","nameLocation":"632:9:9","nodeType":"VariableDeclaration","scope":6142,"src":"624:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6140,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"User","nameLocation":"431:4:9","nodeType":"StructDefinition","scope":6592,"src":"424:224:9","visibility":"public"},{"canonicalName":"Database.Tender","id":6159,"members":[{"constant":false,"id":6144,"mutability":"mutable","name":"id","nameLocation":"707:2:9","nodeType":"VariableDeclaration","scope":6159,"src":"699:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6143,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6146,"mutability":"mutable","name":"title","nameLocation":"726:5:9","nodeType":"VariableDeclaration","scope":6159,"src":"719:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6145,"name":"string","nodeType":"ElementaryTypeName","src":"719:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6148,"mutability":"mutable","name":"description","nameLocation":"748:11:9","nodeType":"VariableDeclaration","scope":6159,"src":"741:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6147,"name":"string","nodeType":"ElementaryTypeName","src":"741:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6150,"mutability":"mutable","name":"budget","nameLocation":"777:6:9","nodeType":"VariableDeclaration","scope":6159,"src":"769:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6149,"name":"uint256","nodeType":"ElementaryTypeName","src":"769:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6152,"mutability":"mutable","name":"deadline","nameLocation":"801:8:9","nodeType":"VariableDeclaration","scope":6159,"src":"793:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6151,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6154,"mutability":"mutable","name":"officerAddress","nameLocation":"827:14:9","nodeType":"VariableDeclaration","scope":6159,"src":"819:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6153,"name":"address","nodeType":"ElementaryTypeName","src":"819:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6156,"mutability":"mutable","name":"isActive","nameLocation":"856:8:9","nodeType":"VariableDeclaration","scope":6159,"src":"851:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6155,"name":"bool","nodeType":"ElementaryTypeName","src":"851:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6158,"mutability":"mutable","name":"createdAt","nameLocation":"882:9:9","nodeType":"VariableDeclaration","scope":6159,"src":"874:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6157,"name":"uint256","nodeType":"ElementaryTypeName","src":"874:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Tender","nameLocation":"682:6:9","nodeType":"StructDefinition","scope":6592,"src":"675:223:9","visibility":"public"},{"canonicalName":"Database.Bid","id":6170,"members":[{"constant":false,"id":6161,"mutability":"mutable","name":"tenderId","nameLocation":"951:8:9","nodeType":"VariableDeclaration","scope":6170,"src":"943:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6160,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6163,"mutability":"mutable","name":"bidderAddress","nameLocation":"977:13:9","nodeType":"VariableDeclaration","scope":6170,"src":"969:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6162,"name":"address","nodeType":"ElementaryTypeName","src":"969:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6165,"mutability":"mutable","name":"amount","nameLocation":"1008:6:9","nodeType":"VariableDeclaration","scope":6170,"src":"1000:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6167,"mutability":"mutable","name":"description","nameLocation":"1031:11:9","nodeType":"VariableDeclaration","scope":6170,"src":"1024:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6166,"name":"string","nodeType":"ElementaryTypeName","src":"1024:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6169,"mutability":"mutable","name":"submittedAt","nameLocation":"1060:11:9","nodeType":"VariableDeclaration","scope":6170,"src":"1052:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6168,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Bid","nameLocation":"929:3:9","nodeType":"StructDefinition","scope":6592,"src":"922:156:9","visibility":"public"},{"constant":false,"functionSelector":"a87430ba","id":6175,"mutability":"mutable","name":"users","nameLocation":"1132:5:9","nodeType":"VariableDeclaration","scope":6592,"src":"1100:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User)"},"typeName":{"id":6174,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6171,"name":"address","nodeType":"ElementaryTypeName","src":"1108:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1100:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6173,"nodeType":"UserDefinedTypeName","pathNode":{"id":6172,"name":"User","nameLocations":["1119:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":6142,"src":"1119:4:9"},"referencedDeclaration":6142,"src":"1119:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage_ptr","typeString":"struct Database.User"}}},"visibility":"public"},{"constant":false,"functionSelector":"aaee301f","id":6179,"mutability":"mutable","name":"usernames","nameLocation":"1174:9:9","nodeType":"VariableDeclaration","scope":6592,"src":"1143:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":6178,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6176,"name":"string","nodeType":"ElementaryTypeName","src":"1151:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1143:23:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6177,"name":"bool","nodeType":"ElementaryTypeName","src":"1161:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"465e1def","id":6184,"mutability":"mutable","name":"tenders","nameLocation":"1223:7:9","nodeType":"VariableDeclaration","scope":6592,"src":"1189:41:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender)"},"typeName":{"id":6183,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6180,"name":"uint256","nodeType":"ElementaryTypeName","src":"1197:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1189:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6182,"nodeType":"UserDefinedTypeName","pathNode":{"id":6181,"name":"Tender","nameLocations":["1208:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"1208:6:9"},"referencedDeclaration":6159,"src":"1208:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage_ptr","typeString":"struct Database.Tender"}}},"visibility":"public"},{"constant":false,"functionSelector":"7b3c4baa","id":6190,"mutability":"mutable","name":"bids","nameLocation":"1269:4:9","nodeType":"VariableDeclaration","scope":6592,"src":"1236:37:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Database.Bid[])"},"typeName":{"id":6189,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6185,"name":"uint256","nodeType":"ElementaryTypeName","src":"1244:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1236:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Database.Bid[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":6187,"nodeType":"UserDefinedTypeName","pathNode":{"id":6186,"name":"Bid","nameLocations":["1255:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":6170,"src":"1255:3:9"},"referencedDeclaration":6170,"src":"1255:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$6170_storage_ptr","typeString":"struct Database.Bid"}},"id":6188,"nodeType":"ArrayTypeName","src":"1255:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_ptr","typeString":"struct Database.Bid[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"1f058776","id":6192,"mutability":"mutable","name":"tenderCount","nameLocation":"1294:11:9","nodeType":"VariableDeclaration","scope":6592,"src":"1279:26:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"c2e5d5da58bd71d1a2d14cdef02a4256d971b728088f8190d067ccfbae3bd73e","id":6201,"name":"UserRegistered","nameLocation":"1332:14:9","nodeType":"EventDefinition","parameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6194,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1363:4:9","nodeType":"VariableDeclaration","scope":6201,"src":"1347:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6193,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6196,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"1376:8:9","nodeType":"VariableDeclaration","scope":6201,"src":"1369:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6195,"name":"string","nodeType":"ElementaryTypeName","src":"1369:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6199,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1395:4:9","nodeType":"VariableDeclaration","scope":6201,"src":"1386:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"},"typeName":{"id":6198,"nodeType":"UserDefinedTypeName","pathNode":{"id":6197,"name":"UserRole","nameLocations":["1386:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"1386:8:9"},"referencedDeclaration":6124,"src":"1386:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},"visibility":"internal"}],"src":"1346:54:9"},"src":"1326:75:9"},{"anonymous":false,"eventSelector":"b81b5bf45193a7a76f3526dad1b835e00d4b4fe251e28deb91b938ad89979568","id":6209,"name":"UserApproved","nameLocation":"1412:12:9","nodeType":"EventDefinition","parameters":{"id":6208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6203,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1441:4:9","nodeType":"VariableDeclaration","scope":6209,"src":"1425:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6202,"name":"address","nodeType":"ElementaryTypeName","src":"1425:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6205,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"1454:8:9","nodeType":"VariableDeclaration","scope":6209,"src":"1447:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6204,"name":"string","nodeType":"ElementaryTypeName","src":"1447:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6207,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1469:8:9","nodeType":"VariableDeclaration","scope":6209,"src":"1464:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6206,"name":"bool","nodeType":"ElementaryTypeName","src":"1464:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1424:54:9"},"src":"1406:73:9"},{"anonymous":false,"eventSelector":"288c2eb47aa865e9daa5c117ccf7af2111afee680cc033a9f537aafdc6b7908a","id":6217,"name":"TenderCreated","nameLocation":"1490:13:9","nodeType":"EventDefinition","parameters":{"id":6216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6211,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1520:2:9","nodeType":"VariableDeclaration","scope":6217,"src":"1504:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6213,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"1531:5:9","nodeType":"VariableDeclaration","scope":6217,"src":"1524:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6212,"name":"string","nodeType":"ElementaryTypeName","src":"1524:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6215,"indexed":false,"mutability":"mutable","name":"officer","nameLocation":"1546:7:9","nodeType":"VariableDeclaration","scope":6217,"src":"1538:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6214,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1503:51:9"},"src":"1484:71:9"},{"anonymous":false,"eventSelector":"177554f051f4aa1f0d0310334854b429baeecdb5a96bc329a26fd0cb7c8a7be3","id":6225,"name":"BidSubmitted","nameLocation":"1566:12:9","nodeType":"EventDefinition","parameters":{"id":6224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6219,"indexed":true,"mutability":"mutable","name":"tenderId","nameLocation":"1595:8:9","nodeType":"VariableDeclaration","scope":6225,"src":"1579:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6218,"name":"uint256","nodeType":"ElementaryTypeName","src":"1579:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6221,"indexed":true,"mutability":"mutable","name":"bidder","nameLocation":"1621:6:9","nodeType":"VariableDeclaration","scope":6225,"src":"1605:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6220,"name":"address","nodeType":"ElementaryTypeName","src":"1605:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6223,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1637:6:9","nodeType":"VariableDeclaration","scope":6225,"src":"1629:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6222,"name":"uint256","nodeType":"ElementaryTypeName","src":"1629:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1578:66:9"},"src":"1560:85:9"},{"body":{"id":6290,"nodeType":"Block","src":"1825:476:9","statements":[{"expression":{"arguments":[{"id":6241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1843:21:9","subExpression":{"baseExpression":{"id":6238,"name":"usernames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"1844:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6240,"indexExpression":{"id":6239,"name":"_username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"1854:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1844:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365726e616d6520616c726561647920657869737473","id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1866:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""},"value":"Username already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""}],"id":6237,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1835:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1835:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6244,"nodeType":"ExpressionStatement","src":"1835:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6246,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"1910:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6249,"indexExpression":{"expression":{"id":6247,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1916:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1920:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1916:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1910:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6250,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1928:13:9","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":6132,"src":"1910:31:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":6253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1953:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1945:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6251,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:9","typeDescriptions":{}}},"id":6254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1945:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1910:45:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220616c72656164792072656769737465726564","id":6256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1957:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40","typeString":"literal_string \"User already registered\""},"value":"User already registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a08d66f010282343c63a2adfb2fb2eae7af36c2d0e7cd9b2008665789fb65b40","typeString":"literal_string \"User already registered\""}],"id":6245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1902:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1902:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6258,"nodeType":"ExpressionStatement","src":"1902:81:9"},{"expression":{"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6259,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"1994:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6262,"indexExpression":{"expression":{"id":6260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2000:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2004:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2000:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1994:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6264,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"2032:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6265,"name":"_username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"2051:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6266,"name":"_email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"2074:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6267,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2094:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2098:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2094:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6269,"name":"_role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"2118:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},{"hexValue":"66616c7365","id":6270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2137:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2156:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"expression":{"id":6272,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2172:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2178:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"2172:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6263,"name":"User","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"2014:4:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_User_$6142_storage_ptr_$","typeString":"type(struct Database.User storage pointer)"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:183:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_memory_ptr","typeString":"struct Database.User memory"}},"src":"1994:203:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6276,"nodeType":"ExpressionStatement","src":"1994:203:9"},{"expression":{"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6277,"name":"usernames","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6179,"src":"2207:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6279,"indexExpression":{"id":6278,"name":"_username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"2217:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2207:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2230:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2207:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6282,"nodeType":"ExpressionStatement","src":"2207:27:9"},{"eventCall":{"arguments":[{"expression":{"id":6284,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2265:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2269:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2265:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6286,"name":"_username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"2277:9:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6287,"name":"_role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6234,"src":"2288:5:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}],"id":6283,"name":"UserRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"2250:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_enum$_UserRole_$6124_$returns$__$","typeString":"function (address,string memory,enum Database.UserRole)"}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2250:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6289,"nodeType":"EmitStatement","src":"2245:49:9"}]},"functionSelector":"0f771417","id":6291,"implemented":true,"kind":"function","modifiers":[],"name":"registerUser","nameLocation":"1683:12:9","nodeType":"FunctionDefinition","parameters":{"id":6235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"_name","nameLocation":"1719:5:9","nodeType":"VariableDeclaration","scope":6291,"src":"1705:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6226,"name":"string","nodeType":"ElementaryTypeName","src":"1705:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6229,"mutability":"mutable","name":"_username","nameLocation":"1748:9:9","nodeType":"VariableDeclaration","scope":6291,"src":"1734:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6228,"name":"string","nodeType":"ElementaryTypeName","src":"1734:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6231,"mutability":"mutable","name":"_email","nameLocation":"1781:6:9","nodeType":"VariableDeclaration","scope":6291,"src":"1767:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6230,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6234,"mutability":"mutable","name":"_role","nameLocation":"1806:5:9","nodeType":"VariableDeclaration","scope":6291,"src":"1797:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"},"typeName":{"id":6233,"nodeType":"UserDefinedTypeName","pathNode":{"id":6232,"name":"UserRole","nameLocations":["1797:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":6124,"src":"1797:8:9"},"referencedDeclaration":6124,"src":"1797:8:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},"visibility":"internal"}],"src":"1695:122:9"},"returnParameters":{"id":6236,"nodeType":"ParameterList","parameters":[],"src":"1825:0:9"},"scope":6592,"src":"1674:627:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6338,"nodeType":"Block","src":"2399:259:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6303,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2417:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6305,"indexExpression":{"id":6304,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"2423:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2417:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2430:13:9","memberName":"walletAddress","nodeType":"MemberAccess","referencedDeclaration":6132,"src":"2417:26:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2455:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2447:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6307,"name":"address","nodeType":"ElementaryTypeName","src":"2447:7:9","typeDescriptions":{}}},"id":6310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2417:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55736572206e6f742072656769737465726564","id":6312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2459:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_263f68979ab8493dfb876baf1251b5bb5d13d94765abbd21388b0d254d48747c","typeString":"literal_string \"User not registered\""},"value":"User not registered"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_263f68979ab8493dfb876baf1251b5bb5d13d94765abbd21388b0d254d48747c","typeString":"literal_string \"User not registered\""}],"id":6302,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2409:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2409:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6314,"nodeType":"ExpressionStatement","src":"2409:72:9"},{"expression":{"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6315,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2500:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6317,"indexExpression":{"id":6316,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"2506:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2500:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6318,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2513:10:9","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":6137,"src":"2500:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6319,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"2526:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2500:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6321,"nodeType":"ExpressionStatement","src":"2500:35:9"},{"expression":{"id":6327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6322,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2545:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6324,"indexExpression":{"id":6323,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"2551:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2545:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6325,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2558:14:9","memberName":"approvalRemark","nodeType":"MemberAccess","referencedDeclaration":6139,"src":"2545:27:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6326,"name":"_remark","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6297,"src":"2575:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2545:37:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6328,"nodeType":"ExpressionStatement","src":"2545:37:9"},{"eventCall":{"arguments":[{"id":6330,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"2611:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":6331,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2618:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6333,"indexExpression":{"id":6332,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6293,"src":"2624:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2618:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6334,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2631:8:9","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":6128,"src":"2618:21:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":6335,"name":"_approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"2641:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6329,"name":"UserApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6209,"src":"2598:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,string memory,bool)"}},"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2598:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6337,"nodeType":"EmitStatement","src":"2593:58:9"}]},"functionSelector":"3a9361bd","id":6339,"implemented":true,"kind":"function","modifiers":[{"id":6300,"kind":"modifierInvocation","modifierName":{"id":6299,"name":"onlyOwner","nameLocations":["2389:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2389:9:9"},"nodeType":"ModifierInvocation","src":"2389:9:9"}],"name":"approveUser","nameLocation":"2316:11:9","nodeType":"FunctionDefinition","parameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6293,"mutability":"mutable","name":"_user","nameLocation":"2336:5:9","nodeType":"VariableDeclaration","scope":6339,"src":"2328:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6292,"name":"address","nodeType":"ElementaryTypeName","src":"2328:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6295,"mutability":"mutable","name":"_approved","nameLocation":"2348:9:9","nodeType":"VariableDeclaration","scope":6339,"src":"2343:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6294,"name":"bool","nodeType":"ElementaryTypeName","src":"2343:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6297,"mutability":"mutable","name":"_remark","nameLocation":"2373:7:9","nodeType":"VariableDeclaration","scope":6339,"src":"2359:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6296,"name":"string","nodeType":"ElementaryTypeName","src":"2359:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2327:54:9"},"returnParameters":{"id":6301,"nodeType":"ParameterList","parameters":[],"src":"2399:0:9"},"scope":6592,"src":"2307:351:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6398,"nodeType":"Block","src":"2842:493:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"},"id":6358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6351,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2860:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6354,"indexExpression":{"expression":{"id":6352,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2866:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2870:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2866:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2860:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2878:4:9","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":6135,"src":"2860:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6356,"name":"UserRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"2886:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_UserRole_$6124_$","typeString":"type(enum Database.UserRole)"}},"id":6357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2895:7:9","memberName":"OFFICER","nodeType":"MemberAccess","referencedDeclaration":6122,"src":"2886:16:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},"src":"2860:42:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f666669636572732063616e206372656174652074656e64657273","id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2904:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_543e106fda74210dd572b16b0c201f631d0c2cad089568f17751aa1d82fca0ce","typeString":"literal_string \"Only officers can create tenders\""},"value":"Only officers can create tenders"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_543e106fda74210dd572b16b0c201f631d0c2cad089568f17751aa1d82fca0ce","typeString":"literal_string \"Only officers can create tenders\""}],"id":6350,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2852:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2852:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6361,"nodeType":"ExpressionStatement","src":"2852:87:9"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6363,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"2957:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6366,"indexExpression":{"expression":{"id":6364,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2963:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2967:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2963:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2957:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2975:10:9","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":6137,"src":"2957:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55736572206e6f7420617070726f766564","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2987:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed2f2fab5396dfeed9b474c41cea0ea1a9b61e1563de3f6ca8beae276160c8c4","typeString":"literal_string \"User not approved\""},"value":"User not approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed2f2fab5396dfeed9b474c41cea0ea1a9b61e1563de3f6ca8beae276160c8c4","typeString":"literal_string \"User not approved\""}],"id":6362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2949:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2949:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6370,"nodeType":"ExpressionStatement","src":"2949:58:9"},{"expression":{"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3018:13:9","subExpression":{"id":6371,"name":"tenderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"3018:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6373,"nodeType":"ExpressionStatement","src":"3018:13:9"},{"expression":{"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6374,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"3041:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender storage ref)"}},"id":6376,"indexExpression":{"id":6375,"name":"tenderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"3049:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3041:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6378,"name":"tenderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"3084:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6379,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"3109:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6380,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6343,"src":"3129:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6381,"name":"_budget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6345,"src":"3155:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6382,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"3176:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6383,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3199:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3203:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3199:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":6385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3223:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6386,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3241:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3247:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3241:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6377,"name":"Tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6159,"src":"3064:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Tender_$6159_storage_ptr_$","typeString":"type(struct Database.Tender storage pointer)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3064:202:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_memory_ptr","typeString":"struct Database.Tender memory"}},"src":"3041:225:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"id":6390,"nodeType":"ExpressionStatement","src":"3041:225:9"},{"eventCall":{"arguments":[{"id":6392,"name":"tenderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"3296:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6393,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6341,"src":"3309:6:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6394,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3317:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3321:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3317:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6391,"name":"TenderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"3282:13:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (uint256,string memory,address)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6397,"nodeType":"EmitStatement","src":"3277:51:9"}]},"functionSelector":"d927ee88","id":6399,"implemented":true,"kind":"function","modifiers":[],"name":"createTender","nameLocation":"2698:12:9","nodeType":"FunctionDefinition","parameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6341,"mutability":"mutable","name":"_title","nameLocation":"2734:6:9","nodeType":"VariableDeclaration","scope":6399,"src":"2720:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6340,"name":"string","nodeType":"ElementaryTypeName","src":"2720:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6343,"mutability":"mutable","name":"_description","nameLocation":"2764:12:9","nodeType":"VariableDeclaration","scope":6399,"src":"2750:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6342,"name":"string","nodeType":"ElementaryTypeName","src":"2750:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6345,"mutability":"mutable","name":"_budget","nameLocation":"2794:7:9","nodeType":"VariableDeclaration","scope":6399,"src":"2786:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6344,"name":"uint256","nodeType":"ElementaryTypeName","src":"2786:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6347,"mutability":"mutable","name":"_deadline","nameLocation":"2819:9:9","nodeType":"VariableDeclaration","scope":6399,"src":"2811:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6346,"name":"uint256","nodeType":"ElementaryTypeName","src":"2811:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:124:9"},"returnParameters":{"id":6349,"nodeType":"ParameterList","parameters":[],"src":"2842:0:9"},"scope":6592,"src":"2689:646:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6470,"nodeType":"Block","src":"3461:557:9","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6409,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"3479:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender storage ref)"}},"id":6411,"indexExpression":{"id":6410,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"3487:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3479:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"id":6412,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3498:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6156,"src":"3479:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e646572206973206e6f7420616374697665","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3508:22:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a7eb68471882d2f4c89682070c1733976b9adde8e0cb4108ee5929db1861dc2","typeString":"literal_string \"Tender is not active\""},"value":"Tender is not active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a7eb68471882d2f4c89682070c1733976b9adde8e0cb4108ee5929db1861dc2","typeString":"literal_string \"Tender is not active\""}],"id":6408,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3471:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6415,"nodeType":"ExpressionStatement","src":"3471:60:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6417,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3549:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3555:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3549:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"baseExpression":{"id":6419,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"3568:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender storage ref)"}},"id":6421,"indexExpression":{"id":6420,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"3576:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3568:18:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"id":6422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3587:8:9","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":6152,"src":"3568:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e64657220646561646c696e6520706173736564","id":6424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3597:24:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_988f788847b836df8732e0a8661a5f83e695ef8ac34eee81c8247677ec8cf84a","typeString":"literal_string \"Tender deadline passed\""},"value":"Tender deadline passed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_988f788847b836df8732e0a8661a5f83e695ef8ac34eee81c8247677ec8cf84a","typeString":"literal_string \"Tender deadline passed\""}],"id":6416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3541:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6426,"nodeType":"ExpressionStatement","src":"3541:81:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"},"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6428,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"3640:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6431,"indexExpression":{"expression":{"id":6429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3646:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3646:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3640:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3658:4:9","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":6135,"src":"3640:22:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6433,"name":"UserRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6124,"src":"3666:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_UserRole_$6124_$","typeString":"type(enum Database.UserRole)"}},"id":6434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3675:6:9","memberName":"BIDDER","nodeType":"MemberAccess","referencedDeclaration":6123,"src":"3666:15:9","typeDescriptions":{"typeIdentifier":"t_enum$_UserRole_$6124","typeString":"enum Database.UserRole"}},"src":"3640:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7920626964646572732063616e207375626d69742062696473","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3683:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2179e3a86716c741c1fbe716f911c0fea2f9b1419f92c7e7610fc421105429a7","typeString":"literal_string \"Only bidders can submit bids\""},"value":"Only bidders can submit bids"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2179e3a86716c741c1fbe716f911c0fea2f9b1419f92c7e7610fc421105429a7","typeString":"literal_string \"Only bidders can submit bids\""}],"id":6427,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3632:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3632:82:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6438,"nodeType":"ExpressionStatement","src":"3632:82:9"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6440,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"3732:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6443,"indexExpression":{"expression":{"id":6441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3738:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3742:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3738:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3732:17:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"id":6444,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3750:10:9","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":6137,"src":"3732:28:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55736572206e6f7420617070726f766564","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:19:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed2f2fab5396dfeed9b474c41cea0ea1a9b61e1563de3f6ca8beae276160c8c4","typeString":"literal_string \"User not approved\""},"value":"User not approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed2f2fab5396dfeed9b474c41cea0ea1a9b61e1563de3f6ca8beae276160c8c4","typeString":"literal_string \"User not approved\""}],"id":6439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3724:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3724:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6447,"nodeType":"ExpressionStatement","src":"3724:58:9"},{"expression":{"arguments":[{"arguments":[{"id":6453,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"3831:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3854:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3858:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3854:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6456,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"3878:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6457,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6405,"src":"3899:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6458,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3925:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3925:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6452,"name":"Bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"3814:3:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Bid_$6170_storage_ptr_$","typeString":"type(struct Database.Bid storage pointer)"}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3814:136:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$6170_memory_ptr","typeString":"struct Database.Bid memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bid_$6170_memory_ptr","typeString":"struct Database.Bid memory"}],"expression":{"baseExpression":{"id":6448,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"3793:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Database.Bid storage ref[] storage ref)"}},"id":6450,"indexExpression":{"id":6449,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"3798:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3793:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$6170_storage_$dyn_storage","typeString":"struct Database.Bid storage ref[] storage ref"}},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3809:4:9","memberName":"push","nodeType":"MemberAccess","src":"3793:20:9","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_ptr_$_t_struct$_Bid_$6170_storage_$returns$__$attached_to$_t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_ptr_$","typeString":"function (struct Database.Bid storage ref[] storage pointer,struct Database.Bid storage ref)"}},"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:158:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6462,"nodeType":"ExpressionStatement","src":"3793:158:9"},{"eventCall":{"arguments":[{"id":6464,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6401,"src":"3980:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6465,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3991:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3995:6:9","memberName":"sender","nodeType":"MemberAccess","src":"3991:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6467,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6403,"src":"4003:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6463,"name":"BidSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"3967:12:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":6468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3967:44:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6469,"nodeType":"EmitStatement","src":"3962:49:9"}]},"functionSelector":"14c60bdd","id":6471,"implemented":true,"kind":"function","modifiers":[],"name":"submitBid","nameLocation":"3350:9:9","nodeType":"FunctionDefinition","parameters":{"id":6406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6401,"mutability":"mutable","name":"_tenderId","nameLocation":"3377:9:9","nodeType":"VariableDeclaration","scope":6471,"src":"3369:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3369:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6403,"mutability":"mutable","name":"_amount","nameLocation":"3404:7:9","nodeType":"VariableDeclaration","scope":6471,"src":"3396:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6405,"mutability":"mutable","name":"_description","nameLocation":"3435:12:9","nodeType":"VariableDeclaration","scope":6471,"src":"3421:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6404,"name":"string","nodeType":"ElementaryTypeName","src":"3421:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3359:94:9"},"returnParameters":{"id":6407,"nodeType":"ParameterList","parameters":[],"src":"3461:0:9"},"scope":6592,"src":"3341:677:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6483,"nodeType":"Block","src":"4112:36:9","statements":[{"expression":{"baseExpression":{"id":6479,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"4129:5:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$6142_storage_$","typeString":"mapping(address => struct Database.User storage ref)"}},"id":6481,"indexExpression":{"id":6480,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6473,"src":"4135:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4129:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage","typeString":"struct Database.User storage ref"}},"functionReturnParameters":6478,"id":6482,"nodeType":"Return","src":"4122:19:9"}]},"functionSelector":"6f77926b","id":6484,"implemented":true,"kind":"function","modifiers":[],"name":"getUser","nameLocation":"4055:7:9","nodeType":"FunctionDefinition","parameters":{"id":6474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6473,"mutability":"mutable","name":"_user","nameLocation":"4071:5:9","nodeType":"VariableDeclaration","scope":6484,"src":"4063:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6472,"name":"address","nodeType":"ElementaryTypeName","src":"4063:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4062:15:9"},"returnParameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6484,"src":"4099:11:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_memory_ptr","typeString":"struct Database.User"},"typeName":{"id":6476,"nodeType":"UserDefinedTypeName","pathNode":{"id":6475,"name":"User","nameLocations":["4099:4:9"],"nodeType":"IdentifierPath","referencedDeclaration":6142,"src":"4099:4:9"},"referencedDeclaration":6142,"src":"4099:4:9","typeDescriptions":{"typeIdentifier":"t_struct$_User_$6142_storage_ptr","typeString":"struct Database.User"}},"visibility":"internal"}],"src":"4098:13:9"},"scope":6592,"src":"4046:102:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6496,"nodeType":"Block","src":"4222:36:9","statements":[{"expression":{"baseExpression":{"id":6492,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"4239:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender storage ref)"}},"id":6494,"indexExpression":{"id":6493,"name":"_id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6486,"src":"4247:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4239:12:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"functionReturnParameters":6491,"id":6495,"nodeType":"Return","src":"4232:19:9"}]},"functionSelector":"0585c25e","id":6497,"implemented":true,"kind":"function","modifiers":[],"name":"getTender","nameLocation":"4163:9:9","nodeType":"FunctionDefinition","parameters":{"id":6487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6486,"mutability":"mutable","name":"_id","nameLocation":"4181:3:9","nodeType":"VariableDeclaration","scope":6497,"src":"4173:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6485,"name":"uint256","nodeType":"ElementaryTypeName","src":"4173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4172:13:9"},"returnParameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6497,"src":"4207:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_memory_ptr","typeString":"struct Database.Tender"},"typeName":{"id":6489,"nodeType":"UserDefinedTypeName","pathNode":{"id":6488,"name":"Tender","nameLocations":["4207:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"4207:6:9"},"referencedDeclaration":6159,"src":"4207:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage_ptr","typeString":"struct Database.Tender"}},"visibility":"internal"}],"src":"4206:15:9"},"scope":6592,"src":"4154:104:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6510,"nodeType":"Block","src":"4335:39:9","statements":[{"expression":{"baseExpression":{"id":6506,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6190,"src":"4352:4:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct Database.Bid storage ref[] storage ref)"}},"id":6508,"indexExpression":{"id":6507,"name":"_tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6499,"src":"4357:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4352:15:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$6170_storage_$dyn_storage","typeString":"struct Database.Bid storage ref[] storage ref"}},"functionReturnParameters":6505,"id":6509,"nodeType":"Return","src":"4345:22:9"}]},"functionSelector":"131d9a27","id":6511,"implemented":true,"kind":"function","modifiers":[],"name":"getBids","nameLocation":"4273:7:9","nodeType":"FunctionDefinition","parameters":{"id":6500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6499,"mutability":"mutable","name":"_tenderId","nameLocation":"4289:9:9","nodeType":"VariableDeclaration","scope":6511,"src":"4281:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6498,"name":"uint256","nodeType":"ElementaryTypeName","src":"4281:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4280:19:9"},"returnParameters":{"id":6505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6504,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6511,"src":"4321:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$6170_memory_ptr_$dyn_memory_ptr","typeString":"struct Database.Bid[]"},"typeName":{"baseType":{"id":6502,"nodeType":"UserDefinedTypeName","pathNode":{"id":6501,"name":"Bid","nameLocations":["4321:3:9"],"nodeType":"IdentifierPath","referencedDeclaration":6170,"src":"4321:3:9"},"referencedDeclaration":6170,"src":"4321:3:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$6170_storage_ptr","typeString":"struct Database.Bid"}},"id":6503,"nodeType":"ArrayTypeName","src":"4321:5:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Bid_$6170_storage_$dyn_storage_ptr","typeString":"struct Database.Bid[]"}},"visibility":"internal"}],"src":"4320:14:9"},"scope":6592,"src":"4264:110:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":6590,"nodeType":"Block","src":"4446:486:9","statements":[{"assignments":[6519],"declarations":[{"constant":false,"id":6519,"mutability":"mutable","name":"count","nameLocation":"4464:5:9","nodeType":"VariableDeclaration","scope":6590,"src":"4456:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6518,"name":"uint256","nodeType":"ElementaryTypeName","src":"4456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6521,"initialValue":{"hexValue":"30","id":6520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4472:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4456:17:9"},{"body":{"id":6541,"nodeType":"Block","src":"4526:89:9","statements":[{"condition":{"expression":{"baseExpression":{"id":6532,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"4544:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender storage ref)"}},"id":6534,"indexExpression":{"id":6533,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"4552:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4544:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"id":6535,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4555:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6156,"src":"4544:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6540,"nodeType":"IfStatement","src":"4540:65:9","trueBody":{"id":6539,"nodeType":"Block","src":"4565:40:9","statements":[{"expression":{"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4583:7:9","subExpression":{"id":6536,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"4583:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6538,"nodeType":"ExpressionStatement","src":"4583:7:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6526,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"4503:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6527,"name":"tenderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"4508:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4503:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6542,"initializationExpression":{"assignments":[6523],"declarations":[{"constant":false,"id":6523,"mutability":"mutable","name":"i","nameLocation":"4496:1:9","nodeType":"VariableDeclaration","scope":6542,"src":"4488:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4488:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6525,"initialValue":{"hexValue":"31","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4500:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"4488:13:9"},"loopExpression":{"expression":{"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4521:3:9","subExpression":{"id":6529,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6523,"src":"4521:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6531,"nodeType":"ExpressionStatement","src":"4521:3:9"},"nodeType":"ForStatement","src":"4483:132:9"},{"assignments":[6547],"declarations":[{"constant":false,"id":6547,"mutability":"mutable","name":"activeTenders","nameLocation":"4641:13:9","nodeType":"VariableDeclaration","scope":6590,"src":"4625:29:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_memory_ptr_$dyn_memory_ptr","typeString":"struct Database.Tender[]"},"typeName":{"baseType":{"id":6545,"nodeType":"UserDefinedTypeName","pathNode":{"id":6544,"name":"Tender","nameLocations":["4625:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"4625:6:9"},"referencedDeclaration":6159,"src":"4625:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage_ptr","typeString":"struct Database.Tender"}},"id":6546,"nodeType":"ArrayTypeName","src":"4625:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_storage_$dyn_storage_ptr","typeString":"struct Database.Tender[]"}},"visibility":"internal"}],"id":6554,"initialValue":{"arguments":[{"id":6552,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"4670:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"4657:12:9","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Tender_$6159_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct Database.Tender memory[] memory)"},"typeName":{"baseType":{"id":6549,"nodeType":"UserDefinedTypeName","pathNode":{"id":6548,"name":"Tender","nameLocations":["4661:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"4661:6:9"},"referencedDeclaration":6159,"src":"4661:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage_ptr","typeString":"struct Database.Tender"}},"id":6550,"nodeType":"ArrayTypeName","src":"4661:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_storage_$dyn_storage_ptr","typeString":"struct Database.Tender[]"}}},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4657:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_memory_ptr_$dyn_memory_ptr","typeString":"struct Database.Tender memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"4625:51:9"},{"assignments":[6556],"declarations":[{"constant":false,"id":6556,"mutability":"mutable","name":"index","nameLocation":"4694:5:9","nodeType":"VariableDeclaration","scope":6590,"src":"4686:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6555,"name":"uint256","nodeType":"ElementaryTypeName","src":"4686:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6558,"initialValue":{"hexValue":"30","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4702:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4686:17:9"},{"body":{"id":6586,"nodeType":"Block","src":"4756:140:9","statements":[{"condition":{"expression":{"baseExpression":{"id":6569,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"4774:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender storage ref)"}},"id":6571,"indexExpression":{"id":6570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"4782:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4774:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"id":6572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4785:8:9","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6156,"src":"4774:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6585,"nodeType":"IfStatement","src":"4770:116:9","trueBody":{"id":6584,"nodeType":"Block","src":"4795:91:9","statements":[{"expression":{"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6573,"name":"activeTenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"4813:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_memory_ptr_$dyn_memory_ptr","typeString":"struct Database.Tender memory[] memory"}},"id":6575,"indexExpression":{"id":6574,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"4827:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4813:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_memory_ptr","typeString":"struct Database.Tender memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6576,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6184,"src":"4836:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Tender_$6159_storage_$","typeString":"mapping(uint256 => struct Database.Tender storage ref)"}},"id":6578,"indexExpression":{"id":6577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"4844:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4836:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage","typeString":"struct Database.Tender storage ref"}},"src":"4813:33:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_memory_ptr","typeString":"struct Database.Tender memory"}},"id":6580,"nodeType":"ExpressionStatement","src":"4813:33:9"},{"expression":{"id":6582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4864:7:9","subExpression":{"id":6581,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6556,"src":"4864:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6583,"nodeType":"ExpressionStatement","src":"4864:7:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6563,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"4733:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6564,"name":"tenderCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6192,"src":"4738:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4733:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6587,"initializationExpression":{"assignments":[6560],"declarations":[{"constant":false,"id":6560,"mutability":"mutable","name":"i","nameLocation":"4726:1:9","nodeType":"VariableDeclaration","scope":6587,"src":"4718:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6559,"name":"uint256","nodeType":"ElementaryTypeName","src":"4718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6562,"initialValue":{"hexValue":"31","id":6561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4730:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"4718:13:9"},"loopExpression":{"expression":{"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4751:3:9","subExpression":{"id":6566,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"4751:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6568,"nodeType":"ExpressionStatement","src":"4751:3:9"},"nodeType":"ForStatement","src":"4713:183:9"},{"expression":{"id":6588,"name":"activeTenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"4912:13:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_memory_ptr_$dyn_memory_ptr","typeString":"struct Database.Tender memory[] memory"}},"functionReturnParameters":6517,"id":6589,"nodeType":"Return","src":"4905:20:9"}]},"functionSelector":"2ac6c785","id":6591,"implemented":true,"kind":"function","modifiers":[],"name":"getActiveTenders","nameLocation":"4389:16:9","nodeType":"FunctionDefinition","parameters":{"id":6512,"nodeType":"ParameterList","parameters":[],"src":"4405:2:9"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6591,"src":"4429:15:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_memory_ptr_$dyn_memory_ptr","typeString":"struct Database.Tender[]"},"typeName":{"baseType":{"id":6514,"nodeType":"UserDefinedTypeName","pathNode":{"id":6513,"name":"Tender","nameLocations":["4429:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":6159,"src":"4429:6:9"},"referencedDeclaration":6159,"src":"4429:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$6159_storage_ptr","typeString":"struct Database.Tender"}},"id":6515,"nodeType":"ArrayTypeName","src":"4429:8:9","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Tender_$6159_storage_$dyn_storage_ptr","typeString":"struct Database.Tender[]"}},"visibility":"internal"}],"src":"4428:17:9"},"scope":6592,"src":"4380:552:9","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":6593,"src":"163:4771:9","usedErrors":[13,18],"usedEvents":[24,6201,6209,6217,6225]}],"src":"32:4903:9"},"id":9},"src/contracts/OfficerManagement.sol":{"ast":{"absolutePath":"src/contracts/OfficerManagement.sol","exportedSymbols":{"OfficerManagement":[7061]},"id":7062,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6594,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"OfficerManagement","contractDependencies":[],"contractKind":"contract","documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"57:106:10","text":" @title OfficerManagement\n @dev Contract for managing tender officers in the TrustChain system"},"fullyImplemented":true,"id":7061,"linearizedBaseContracts":[7061],"name":"OfficerManagement","nameLocation":"173:17:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f851a440","id":6597,"mutability":"mutable","name":"admin","nameLocation":"212:5:10","nodeType":"VariableDeclaration","scope":7061,"src":"197:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6596,"name":"address","nodeType":"ElementaryTypeName","src":"197:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"OfficerManagement.Officer","id":6610,"members":[{"constant":false,"id":6599,"mutability":"mutable","name":"id","nameLocation":"260:2:10","nodeType":"VariableDeclaration","scope":6610,"src":"253:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6598,"name":"string","nodeType":"ElementaryTypeName","src":"253:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6601,"mutability":"mutable","name":"name","nameLocation":"279:4:10","nodeType":"VariableDeclaration","scope":6610,"src":"272:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6600,"name":"string","nodeType":"ElementaryTypeName","src":"272:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6603,"mutability":"mutable","name":"username","nameLocation":"300:8:10","nodeType":"VariableDeclaration","scope":6610,"src":"293:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6602,"name":"string","nodeType":"ElementaryTypeName","src":"293:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6605,"mutability":"mutable","name":"email","nameLocation":"325:5:10","nodeType":"VariableDeclaration","scope":6610,"src":"318:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6604,"name":"string","nodeType":"ElementaryTypeName","src":"318:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6607,"mutability":"mutable","name":"isActive","nameLocation":"345:8:10","nodeType":"VariableDeclaration","scope":6610,"src":"340:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6606,"name":"bool","nodeType":"ElementaryTypeName","src":"340:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6609,"mutability":"mutable","name":"createdAt","nameLocation":"371:9:10","nodeType":"VariableDeclaration","scope":6610,"src":"363:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6608,"name":"uint256","nodeType":"ElementaryTypeName","src":"363:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Officer","nameLocation":"235:7:10","nodeType":"StructDefinition","scope":7061,"src":"228:159:10","visibility":"public"},{"constant":false,"functionSelector":"084866dd","id":6615,"mutability":"mutable","name":"officers","nameLocation":"483:8:10","nodeType":"VariableDeclaration","scope":7061,"src":"448:43:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer)"},"typeName":{"id":6614,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6611,"name":"address","nodeType":"ElementaryTypeName","src":"456:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"448:27:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6613,"nodeType":"UserDefinedTypeName","pathNode":{"id":6612,"name":"Officer","nameLocations":["467:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":6610,"src":"467:7:10"},"referencedDeclaration":6610,"src":"467:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage_ptr","typeString":"struct OfficerManagement.Officer"}}},"visibility":"public"},{"constant":false,"functionSelector":"04e82d29","id":6618,"mutability":"mutable","name":"officerAddresses","nameLocation":"579:16:10","nodeType":"VariableDeclaration","scope":7061,"src":"562:33:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":6616,"name":"address","nodeType":"ElementaryTypeName","src":"562:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6617,"nodeType":"ArrayTypeName","src":"562:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"f309e3f9","id":6622,"mutability":"mutable","name":"usernameExists","nameLocation":"705:14:10","nodeType":"VariableDeclaration","scope":7061,"src":"674:45:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":6621,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6619,"name":"string","nodeType":"ElementaryTypeName","src":"682:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"674:23:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6620,"name":"bool","nodeType":"ElementaryTypeName","src":"692:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"c5d1941eae357372bc3eacc7d6f759f515b8152b4d592a813c31368e8737e52f","id":6632,"name":"OfficerAdded","nameLocation":"750:12:10","nodeType":"EventDefinition","parameters":{"id":6631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6624,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"779:13:10","nodeType":"VariableDeclaration","scope":6632,"src":"763:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6623,"name":"address","nodeType":"ElementaryTypeName","src":"763:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6626,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"801:2:10","nodeType":"VariableDeclaration","scope":6632,"src":"794:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6625,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6628,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"812:4:10","nodeType":"VariableDeclaration","scope":6632,"src":"805:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6627,"name":"string","nodeType":"ElementaryTypeName","src":"805:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6630,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"825:8:10","nodeType":"VariableDeclaration","scope":6632,"src":"818:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6629,"name":"string","nodeType":"ElementaryTypeName","src":"818:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"762:72:10"},"src":"744:91:10"},{"anonymous":false,"eventSelector":"2ba41e3e50dd5d36d00a4b9bab6324ef9fae734dc40398301b8503405fff600c","id":6640,"name":"OfficerUpdated","nameLocation":"846:14:10","nodeType":"EventDefinition","parameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"877:13:10","nodeType":"VariableDeclaration","scope":6640,"src":"861:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6633,"name":"address","nodeType":"ElementaryTypeName","src":"861:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6636,"indexed":false,"mutability":"mutable","name":"name","nameLocation":"899:4:10","nodeType":"VariableDeclaration","scope":6640,"src":"892:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6635,"name":"string","nodeType":"ElementaryTypeName","src":"892:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6638,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"912:8:10","nodeType":"VariableDeclaration","scope":6640,"src":"905:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6637,"name":"string","nodeType":"ElementaryTypeName","src":"905:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"860:61:10"},"src":"840:82:10"},{"anonymous":false,"eventSelector":"814bf979c9f7f89608ec350a486866636ec790bbda23eda1ad00da146cd62ecb","id":6646,"name":"OfficerRemoved","nameLocation":"933:14:10","nodeType":"EventDefinition","parameters":{"id":6645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6642,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"964:13:10","nodeType":"VariableDeclaration","scope":6646,"src":"948:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6641,"name":"address","nodeType":"ElementaryTypeName","src":"948:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6644,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"986:2:10","nodeType":"VariableDeclaration","scope":6646,"src":"979:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6643,"name":"string","nodeType":"ElementaryTypeName","src":"979:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"947:42:10"},"src":"927:63:10"},{"anonymous":false,"eventSelector":"8a40ef3e42980aa96509d3e2e04b0c037f32d7251181d8843c0cb9b3378c99df","id":6652,"name":"OfficerStatusChanged","nameLocation":"1001:20:10","nodeType":"EventDefinition","parameters":{"id":6651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"1038:13:10","nodeType":"VariableDeclaration","scope":6652,"src":"1022:29:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6647,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6650,"indexed":false,"mutability":"mutable","name":"isActive","nameLocation":"1058:8:10","nodeType":"VariableDeclaration","scope":6652,"src":"1053:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6649,"name":"bool","nodeType":"ElementaryTypeName","src":"1053:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1021:46:10"},"src":"995:73:10"},{"body":{"id":6663,"nodeType":"Block","src":"1116:93:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6655,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1134:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1138:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1134:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6657,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"1148:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1134:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e","id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1155:35:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""},"value":"Only admin can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""}],"id":6654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1126:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1126:65:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6661,"nodeType":"ExpressionStatement","src":"1126:65:10"},{"id":6662,"nodeType":"PlaceholderStatement","src":"1201:1:10"}]},"id":6664,"name":"onlyAdmin","nameLocation":"1104:9:10","nodeType":"ModifierDefinition","parameters":{"id":6653,"nodeType":"ParameterList","parameters":[],"src":"1113:2:10"},"src":"1095:114:10","virtual":false,"visibility":"internal"},{"body":{"id":6683,"nodeType":"Block","src":"1265:107:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6671,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"1289:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6673,"indexExpression":{"id":6672,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"1298:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1289:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1313:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":6599,"src":"1289:26:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1283:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6669,"name":"bytes","nodeType":"ElementaryTypeName","src":"1283:5:10","typeDescriptions":{}}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1283:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1317:6:10","memberName":"length","nodeType":"MemberAccess","src":"1283:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1326:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1283:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f66666963657220646f6573206e6f74206578697374","id":6679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1329:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa9f024bb61265f0cad48af90fcaf040b090f9a054339c5a13c926d65ff43517","typeString":"literal_string \"Officer does not exist\""},"value":"Officer does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_aa9f024bb61265f0cad48af90fcaf040b090f9a054339c5a13c926d65ff43517","typeString":"literal_string \"Officer does not exist\""}],"id":6668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1275:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1275:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6681,"nodeType":"ExpressionStatement","src":"1275:79:10"},{"id":6682,"nodeType":"PlaceholderStatement","src":"1364:1:10"}]},"id":6684,"name":"officerExists","nameLocation":"1228:13:10","nodeType":"ModifierDefinition","parameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6666,"mutability":"mutable","name":"walletAddress","nameLocation":"1250:13:10","nodeType":"VariableDeclaration","scope":6684,"src":"1242:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6665,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1241:23:10"},"src":"1219:153:10","virtual":false,"visibility":"internal"},{"body":{"id":6692,"nodeType":"Block","src":"1396:35:10","statements":[{"expression":{"id":6690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6687,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"1406:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6688,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1414:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1418:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1414:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1406:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6691,"nodeType":"ExpressionStatement","src":"1406:18:10"}]},"id":6693,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6685,"nodeType":"ParameterList","parameters":[],"src":"1393:2:10"},"returnParameters":{"id":6686,"nodeType":"ParameterList","parameters":[],"src":"1396:0:10"},"scope":7061,"src":"1382:49:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6764,"nodeType":"Block","src":"1896:586:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":6712,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"1920:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6714,"indexExpression":{"id":6713,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"1929:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1920:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1944:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":6599,"src":"1920:26:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":6711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6710,"name":"bytes","nodeType":"ElementaryTypeName","src":"1914:5:10","typeDescriptions":{}}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1948:6:10","memberName":"length","nodeType":"MemberAccess","src":"1914:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1958:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1914:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f66666963657220616c72656164792065786973747320666f7220746869732061646472657373","id":6720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1961:41:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1eb079d776b146e9233537caeec89d2cf5c29ee73537c072659041ab8402b845","typeString":"literal_string \"Officer already exists for this address\""},"value":"Officer already exists for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1eb079d776b146e9233537caeec89d2cf5c29ee73537c072659041ab8402b845","typeString":"literal_string \"Officer already exists for this address\""}],"id":6709,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1906:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1906:97:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6722,"nodeType":"ExpressionStatement","src":"1906:97:10"},{"expression":{"arguments":[{"id":6727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2021:25:10","subExpression":{"baseExpression":{"id":6724,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"2022:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6726,"indexExpression":{"id":6725,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"2037:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2022:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365726e616d6520616c726561647920657869737473","id":6728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2048:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""},"value":"Username already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""}],"id":6723,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2013:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2013:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6730,"nodeType":"ExpressionStatement","src":"2013:61:10"},{"expression":{"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6731,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"2093:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6733,"indexExpression":{"id":6732,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"2102:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2093:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6735,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"2145:2:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6736,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"2167:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6737,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"2195:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6738,"name":"email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"2224:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":6739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2253:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"id":6740,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2282:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2288:9:10","memberName":"timestamp","nodeType":"MemberAccess","src":"2282:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6734,"name":"Officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6610,"src":"2119:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Officer_$6610_storage_ptr_$","typeString":"type(struct OfficerManagement.Officer storage pointer)"}},"id":6742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2141:2:10","2161:4:10","2185:8:10","2217:5:10","2243:8:10","2271:9:10"],"names":["id","name","username","email","isActive","createdAt"],"nodeType":"FunctionCall","src":"2119:189:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer memory"}},"src":"2093:215:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6744,"nodeType":"ExpressionStatement","src":"2093:215:10"},{"expression":{"arguments":[{"id":6748,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"2349:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":6745,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"2327:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2344:4:10","memberName":"push","nodeType":"MemberAccess","src":"2327:21:10","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2327:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6750,"nodeType":"ExpressionStatement","src":"2327:36:10"},{"expression":{"id":6755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6751,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"2373:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6753,"indexExpression":{"id":6752,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"2388:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2373:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2400:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2373:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6756,"nodeType":"ExpressionStatement","src":"2373:31:10"},{"eventCall":{"arguments":[{"id":6758,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6696,"src":"2441:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6759,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"2456:2:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6760,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6700,"src":"2460:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6761,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"2466:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6757,"name":"OfficerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6632,"src":"2428:12:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory,string memory)"}},"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6763,"nodeType":"EmitStatement","src":"2423:52:10"}]},"documentation":{"id":6694,"nodeType":"StructuredDocumentation","src":"1441:261:10","text":" @dev Add a new officer\n @param walletAddress The officer's wallet address\n @param id Unique identifier for the officer\n @param name Officer's name\n @param username Officer's username\n @param email Officer's email"},"functionSelector":"728576d1","id":6765,"implemented":true,"kind":"function","modifiers":[{"id":6707,"kind":"modifierInvocation","modifierName":{"id":6706,"name":"onlyAdmin","nameLocations":["1886:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":6664,"src":"1886:9:10"},"nodeType":"ModifierInvocation","src":"1886:9:10"}],"name":"addOfficer","nameLocation":"1716:10:10","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6696,"mutability":"mutable","name":"walletAddress","nameLocation":"1744:13:10","nodeType":"VariableDeclaration","scope":6765,"src":"1736:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6695,"name":"address","nodeType":"ElementaryTypeName","src":"1736:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6698,"mutability":"mutable","name":"id","nameLocation":"1781:2:10","nodeType":"VariableDeclaration","scope":6765,"src":"1767:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6697,"name":"string","nodeType":"ElementaryTypeName","src":"1767:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6700,"mutability":"mutable","name":"name","nameLocation":"1807:4:10","nodeType":"VariableDeclaration","scope":6765,"src":"1793:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6699,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6702,"mutability":"mutable","name":"username","nameLocation":"1835:8:10","nodeType":"VariableDeclaration","scope":6765,"src":"1821:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6701,"name":"string","nodeType":"ElementaryTypeName","src":"1821:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6704,"mutability":"mutable","name":"email","nameLocation":"1867:5:10","nodeType":"VariableDeclaration","scope":6765,"src":"1853:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6703,"name":"string","nodeType":"ElementaryTypeName","src":"1853:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:152:10"},"returnParameters":{"id":6708,"nodeType":"ParameterList","parameters":[],"src":"1896:0:10"},"scope":7061,"src":"1707:775:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6851,"nodeType":"Block","src":"2903:645:10","statements":[{"assignments":[6783],"declarations":[{"constant":false,"id":6783,"mutability":"mutable","name":"currentUsername","nameLocation":"2927:15:10","nodeType":"VariableDeclaration","scope":6851,"src":"2913:29:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6782,"name":"string","nodeType":"ElementaryTypeName","src":"2913:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6788,"initialValue":{"expression":{"baseExpression":{"id":6784,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"2945:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6786,"indexExpression":{"id":6785,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"2954:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2945:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2969:8:10","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"2945:32:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2913:64:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":6792,"name":"currentUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"3086:15:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3080:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6790,"name":"bytes","nodeType":"ElementaryTypeName","src":"3080:5:10","typeDescriptions":{}}},"id":6793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3080:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6789,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3070:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"id":6798,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"3123:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3117:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6796,"name":"bytes","nodeType":"ElementaryTypeName","src":"3117:5:10","typeDescriptions":{}}},"id":6799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3117:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6795,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3107:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3107:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3070:63:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6823,"nodeType":"IfStatement","src":"3066:253:10","trueBody":{"id":6822,"nodeType":"Block","src":"3135:184:10","statements":[{"expression":{"arguments":[{"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3157:25:10","subExpression":{"baseExpression":{"id":6803,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"3158:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6805,"indexExpression":{"id":6804,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"3173:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3158:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365726e616d6520616c726561647920657869737473","id":6807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3184:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""},"value":"Username already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""}],"id":6802,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3149:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3149:61:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6809,"nodeType":"ExpressionStatement","src":"3149:61:10"},{"expression":{"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6810,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"3224:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6812,"indexExpression":{"id":6811,"name":"currentUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6783,"src":"3239:15:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3224:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3258:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3224:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6815,"nodeType":"ExpressionStatement","src":"3224:39:10"},{"expression":{"id":6820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6816,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"3277:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6818,"indexExpression":{"id":6817,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"3292:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3277:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3304:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3277:31:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6821,"nodeType":"ExpressionStatement","src":"3277:31:10"}]}},{"expression":{"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6824,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"3337:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6826,"indexExpression":{"id":6825,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"3346:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3337:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3361:4:10","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6601,"src":"3337:28:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6828,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"3368:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3337:35:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6830,"nodeType":"ExpressionStatement","src":"3337:35:10"},{"expression":{"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6831,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"3382:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6833,"indexExpression":{"id":6832,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"3391:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3382:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3406:8:10","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"3382:32:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6835,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"3417:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3382:43:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6837,"nodeType":"ExpressionStatement","src":"3382:43:10"},{"expression":{"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6838,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"3435:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6840,"indexExpression":{"id":6839,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"3444:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3435:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3459:5:10","memberName":"email","nodeType":"MemberAccess","referencedDeclaration":6605,"src":"3435:29:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6842,"name":"email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3467:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3435:37:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6844,"nodeType":"ExpressionStatement","src":"3435:37:10"},{"eventCall":{"arguments":[{"id":6846,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"3511:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6847,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"3526:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6848,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6772,"src":"3532:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6845,"name":"OfficerUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"3496:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory)"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6850,"nodeType":"EmitStatement","src":"3491:50:10"}]},"documentation":{"id":6766,"nodeType":"StructuredDocumentation","src":"2492:211:10","text":" @dev Update an existing officer's details\n @param walletAddress The officer's wallet address\n @param name New name\n @param username New username\n @param email New email"},"functionSelector":"9e8d7f54","id":6852,"implemented":true,"kind":"function","modifiers":[{"id":6777,"kind":"modifierInvocation","modifierName":{"id":6776,"name":"onlyAdmin","nameLocations":["2864:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":6664,"src":"2864:9:10"},"nodeType":"ModifierInvocation","src":"2864:9:10"},{"arguments":[{"id":6779,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"2888:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6780,"kind":"modifierInvocation","modifierName":{"id":6778,"name":"officerExists","nameLocations":["2874:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":6684,"src":"2874:13:10"},"nodeType":"ModifierInvocation","src":"2874:28:10"}],"name":"updateOfficer","nameLocation":"2717:13:10","nodeType":"FunctionDefinition","parameters":{"id":6775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"walletAddress","nameLocation":"2748:13:10","nodeType":"VariableDeclaration","scope":6852,"src":"2740:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6767,"name":"address","nodeType":"ElementaryTypeName","src":"2740:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6770,"mutability":"mutable","name":"name","nameLocation":"2785:4:10","nodeType":"VariableDeclaration","scope":6852,"src":"2771:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6769,"name":"string","nodeType":"ElementaryTypeName","src":"2771:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6772,"mutability":"mutable","name":"username","nameLocation":"2813:8:10","nodeType":"VariableDeclaration","scope":6852,"src":"2799:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6771,"name":"string","nodeType":"ElementaryTypeName","src":"2799:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6774,"mutability":"mutable","name":"email","nameLocation":"2845:5:10","nodeType":"VariableDeclaration","scope":6852,"src":"2831:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6773,"name":"string","nodeType":"ElementaryTypeName","src":"2831:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2730:126:10"},"returnParameters":{"id":6781,"nodeType":"ParameterList","parameters":[],"src":"2903:0:10"},"scope":7061,"src":"2708:840:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6930,"nodeType":"Block","src":"3753:751:10","statements":[{"assignments":[6864],"declarations":[{"constant":false,"id":6864,"mutability":"mutable","name":"username","nameLocation":"3777:8:10","nodeType":"VariableDeclaration","scope":6930,"src":"3763:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6863,"name":"string","nodeType":"ElementaryTypeName","src":"3763:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6869,"initialValue":{"expression":{"baseExpression":{"id":6865,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"3788:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6867,"indexExpression":{"id":6866,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"3797:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3788:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3812:8:10","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"3788:32:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3763:57:10"},{"assignments":[6871],"declarations":[{"constant":false,"id":6871,"mutability":"mutable","name":"id","nameLocation":"3844:2:10","nodeType":"VariableDeclaration","scope":6930,"src":"3830:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6870,"name":"string","nodeType":"ElementaryTypeName","src":"3830:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":6876,"initialValue":{"expression":{"baseExpression":{"id":6872,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"3849:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6874,"indexExpression":{"id":6873,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"3858:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3849:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3873:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":6599,"src":"3849:26:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3830:45:10"},{"expression":{"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6877,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"3934:14:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":6879,"indexExpression":{"id":6878,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"3949:8:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3934:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3961:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3934:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6882,"nodeType":"ExpressionStatement","src":"3934:32:10"},{"body":{"id":6918,"nodeType":"Block","src":"4075:286:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6894,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"4093:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6896,"indexExpression":{"id":6895,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"4110:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4093:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6897,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"4116:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4093:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6917,"nodeType":"IfStatement","src":"4089:262:10","trueBody":{"id":6916,"nodeType":"Block","src":"4131:220:10","statements":[{"expression":{"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6899,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"4206:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6901,"indexExpression":{"id":6900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"4223:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4206:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":6902,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"4228:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6907,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6903,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"4245:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4262:6:10","memberName":"length","nodeType":"MemberAccess","src":"4245:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4271:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4245:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4228:45:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4206:67:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6909,"nodeType":"ExpressionStatement","src":"4206:67:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6910,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"4291:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4308:3:10","memberName":"pop","nodeType":"MemberAccess","src":"4291:20:10","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6914,"nodeType":"ExpressionStatement","src":"4291:22:10"},{"id":6915,"nodeType":"Break","src":"4331:5:10"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"4041:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6888,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"4045:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4062:6:10","memberName":"length","nodeType":"MemberAccess","src":"4045:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4041:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6919,"initializationExpression":{"assignments":[6884],"declarations":[{"constant":false,"id":6884,"mutability":"mutable","name":"i","nameLocation":"4034:1:10","nodeType":"VariableDeclaration","scope":6919,"src":"4029:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6883,"name":"uint","nodeType":"ElementaryTypeName","src":"4029:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6886,"initialValue":{"hexValue":"30","id":6885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4029:10:10"},"loopExpression":{"expression":{"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4070:3:10","subExpression":{"id":6891,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6884,"src":"4070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6893,"nodeType":"ExpressionStatement","src":"4070:3:10"},"nodeType":"ForStatement","src":"4024:337:10"},{"expression":{"id":6923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4410:30:10","subExpression":{"baseExpression":{"id":6920,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"4417:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6922,"indexExpression":{"id":6921,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"4426:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4417:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6924,"nodeType":"ExpressionStatement","src":"4410:30:10"},{"eventCall":{"arguments":[{"id":6926,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"4479:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6927,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"4494:2:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6925,"name":"OfficerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"4464:14:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4464:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6929,"nodeType":"EmitStatement","src":"4459:38:10"}]},"documentation":{"id":6853,"nodeType":"StructuredDocumentation","src":"3558:98:10","text":" @dev Remove an officer\n @param walletAddress The officer's wallet address"},"functionSelector":"719a0f8c","id":6931,"implemented":true,"kind":"function","modifiers":[{"id":6858,"kind":"modifierInvocation","modifierName":{"id":6857,"name":"onlyAdmin","nameLocations":["3714:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":6664,"src":"3714:9:10"},"nodeType":"ModifierInvocation","src":"3714:9:10"},{"arguments":[{"id":6860,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6855,"src":"3738:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6861,"kind":"modifierInvocation","modifierName":{"id":6859,"name":"officerExists","nameLocations":["3724:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":6684,"src":"3724:13:10"},"nodeType":"ModifierInvocation","src":"3724:28:10"}],"name":"removeOfficer","nameLocation":"3670:13:10","nodeType":"FunctionDefinition","parameters":{"id":6856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6855,"mutability":"mutable","name":"walletAddress","nameLocation":"3692:13:10","nodeType":"VariableDeclaration","scope":6931,"src":"3684:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6854,"name":"address","nodeType":"ElementaryTypeName","src":"3684:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3683:23:10"},"returnParameters":{"id":6862,"nodeType":"ParameterList","parameters":[],"src":"3753:0:10"},"scope":7061,"src":"3661:843:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6956,"nodeType":"Block","src":"4779:120:10","statements":[{"expression":{"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6944,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"4789:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6946,"indexExpression":{"id":6945,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"4798:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4789:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":6947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4813:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6607,"src":"4789:32:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6948,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"4824:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4789:43:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6950,"nodeType":"ExpressionStatement","src":"4789:43:10"},{"eventCall":{"arguments":[{"id":6952,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"4868:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6953,"name":"isActive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6936,"src":"4883:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6951,"name":"OfficerStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"4847:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$","typeString":"function (address,bool)"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4847:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6955,"nodeType":"EmitStatement","src":"4842:50:10"}]},"documentation":{"id":6932,"nodeType":"StructuredDocumentation","src":"4514:150:10","text":" @dev Change officer active status\n @param walletAddress The officer's wallet address\n @param isActive New active status"},"functionSelector":"bf9cf4cf","id":6957,"implemented":true,"kind":"function","modifiers":[{"id":6939,"kind":"modifierInvocation","modifierName":{"id":6938,"name":"onlyAdmin","nameLocations":["4740:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":6664,"src":"4740:9:10"},"nodeType":"ModifierInvocation","src":"4740:9:10"},{"arguments":[{"id":6941,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6934,"src":"4764:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6942,"kind":"modifierInvocation","modifierName":{"id":6940,"name":"officerExists","nameLocations":["4750:13:10"],"nodeType":"IdentifierPath","referencedDeclaration":6684,"src":"4750:13:10"},"nodeType":"ModifierInvocation","src":"4750:28:10"}],"name":"setOfficerStatus","nameLocation":"4678:16:10","nodeType":"FunctionDefinition","parameters":{"id":6937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6934,"mutability":"mutable","name":"walletAddress","nameLocation":"4703:13:10","nodeType":"VariableDeclaration","scope":6957,"src":"4695:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6933,"name":"address","nodeType":"ElementaryTypeName","src":"4695:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6936,"mutability":"mutable","name":"isActive","nameLocation":"4723:8:10","nodeType":"VariableDeclaration","scope":6957,"src":"4718:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6935,"name":"bool","nodeType":"ElementaryTypeName","src":"4718:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4694:38:10"},"returnParameters":{"id":6943,"nodeType":"ParameterList","parameters":[],"src":"4779:0:10"},"scope":7061,"src":"4669:230:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6996,"nodeType":"Block","src":"5485:260:10","statements":[{"assignments":[6977],"declarations":[{"constant":false,"id":6977,"mutability":"mutable","name":"officer","nameLocation":"5510:7:10","nodeType":"VariableDeclaration","scope":6996,"src":"5495:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer"},"typeName":{"id":6976,"nodeType":"UserDefinedTypeName","pathNode":{"id":6975,"name":"Officer","nameLocations":["5495:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":6610,"src":"5495:7:10"},"referencedDeclaration":6610,"src":"5495:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage_ptr","typeString":"struct OfficerManagement.Officer"}},"visibility":"internal"}],"id":6981,"initialValue":{"baseExpression":{"id":6978,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"5520:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":6980,"indexExpression":{"id":6979,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"5529:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5520:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5495:48:10"},{"expression":{"components":[{"expression":{"id":6982,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5574:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer memory"}},"id":6983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5582:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":6599,"src":"5574:10:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6984,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5598:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer memory"}},"id":6985,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5606:4:10","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":6601,"src":"5598:12:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6986,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5624:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer memory"}},"id":6987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5632:8:10","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":6603,"src":"5624:16:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6988,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5654:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer memory"}},"id":6989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5662:5:10","memberName":"email","nodeType":"MemberAccess","referencedDeclaration":6605,"src":"5654:13:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":6990,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5681:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer memory"}},"id":6991,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5689:8:10","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":6607,"src":"5681:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6992,"name":"officer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6977,"src":"5711:7:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_memory_ptr","typeString":"struct OfficerManagement.Officer memory"}},"id":6993,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5719:9:10","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":6609,"src":"5711:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5560:178:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$","typeString":"tuple(string memory,string memory,string memory,string memory,bool,uint256)"}},"functionReturnParameters":6974,"id":6995,"nodeType":"Return","src":"5553:185:10"}]},"documentation":{"id":6958,"nodeType":"StructuredDocumentation","src":"4909:336:10","text":" @dev Get officer details\n @param walletAddress The officer's wallet address\n @return id Officer ID\n @return name Officer name\n @return username Officer username\n @return email Officer email\n @return isActive Officer active status\n @return createdAt Officer creation timestamp"},"functionSelector":"1e572c0f","id":6997,"implemented":true,"kind":"function","modifiers":[],"name":"getOfficer","nameLocation":"5259:10:10","nodeType":"FunctionDefinition","parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"walletAddress","nameLocation":"5278:13:10","nodeType":"VariableDeclaration","scope":6997,"src":"5270:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6959,"name":"address","nodeType":"ElementaryTypeName","src":"5270:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5269:23:10"},"returnParameters":{"id":6974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6963,"mutability":"mutable","name":"id","nameLocation":"5337:2:10","nodeType":"VariableDeclaration","scope":6997,"src":"5323:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6962,"name":"string","nodeType":"ElementaryTypeName","src":"5323:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6965,"mutability":"mutable","name":"name","nameLocation":"5363:4:10","nodeType":"VariableDeclaration","scope":6997,"src":"5349:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6964,"name":"string","nodeType":"ElementaryTypeName","src":"5349:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6967,"mutability":"mutable","name":"username","nameLocation":"5391:8:10","nodeType":"VariableDeclaration","scope":6997,"src":"5377:22:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6966,"name":"string","nodeType":"ElementaryTypeName","src":"5377:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6969,"mutability":"mutable","name":"email","nameLocation":"5423:5:10","nodeType":"VariableDeclaration","scope":6997,"src":"5409:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6968,"name":"string","nodeType":"ElementaryTypeName","src":"5409:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6971,"mutability":"mutable","name":"isActive","nameLocation":"5443:8:10","nodeType":"VariableDeclaration","scope":6997,"src":"5438:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6970,"name":"bool","nodeType":"ElementaryTypeName","src":"5438:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6973,"mutability":"mutable","name":"createdAt","nameLocation":"5469:9:10","nodeType":"VariableDeclaration","scope":6997,"src":"5461:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6972,"name":"uint256","nodeType":"ElementaryTypeName","src":"5461:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5313:171:10"},"scope":7061,"src":"5250:495:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7016,"nodeType":"Block","src":"5991:68:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":7007,"name":"officers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"6014:8:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Officer_$6610_storage_$","typeString":"mapping(address => struct OfficerManagement.Officer storage ref)"}},"id":7009,"indexExpression":{"id":7008,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"6023:13:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6014:23:10","typeDescriptions":{"typeIdentifier":"t_struct$_Officer_$6610_storage","typeString":"struct OfficerManagement.Officer storage ref"}},"id":7010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6038:2:10","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":6599,"src":"6014:26:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":7006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6008:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7005,"name":"bytes","nodeType":"ElementaryTypeName","src":"6008:5:10","typeDescriptions":{}}},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6008:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6042:6:10","memberName":"length","nodeType":"MemberAccess","src":"6008:40:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6051:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6008:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7004,"id":7015,"nodeType":"Return","src":"6001:51:10"}]},"documentation":{"id":6998,"nodeType":"StructuredDocumentation","src":"5755:162:10","text":" @dev Check if an address is an officer\n @param walletAddress The wallet address to check\n @return true if the address is an officer"},"functionSelector":"6816442d","id":7017,"implemented":true,"kind":"function","modifiers":[],"name":"isOfficer","nameLocation":"5931:9:10","nodeType":"FunctionDefinition","parameters":{"id":7001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7000,"mutability":"mutable","name":"walletAddress","nameLocation":"5949:13:10","nodeType":"VariableDeclaration","scope":7017,"src":"5941:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6999,"name":"address","nodeType":"ElementaryTypeName","src":"5941:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5940:23:10"},"returnParameters":{"id":7004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7017,"src":"5985:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7002,"name":"bool","nodeType":"ElementaryTypeName","src":"5985:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5984:6:10"},"scope":7061,"src":"5922:137:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7026,"nodeType":"Block","src":"6225:47:10","statements":[{"expression":{"expression":{"id":7023,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"6242:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6259:6:10","memberName":"length","nodeType":"MemberAccess","src":"6242:23:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7022,"id":7025,"nodeType":"Return","src":"6235:30:10"}]},"documentation":{"id":7018,"nodeType":"StructuredDocumentation","src":"6069:94:10","text":" @dev Get the total number of officers\n @return The number of officers"},"functionSelector":"e935a2f5","id":7027,"implemented":true,"kind":"function","modifiers":[],"name":"getOfficerCount","nameLocation":"6177:15:10","nodeType":"FunctionDefinition","parameters":{"id":7019,"nodeType":"ParameterList","parameters":[],"src":"6192:2:10"},"returnParameters":{"id":7022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7021,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7027,"src":"6216:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7020,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6215:9:10"},"scope":7061,"src":"6168:104:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7036,"nodeType":"Block","src":"6455:40:10","statements":[{"expression":{"id":7034,"name":"officerAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6618,"src":"6472:16:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":7033,"id":7035,"nodeType":"Return","src":"6465:23:10"}]},"documentation":{"id":7028,"nodeType":"StructuredDocumentation","src":"6282:95:10","text":" @dev Get all officer addresses\n @return Array of all officer addresses"},"functionSelector":"06296328","id":7037,"implemented":true,"kind":"function","modifiers":[],"name":"getAllOfficerAddresses","nameLocation":"6391:22:10","nodeType":"FunctionDefinition","parameters":{"id":7029,"nodeType":"ParameterList","parameters":[],"src":"6413:2:10"},"returnParameters":{"id":7033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7037,"src":"6437:16:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7030,"name":"address","nodeType":"ElementaryTypeName","src":"6437:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7031,"nodeType":"ArrayTypeName","src":"6437:9:10","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6436:18:10"},"scope":7061,"src":"6382:113:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7059,"nodeType":"Block","src":"6675:93:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7046,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"6693:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6713:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6705:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7047,"name":"address","nodeType":"ElementaryTypeName","src":"6705:7:10","typeDescriptions":{}}},"id":7050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6705:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6693:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":7052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6717:17:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":7045,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6685:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6685:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7054,"nodeType":"ExpressionStatement","src":"6685:50:10"},{"expression":{"id":7057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7055,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6597,"src":"6745:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7056,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"6753:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6745:16:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7058,"nodeType":"ExpressionStatement","src":"6745:16:10"}]},"documentation":{"id":7038,"nodeType":"StructuredDocumentation","src":"6505:107:10","text":" @dev Transfer admin rights to a new address\n @param newAdmin The new admin address"},"functionSelector":"75829def","id":7060,"implemented":true,"kind":"function","modifiers":[{"id":7043,"kind":"modifierInvocation","modifierName":{"id":7042,"name":"onlyAdmin","nameLocations":["6665:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":6664,"src":"6665:9:10"},"nodeType":"ModifierInvocation","src":"6665:9:10"}],"name":"transferAdmin","nameLocation":"6626:13:10","nodeType":"FunctionDefinition","parameters":{"id":7041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7040,"mutability":"mutable","name":"newAdmin","nameLocation":"6648:8:10","nodeType":"VariableDeclaration","scope":7060,"src":"6640:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7039,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6639:18:10"},"returnParameters":{"id":7044,"nodeType":"ParameterList","parameters":[],"src":"6675:0:10"},"scope":7061,"src":"6617:151:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":7062,"src":"164:6606:10","usedErrors":[],"usedEvents":[6632,6640,6646,6652]}],"src":"32:6739:10"},"id":10},"src/contracts/TenderManagement.sol":{"ast":{"absolutePath":"src/contracts/TenderManagement.sol","exportedSymbols":{"TenderManagement":[8044]},"id":8045,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7063,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"TenderManagement","contractDependencies":[],"contractKind":"contract","documentation":{"id":7064,"nodeType":"StructuredDocumentation","src":"57:97:11","text":" @title TenderManagement\n @dev Contract for managing tenders in the TrustChain system"},"fullyImplemented":true,"id":8044,"linearizedBaseContracts":[8044],"name":"TenderManagement","nameLocation":"164:16:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f851a440","id":7066,"mutability":"mutable","name":"admin","nameLocation":"202:5:11","nodeType":"VariableDeclaration","scope":8044,"src":"187:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7065,"name":"address","nodeType":"ElementaryTypeName","src":"187:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"TenderManagement.Tender","id":7095,"members":[{"constant":false,"id":7068,"mutability":"mutable","name":"id","nameLocation":"249:2:11","nodeType":"VariableDeclaration","scope":7095,"src":"242:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7067,"name":"string","nodeType":"ElementaryTypeName","src":"242:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7070,"mutability":"mutable","name":"title","nameLocation":"268:5:11","nodeType":"VariableDeclaration","scope":7095,"src":"261:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7069,"name":"string","nodeType":"ElementaryTypeName","src":"261:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7072,"mutability":"mutable","name":"description","nameLocation":"290:11:11","nodeType":"VariableDeclaration","scope":7095,"src":"283:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7071,"name":"string","nodeType":"ElementaryTypeName","src":"283:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7074,"mutability":"mutable","name":"estimatedValue","nameLocation":"319:14:11","nodeType":"VariableDeclaration","scope":7095,"src":"311:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7073,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7076,"mutability":"mutable","name":"startDate","nameLocation":"351:9:11","nodeType":"VariableDeclaration","scope":7095,"src":"343:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7075,"name":"uint256","nodeType":"ElementaryTypeName","src":"343:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7078,"mutability":"mutable","name":"endDate","nameLocation":"378:7:11","nodeType":"VariableDeclaration","scope":7095,"src":"370:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7077,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7080,"mutability":"mutable","name":"createdBy","nameLocation":"403:9:11","nodeType":"VariableDeclaration","scope":7095,"src":"395:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7079,"name":"address","nodeType":"ElementaryTypeName","src":"395:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7083,"mutability":"mutable","name":"status","nameLocation":"469:6:11","nodeType":"VariableDeclaration","scope":7095,"src":"456:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"typeName":{"id":7082,"nodeType":"UserDefinedTypeName","pathNode":{"id":7081,"name":"TenderStatus","nameLocations":["456:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7118,"src":"456:12:11"},"referencedDeclaration":7118,"src":"456:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"visibility":"internal"},{"constant":false,"id":7085,"mutability":"mutable","name":"createdAt","nameLocation":"493:9:11","nodeType":"VariableDeclaration","scope":7095,"src":"485:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7084,"name":"uint256","nodeType":"ElementaryTypeName","src":"485:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7087,"mutability":"mutable","name":"category","nameLocation":"519:8:11","nodeType":"VariableDeclaration","scope":7095,"src":"512:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7086,"name":"string","nodeType":"ElementaryTypeName","src":"512:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7089,"mutability":"mutable","name":"department","nameLocation":"544:10:11","nodeType":"VariableDeclaration","scope":7095,"src":"537:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7088,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7091,"mutability":"mutable","name":"location","nameLocation":"571:8:11","nodeType":"VariableDeclaration","scope":7095,"src":"564:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7090,"name":"string","nodeType":"ElementaryTypeName","src":"564:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7094,"mutability":"mutable","name":"documents","nameLocation":"598:9:11","nodeType":"VariableDeclaration","scope":7095,"src":"589:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7092,"name":"string","nodeType":"ElementaryTypeName","src":"589:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7093,"nodeType":"ArrayTypeName","src":"589:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"name":"Tender","nameLocation":"225:6:11","nodeType":"StructDefinition","scope":8044,"src":"218:431:11","visibility":"public"},{"canonicalName":"TenderManagement.Bid","id":7112,"members":[{"constant":false,"id":7097,"mutability":"mutable","name":"id","nameLocation":"687:2:11","nodeType":"VariableDeclaration","scope":7112,"src":"680:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7096,"name":"string","nodeType":"ElementaryTypeName","src":"680:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7099,"mutability":"mutable","name":"tenderId","nameLocation":"706:8:11","nodeType":"VariableDeclaration","scope":7112,"src":"699:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7098,"name":"string","nodeType":"ElementaryTypeName","src":"699:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7101,"mutability":"mutable","name":"bidder","nameLocation":"732:6:11","nodeType":"VariableDeclaration","scope":7112,"src":"724:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7100,"name":"address","nodeType":"ElementaryTypeName","src":"724:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7103,"mutability":"mutable","name":"bidAmount","nameLocation":"756:9:11","nodeType":"VariableDeclaration","scope":7112,"src":"748:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7102,"name":"uint256","nodeType":"ElementaryTypeName","src":"748:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7105,"mutability":"mutable","name":"submittedAt","nameLocation":"783:11:11","nodeType":"VariableDeclaration","scope":7112,"src":"775:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7104,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7108,"mutability":"mutable","name":"status","nameLocation":"814:6:11","nodeType":"VariableDeclaration","scope":7112,"src":"804:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"typeName":{"id":7107,"nodeType":"UserDefinedTypeName","pathNode":{"id":7106,"name":"BidStatus","nameLocations":["804:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7123,"src":"804:9:11"},"referencedDeclaration":7123,"src":"804:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"visibility":"internal"},{"constant":false,"id":7111,"mutability":"mutable","name":"documents","nameLocation":"839:9:11","nodeType":"VariableDeclaration","scope":7112,"src":"830:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7109,"name":"string","nodeType":"ElementaryTypeName","src":"830:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7110,"nodeType":"ArrayTypeName","src":"830:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"name":"Bid","nameLocation":"666:3:11","nodeType":"StructDefinition","scope":8044,"src":"659:228:11","visibility":"public"},{"canonicalName":"TenderManagement.TenderStatus","id":7118,"members":[{"id":7113,"name":"Draft","nameLocation":"917:5:11","nodeType":"EnumValue","src":"917:5:11"},{"id":7114,"name":"Published","nameLocation":"924:9:11","nodeType":"EnumValue","src":"924:9:11"},{"id":7115,"name":"Closed","nameLocation":"935:6:11","nodeType":"EnumValue","src":"935:6:11"},{"id":7116,"name":"Awarded","nameLocation":"943:7:11","nodeType":"EnumValue","src":"943:7:11"},{"id":7117,"name":"Cancelled","nameLocation":"952:9:11","nodeType":"EnumValue","src":"952:9:11"}],"name":"TenderStatus","nameLocation":"902:12:11","nodeType":"EnumDefinition","src":"897:66:11"},{"canonicalName":"TenderManagement.BidStatus","id":7123,"members":[{"id":7119,"name":"Submitted","nameLocation":"985:9:11","nodeType":"EnumValue","src":"985:9:11"},{"id":7120,"name":"Shortlisted","nameLocation":"996:11:11","nodeType":"EnumValue","src":"996:11:11"},{"id":7121,"name":"Rejected","nameLocation":"1009:8:11","nodeType":"EnumValue","src":"1009:8:11"},{"id":7122,"name":"Awarded","nameLocation":"1019:7:11","nodeType":"EnumValue","src":"1019:7:11"}],"name":"BidStatus","nameLocation":"973:9:11","nodeType":"EnumDefinition","src":"968:60:11"},{"constant":false,"functionSelector":"997b737f","id":7128,"mutability":"mutable","name":"tenders","nameLocation":"1116:7:11","nodeType":"VariableDeclaration","scope":8044,"src":"1083:40:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string => struct TenderManagement.Tender)"},"typeName":{"id":7127,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7124,"name":"string","nodeType":"ElementaryTypeName","src":"1091:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1083:25:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string => struct TenderManagement.Tender)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7126,"nodeType":"UserDefinedTypeName","pathNode":{"id":7125,"name":"Tender","nameLocations":["1101:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7095,"src":"1101:6:11"},"referencedDeclaration":7095,"src":"1101:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"}}},"visibility":"public"},{"constant":false,"functionSelector":"39c776b6","id":7131,"mutability":"mutable","name":"tenderIds","nameLocation":"1203:9:11","nodeType":"VariableDeclaration","scope":8044,"src":"1187:25:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":7129,"name":"string","nodeType":"ElementaryTypeName","src":"1187:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7130,"nodeType":"ArrayTypeName","src":"1187:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"public"},{"constant":false,"functionSelector":"9e27af87","id":7136,"mutability":"mutable","name":"bids","nameLocation":"1292:4:11","nodeType":"VariableDeclaration","scope":8044,"src":"1262:34:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string => struct TenderManagement.Bid)"},"typeName":{"id":7135,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7132,"name":"string","nodeType":"ElementaryTypeName","src":"1270:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1262:22:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string => struct TenderManagement.Bid)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7134,"nodeType":"UserDefinedTypeName","pathNode":{"id":7133,"name":"Bid","nameLocations":["1280:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":7112,"src":"1280:3:11"},"referencedDeclaration":7112,"src":"1280:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid"}}},"visibility":"public"},{"constant":false,"functionSelector":"01cc650c","id":7141,"mutability":"mutable","name":"tenderBids","nameLocation":"1399:10:11","nodeType":"VariableDeclaration","scope":8044,"src":"1364:45:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string => string[])"},"typeName":{"id":7140,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7137,"name":"string","nodeType":"ElementaryTypeName","src":"1372:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1364:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string => string[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7138,"name":"string","nodeType":"ElementaryTypeName","src":"1382:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7139,"nodeType":"ArrayTypeName","src":"1382:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"96ec50c3","id":7146,"mutability":"mutable","name":"userBids","nameLocation":"1518:8:11","nodeType":"VariableDeclaration","scope":8044,"src":"1482:44:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"typeName":{"id":7145,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7142,"name":"address","nodeType":"ElementaryTypeName","src":"1490:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1482:28:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":7143,"name":"string","nodeType":"ElementaryTypeName","src":"1501:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7144,"nodeType":"ArrayTypeName","src":"1501:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"0540e31cb45c1b4f21657a7522027a48ff2ec55cd0711035075c1f9e8faad564","id":7154,"name":"TenderCreated","nameLocation":"1557:13:11","nodeType":"EventDefinition","parameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7148,"indexed":false,"mutability":"mutable","name":"tenderId","nameLocation":"1578:8:11","nodeType":"VariableDeclaration","scope":7154,"src":"1571:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7147,"name":"string","nodeType":"ElementaryTypeName","src":"1571:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7150,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"1595:5:11","nodeType":"VariableDeclaration","scope":7154,"src":"1588:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7149,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7152,"indexed":false,"mutability":"mutable","name":"createdBy","nameLocation":"1610:9:11","nodeType":"VariableDeclaration","scope":7154,"src":"1602:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7151,"name":"address","nodeType":"ElementaryTypeName","src":"1602:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1570:50:11"},"src":"1551:70:11"},{"anonymous":false,"eventSelector":"5f33dd4ac582710407cc42c7d955eb11c3db69506e9d3b22f38b6e2af8cd652b","id":7163,"name":"TenderUpdated","nameLocation":"1632:13:11","nodeType":"EventDefinition","parameters":{"id":7162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"indexed":false,"mutability":"mutable","name":"tenderId","nameLocation":"1653:8:11","nodeType":"VariableDeclaration","scope":7163,"src":"1646:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7155,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7158,"indexed":false,"mutability":"mutable","name":"title","nameLocation":"1670:5:11","nodeType":"VariableDeclaration","scope":7163,"src":"1663:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7157,"name":"string","nodeType":"ElementaryTypeName","src":"1663:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7161,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1690:6:11","nodeType":"VariableDeclaration","scope":7163,"src":"1677:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"typeName":{"id":7160,"nodeType":"UserDefinedTypeName","pathNode":{"id":7159,"name":"TenderStatus","nameLocations":["1677:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7118,"src":"1677:12:11"},"referencedDeclaration":7118,"src":"1677:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"visibility":"internal"}],"src":"1645:52:11"},"src":"1626:72:11"},{"anonymous":false,"eventSelector":"162fce656cd34b1fd506c44ef9fd09e7939a5c94a678a14c6055668cdd8aa38e","id":7170,"name":"TenderStatusChanged","nameLocation":"1709:19:11","nodeType":"EventDefinition","parameters":{"id":7169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7165,"indexed":false,"mutability":"mutable","name":"tenderId","nameLocation":"1736:8:11","nodeType":"VariableDeclaration","scope":7170,"src":"1729:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7164,"name":"string","nodeType":"ElementaryTypeName","src":"1729:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7168,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1759:6:11","nodeType":"VariableDeclaration","scope":7170,"src":"1746:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"typeName":{"id":7167,"nodeType":"UserDefinedTypeName","pathNode":{"id":7166,"name":"TenderStatus","nameLocations":["1746:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7118,"src":"1746:12:11"},"referencedDeclaration":7118,"src":"1746:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"visibility":"internal"}],"src":"1728:38:11"},"src":"1703:64:11"},{"anonymous":false,"eventSelector":"589214396aefe501bdb858bb39086111764f18b0ca160c140f42dd4a0009ac91","id":7180,"name":"BidSubmitted","nameLocation":"1778:12:11","nodeType":"EventDefinition","parameters":{"id":7179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"indexed":false,"mutability":"mutable","name":"bidId","nameLocation":"1798:5:11","nodeType":"VariableDeclaration","scope":7180,"src":"1791:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7171,"name":"string","nodeType":"ElementaryTypeName","src":"1791:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7174,"indexed":false,"mutability":"mutable","name":"tenderId","nameLocation":"1812:8:11","nodeType":"VariableDeclaration","scope":7180,"src":"1805:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7173,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7176,"indexed":false,"mutability":"mutable","name":"bidder","nameLocation":"1830:6:11","nodeType":"VariableDeclaration","scope":7180,"src":"1822:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7175,"name":"address","nodeType":"ElementaryTypeName","src":"1822:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7178,"indexed":false,"mutability":"mutable","name":"bidAmount","nameLocation":"1846:9:11","nodeType":"VariableDeclaration","scope":7180,"src":"1838:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7177,"name":"uint256","nodeType":"ElementaryTypeName","src":"1838:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:66:11"},"src":"1772:85:11"},{"anonymous":false,"eventSelector":"6b65c6d5f7b922b9e476d69513675de9e14194d8d07e3497bd427fd695866177","id":7189,"name":"BidStatusChanged","nameLocation":"1868:16:11","nodeType":"EventDefinition","parameters":{"id":7188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"indexed":false,"mutability":"mutable","name":"bidId","nameLocation":"1892:5:11","nodeType":"VariableDeclaration","scope":7189,"src":"1885:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7181,"name":"string","nodeType":"ElementaryTypeName","src":"1885:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7184,"indexed":false,"mutability":"mutable","name":"tenderId","nameLocation":"1906:8:11","nodeType":"VariableDeclaration","scope":7189,"src":"1899:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7183,"name":"string","nodeType":"ElementaryTypeName","src":"1899:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7187,"indexed":false,"mutability":"mutable","name":"status","nameLocation":"1926:6:11","nodeType":"VariableDeclaration","scope":7189,"src":"1916:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"typeName":{"id":7186,"nodeType":"UserDefinedTypeName","pathNode":{"id":7185,"name":"BidStatus","nameLocations":["1916:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7123,"src":"1916:9:11"},"referencedDeclaration":7123,"src":"1916:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"visibility":"internal"}],"src":"1884:49:11"},"src":"1862:72:11"},{"body":{"id":7200,"nodeType":"Block","src":"1982:93:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7192,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2000:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2004:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2000:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7194,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"2014:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2000:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e","id":7196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""},"value":"Only admin can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""}],"id":7191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1992:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1992:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7198,"nodeType":"ExpressionStatement","src":"1992:65:11"},{"id":7199,"nodeType":"PlaceholderStatement","src":"2067:1:11"}]},"id":7201,"name":"onlyAdmin","nameLocation":"1970:9:11","nodeType":"ModifierDefinition","parameters":{"id":7190,"nodeType":"ParameterList","parameters":[],"src":"1979:2:11"},"src":"1961:114:11","virtual":false,"visibility":"internal"},{"body":{"id":7212,"nodeType":"Block","src":"2108:302:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7204,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2332:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2336:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2332:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7206,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"2346:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f666669636572732063616e2063616c6c20746869732066756e6374696f6e","id":7208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ca7e977757cd80cbe50814812941b85d65b07ee71c46b2ddebfaa1f56b10f7b6","typeString":"literal_string \"Only officers can call this function\""},"value":"Only officers can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca7e977757cd80cbe50814812941b85d65b07ee71c46b2ddebfaa1f56b10f7b6","typeString":"literal_string \"Only officers can call this function\""}],"id":7203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:68:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7210,"nodeType":"ExpressionStatement","src":"2324:68:11"},{"id":7211,"nodeType":"PlaceholderStatement","src":"2402:1:11"}]},"id":7213,"name":"onlyOfficer","nameLocation":"2094:11:11","nodeType":"ModifierDefinition","parameters":{"id":7202,"nodeType":"ParameterList","parameters":[],"src":"2105:2:11"},"src":"2085:325:11","virtual":false,"visibility":"internal"},{"body":{"id":7228,"nodeType":"Block","src":"2466:93:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7218,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"2484:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7220,"indexExpression":{"id":7219,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"2492:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2484:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"id":7221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2502:9:11","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":7085,"src":"2484:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2484:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e64657220646f6573206e6f74206578697374","id":7224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2517:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8e4a1ab91e9a83ddfe6077b38275c4c3e6a4bc468b79c5bf13c28b805b2f3ad","typeString":"literal_string \"Tender does not exist\""},"value":"Tender does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c8e4a1ab91e9a83ddfe6077b38275c4c3e6a4bc468b79c5bf13c28b805b2f3ad","typeString":"literal_string \"Tender does not exist\""}],"id":7217,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2476:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2476:65:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7226,"nodeType":"ExpressionStatement","src":"2476:65:11"},{"id":7227,"nodeType":"PlaceholderStatement","src":"2551:1:11"}]},"id":7229,"name":"tenderExists","nameLocation":"2429:12:11","nodeType":"ModifierDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"tenderId","nameLocation":"2456:8:11","nodeType":"VariableDeclaration","scope":7229,"src":"2442:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7214,"name":"string","nodeType":"ElementaryTypeName","src":"2442:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2441:24:11"},"src":"2420:139:11","virtual":false,"visibility":"internal"},{"body":{"id":7244,"nodeType":"Block","src":"2609:86:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7234,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"2627:4:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string memory => struct TenderManagement.Bid storage ref)"}},"id":7236,"indexExpression":{"id":7235,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"2632:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2627:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage","typeString":"struct TenderManagement.Bid storage ref"}},"id":7237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2639:11:11","memberName":"submittedAt","nodeType":"MemberAccess","referencedDeclaration":7105,"src":"2627:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2653:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2627:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420646f6573206e6f74206578697374","id":7240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:20:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_9b008252175809adc965a2027b1c1e66621bf2817fed6a22f353c1a7d116c78c","typeString":"literal_string \"Bid does not exist\""},"value":"Bid does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9b008252175809adc965a2027b1c1e66621bf2817fed6a22f353c1a7d116c78c","typeString":"literal_string \"Bid does not exist\""}],"id":7233,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2619:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2619:58:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7242,"nodeType":"ExpressionStatement","src":"2619:58:11"},{"id":7243,"nodeType":"PlaceholderStatement","src":"2687:1:11"}]},"id":7245,"name":"bidExists","nameLocation":"2578:9:11","nodeType":"ModifierDefinition","parameters":{"id":7232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7231,"mutability":"mutable","name":"bidId","nameLocation":"2602:5:11","nodeType":"VariableDeclaration","scope":7245,"src":"2588:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7230,"name":"string","nodeType":"ElementaryTypeName","src":"2588:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2587:21:11"},"src":"2569:126:11","virtual":false,"visibility":"internal"},{"body":{"id":7253,"nodeType":"Block","src":"2719:35:11","statements":[{"expression":{"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7248,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"2729:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2737:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2741:6:11","memberName":"sender","nodeType":"MemberAccess","src":"2737:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2729:18:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7252,"nodeType":"ExpressionStatement","src":"2729:18:11"}]},"id":7254,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[],"src":"2716:2:11"},"returnParameters":{"id":7247,"nodeType":"ParameterList","parameters":[],"src":"2719:0:11"},"scope":8044,"src":"2705:49:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7334,"nodeType":"Block","src":"3655:775:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7282,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"3673:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7284,"indexExpression":{"id":7283,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"3681:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3673:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"id":7285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3691:9:11","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":7085,"src":"3673:27:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3704:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3673:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e64657220494420616c726561647920657869737473","id":7288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3707:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ccb3437f2412e5cbfc5cb77f082bbb5d8bff6fa079c6d9b11dd78cd7a1e98dd7","typeString":"literal_string \"Tender ID already exists\""},"value":"Tender ID already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ccb3437f2412e5cbfc5cb77f082bbb5d8bff6fa079c6d9b11dd78cd7a1e98dd7","typeString":"literal_string \"Tender ID already exists\""}],"id":7281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:69:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7290,"nodeType":"ExpressionStatement","src":"3665:69:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7292,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"3752:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7293,"name":"endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"3764:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3752:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742064617465206d757374206265206265666f726520656e642064617465","id":7295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3773:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_33f66c55eb8fddd4e272302bad3dd3fef4bbd349c3219272c506763673fc0dd7","typeString":"literal_string \"Start date must be before end date\""},"value":"Start date must be before end date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33f66c55eb8fddd4e272302bad3dd3fef4bbd349c3219272c506763673fc0dd7","typeString":"literal_string \"Start date must be before end date\""}],"id":7291,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3744:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3744:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7297,"nodeType":"ExpressionStatement","src":"3744:66:11"},{"expression":{"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7298,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"3829:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7300,"indexExpression":{"id":7299,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"3837:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3829:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7302,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"3874:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7303,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"3903:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7304,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7261,"src":"3935:11:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7305,"name":"estimatedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7263,"src":"3976:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7306,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7265,"src":"4015:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7307,"name":"endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"4047:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4079:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4083:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4079:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7310,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"4111:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4124:5:11","memberName":"Draft","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"4111:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},{"expression":{"id":7312,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4154:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"4154:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7314,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7269,"src":"4193:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7315,"name":"department","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7271,"src":"4227:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7316,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7273,"src":"4261:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7317,"name":"documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"4294:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":7301,"name":"Tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7095,"src":"3849:6:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Tender_$7095_storage_ptr_$","typeString":"type(struct TenderManagement.Tender storage pointer)"}},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3870:2:11","3896:5:11","3922:11:11","3960:14:11","4004:9:11","4038:7:11","4068:9:11","4103:6:11","4143:9:11","4183:8:11","4215:10:11","4251:8:11","4283:9:11"],"names":["id","title","description","estimatedValue","startDate","endDate","createdBy","status","createdAt","category","department","location","documents"],"nodeType":"FunctionCall","src":"3849:465:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"src":"3829:485:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"id":7320,"nodeType":"ExpressionStatement","src":"3829:485:11"},{"expression":{"arguments":[{"id":7324,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"4348:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7321,"name":"tenderIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"4333:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":7323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4343:4:11","memberName":"push","nodeType":"MemberAccess","src":"4333:14:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":7325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4333:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7326,"nodeType":"ExpressionStatement","src":"4333:24:11"},{"eventCall":{"arguments":[{"id":7328,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7257,"src":"4395:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7329,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7259,"src":"4405:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4412:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4416:6:11","memberName":"sender","nodeType":"MemberAccess","src":"4412:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7327,"name":"TenderCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7154,"src":"4381:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$returns$__$","typeString":"function (string memory,string memory,address)"}},"id":7332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4381:42:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7333,"nodeType":"EmitStatement","src":"4376:47:11"}]},"documentation":{"id":7255,"nodeType":"StructuredDocumentation","src":"2764:526:11","text":" @dev Create a new tender\n @param tenderId Unique identifier for the tender\n @param title Tender title\n @param description Tender description\n @param estimatedValue Estimated value of the tender\n @param startDate Start date of the tender\n @param endDate End date of the tender\n @param category Tender category\n @param department Department issuing the tender\n @param location Location of the tender\n @param documents IPFS hashes of tender documents"},"functionSelector":"7ebd6019","id":7335,"implemented":true,"kind":"function","modifiers":[{"id":7279,"kind":"modifierInvocation","modifierName":{"id":7278,"name":"onlyOfficer","nameLocations":["3643:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":7213,"src":"3643:11:11"},"nodeType":"ModifierInvocation","src":"3643:11:11"}],"name":"createTender","nameLocation":"3304:12:11","nodeType":"FunctionDefinition","parameters":{"id":7277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7257,"mutability":"mutable","name":"tenderId","nameLocation":"3340:8:11","nodeType":"VariableDeclaration","scope":7335,"src":"3326:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7256,"name":"string","nodeType":"ElementaryTypeName","src":"3326:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7259,"mutability":"mutable","name":"title","nameLocation":"3372:5:11","nodeType":"VariableDeclaration","scope":7335,"src":"3358:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7258,"name":"string","nodeType":"ElementaryTypeName","src":"3358:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7261,"mutability":"mutable","name":"description","nameLocation":"3401:11:11","nodeType":"VariableDeclaration","scope":7335,"src":"3387:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7260,"name":"string","nodeType":"ElementaryTypeName","src":"3387:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7263,"mutability":"mutable","name":"estimatedValue","nameLocation":"3430:14:11","nodeType":"VariableDeclaration","scope":7335,"src":"3422:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3422:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7265,"mutability":"mutable","name":"startDate","nameLocation":"3462:9:11","nodeType":"VariableDeclaration","scope":7335,"src":"3454:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3454:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7267,"mutability":"mutable","name":"endDate","nameLocation":"3489:7:11","nodeType":"VariableDeclaration","scope":7335,"src":"3481:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3481:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7269,"mutability":"mutable","name":"category","nameLocation":"3520:8:11","nodeType":"VariableDeclaration","scope":7335,"src":"3506:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7268,"name":"string","nodeType":"ElementaryTypeName","src":"3506:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7271,"mutability":"mutable","name":"department","nameLocation":"3552:10:11","nodeType":"VariableDeclaration","scope":7335,"src":"3538:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7270,"name":"string","nodeType":"ElementaryTypeName","src":"3538:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7273,"mutability":"mutable","name":"location","nameLocation":"3586:8:11","nodeType":"VariableDeclaration","scope":7335,"src":"3572:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7272,"name":"string","nodeType":"ElementaryTypeName","src":"3572:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7276,"mutability":"mutable","name":"documents","nameLocation":"3620:9:11","nodeType":"VariableDeclaration","scope":7335,"src":"3604:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7274,"name":"string","nodeType":"ElementaryTypeName","src":"3604:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7275,"nodeType":"ArrayTypeName","src":"3604:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"3316:319:11"},"returnParameters":{"id":7280,"nodeType":"ParameterList","parameters":[],"src":"3655:0:11"},"scope":8044,"src":"3295:1135:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7463,"nodeType":"Block","src":"5276:916:11","statements":[{"assignments":[7367],"declarations":[{"constant":false,"id":7367,"mutability":"mutable","name":"tender","nameLocation":"5301:6:11","nodeType":"VariableDeclaration","scope":7463,"src":"5286:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"},"typeName":{"id":7366,"nodeType":"UserDefinedTypeName","pathNode":{"id":7365,"name":"Tender","nameLocations":["5286:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7095,"src":"5286:6:11"},"referencedDeclaration":7095,"src":"5286:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"}},"visibility":"internal"}],"id":7371,"initialValue":{"baseExpression":{"id":7368,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"5310:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7370,"indexExpression":{"id":7369,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"5318:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5310:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5286:41:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7373,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5413:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5420:9:11","memberName":"createdBy","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"5413:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7375,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5433:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5437:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5433:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5413:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7378,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5447:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5451:6:11","memberName":"sender","nodeType":"MemberAccess","src":"5447:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7380,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"5461:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5447:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5413:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207468652063726561746f72206f722061646d696e2063616e20757064617465207468652074656e646572","id":7383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5468:49:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_772636c46a5c04b3d123beee81355f47147d83126d4a7023126c48758ca4aaad","typeString":"literal_string \"Only the creator or admin can update the tender\""},"value":"Only the creator or admin can update the tender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_772636c46a5c04b3d123beee81355f47147d83126d4a7023126c48758ca4aaad","typeString":"literal_string \"Only the creator or admin can update the tender\""}],"id":7372,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5405:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:113:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7385,"nodeType":"ExpressionStatement","src":"5405:113:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7387,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5601:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5608:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"5601:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7389,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"5618:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5631:5:11","memberName":"Draft","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"5618:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"5601:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c79207570646174652074656e6465727320696e20447261667420737461747573","id":7392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5638:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1433edb349a3461876c7ee31979150d57a83f490592e5a9d329b5390934480db","typeString":"literal_string \"Can only update tenders in Draft status\""},"value":"Can only update tenders in Draft status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1433edb349a3461876c7ee31979150d57a83f490592e5a9d329b5390934480db","typeString":"literal_string \"Can only update tenders in Draft status\""}],"id":7386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5593:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5593:87:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7394,"nodeType":"ExpressionStatement","src":"5593:87:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7396,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"5707:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7397,"name":"endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"5719:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5707:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742064617465206d757374206265206265666f726520656e642064617465","id":7399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5728:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_33f66c55eb8fddd4e272302bad3dd3fef4bbd349c3219272c506763673fc0dd7","typeString":"literal_string \"Start date must be before end date\""},"value":"Start date must be before end date"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33f66c55eb8fddd4e272302bad3dd3fef4bbd349c3219272c506763673fc0dd7","typeString":"literal_string \"Start date must be before end date\""}],"id":7395,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5699:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5699:66:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7401,"nodeType":"ExpressionStatement","src":"5699:66:11"},{"expression":{"id":7406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7402,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5784:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5791:5:11","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":7070,"src":"5784:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7405,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"5799:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5784:20:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7407,"nodeType":"ExpressionStatement","src":"5784:20:11"},{"expression":{"id":7412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7408,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5814:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5821:11:11","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":7072,"src":"5814:18:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7411,"name":"description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"5835:11:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5814:32:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7413,"nodeType":"ExpressionStatement","src":"5814:32:11"},{"expression":{"id":7418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7414,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5856:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5863:14:11","memberName":"estimatedValue","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"5856:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7417,"name":"estimatedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7344,"src":"5880:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5856:38:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7419,"nodeType":"ExpressionStatement","src":"5856:38:11"},{"expression":{"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7420,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5904:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7422,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5911:9:11","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":7076,"src":"5904:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7423,"name":"startDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"5923:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5904:28:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7425,"nodeType":"ExpressionStatement","src":"5904:28:11"},{"expression":{"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7426,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5942:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5949:7:11","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"5942:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7429,"name":"endDate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"5959:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5942:24:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7431,"nodeType":"ExpressionStatement","src":"5942:24:11"},{"expression":{"id":7436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7432,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"5976:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5983:8:11","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"5976:15:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7435,"name":"category","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7350,"src":"5994:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5976:26:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7437,"nodeType":"ExpressionStatement","src":"5976:26:11"},{"expression":{"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7438,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"6012:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6019:10:11","memberName":"department","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"6012:17:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7441,"name":"department","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7352,"src":"6032:10:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6012:30:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7443,"nodeType":"ExpressionStatement","src":"6012:30:11"},{"expression":{"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7444,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"6052:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7446,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6059:8:11","memberName":"location","nodeType":"MemberAccess","referencedDeclaration":7091,"src":"6052:15:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7447,"name":"location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7354,"src":"6070:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"6052:26:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7449,"nodeType":"ExpressionStatement","src":"6052:26:11"},{"expression":{"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7450,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"6088:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6095:9:11","memberName":"documents","nodeType":"MemberAccess","referencedDeclaration":7094,"src":"6088:16:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7453,"name":"documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"6107:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"6088:28:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":7455,"nodeType":"ExpressionStatement","src":"6088:28:11"},{"eventCall":{"arguments":[{"id":7457,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"6154:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7458,"name":"title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"6164:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7459,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"6171:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6178:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"6171:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}],"id":7456,"name":"TenderUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"6140:13:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_enum$_TenderStatus_$7118_$returns$__$","typeString":"function (string memory,string memory,enum TenderManagement.TenderStatus)"}},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7462,"nodeType":"EmitStatement","src":"6135:50:11"}]},"documentation":{"id":7336,"nodeType":"StructuredDocumentation","src":"4440:448:11","text":" @dev Update an existing tender\n @param tenderId Tender ID to update\n @param title New title\n @param description New description\n @param estimatedValue New estimated value\n @param startDate New start date\n @param endDate New end date\n @param category New category\n @param department New department\n @param location New location\n @param documents New document IPFS hashes"},"functionSelector":"fb0998e3","id":7464,"implemented":true,"kind":"function","modifiers":[{"id":7360,"kind":"modifierInvocation","modifierName":{"id":7359,"name":"onlyOfficer","nameLocations":["5241:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":7213,"src":"5241:11:11"},"nodeType":"ModifierInvocation","src":"5241:11:11"},{"arguments":[{"id":7362,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"5266:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7363,"kind":"modifierInvocation","modifierName":{"id":7361,"name":"tenderExists","nameLocations":["5253:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7229,"src":"5253:12:11"},"nodeType":"ModifierInvocation","src":"5253:22:11"}],"name":"updateTender","nameLocation":"4902:12:11","nodeType":"FunctionDefinition","parameters":{"id":7358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7338,"mutability":"mutable","name":"tenderId","nameLocation":"4938:8:11","nodeType":"VariableDeclaration","scope":7464,"src":"4924:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7337,"name":"string","nodeType":"ElementaryTypeName","src":"4924:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7340,"mutability":"mutable","name":"title","nameLocation":"4970:5:11","nodeType":"VariableDeclaration","scope":7464,"src":"4956:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7339,"name":"string","nodeType":"ElementaryTypeName","src":"4956:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7342,"mutability":"mutable","name":"description","nameLocation":"4999:11:11","nodeType":"VariableDeclaration","scope":7464,"src":"4985:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7341,"name":"string","nodeType":"ElementaryTypeName","src":"4985:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7344,"mutability":"mutable","name":"estimatedValue","nameLocation":"5028:14:11","nodeType":"VariableDeclaration","scope":7464,"src":"5020:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7343,"name":"uint256","nodeType":"ElementaryTypeName","src":"5020:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7346,"mutability":"mutable","name":"startDate","nameLocation":"5060:9:11","nodeType":"VariableDeclaration","scope":7464,"src":"5052:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7345,"name":"uint256","nodeType":"ElementaryTypeName","src":"5052:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7348,"mutability":"mutable","name":"endDate","nameLocation":"5087:7:11","nodeType":"VariableDeclaration","scope":7464,"src":"5079:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5079:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7350,"mutability":"mutable","name":"category","nameLocation":"5118:8:11","nodeType":"VariableDeclaration","scope":7464,"src":"5104:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7349,"name":"string","nodeType":"ElementaryTypeName","src":"5104:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7352,"mutability":"mutable","name":"department","nameLocation":"5150:10:11","nodeType":"VariableDeclaration","scope":7464,"src":"5136:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7351,"name":"string","nodeType":"ElementaryTypeName","src":"5136:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7354,"mutability":"mutable","name":"location","nameLocation":"5184:8:11","nodeType":"VariableDeclaration","scope":7464,"src":"5170:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7353,"name":"string","nodeType":"ElementaryTypeName","src":"5170:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7357,"mutability":"mutable","name":"documents","nameLocation":"5218:9:11","nodeType":"VariableDeclaration","scope":7464,"src":"5202:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7355,"name":"string","nodeType":"ElementaryTypeName","src":"5202:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7356,"nodeType":"ArrayTypeName","src":"5202:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"4914:319:11"},"returnParameters":{"id":7364,"nodeType":"ParameterList","parameters":[],"src":"5276:0:11"},"scope":8044,"src":"4893:1299:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7579,"nodeType":"Block","src":"6450:1169:11","statements":[{"assignments":[7480],"declarations":[{"constant":false,"id":7480,"mutability":"mutable","name":"tender","nameLocation":"6475:6:11","nodeType":"VariableDeclaration","scope":7579,"src":"6460:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"},"typeName":{"id":7479,"nodeType":"UserDefinedTypeName","pathNode":{"id":7478,"name":"Tender","nameLocations":["6460:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7095,"src":"6460:6:11"},"referencedDeclaration":7095,"src":"6460:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"}},"visibility":"internal"}],"id":7484,"initialValue":{"baseExpression":{"id":7481,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"6484:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7483,"indexExpression":{"id":7482,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"6492:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6484:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6460:41:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7486,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"6587:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6594:9:11","memberName":"createdBy","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"6587:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7488,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6607:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6611:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6607:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6587:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7491,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6621:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6625:6:11","memberName":"sender","nodeType":"MemberAccess","src":"6621:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7493,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"6635:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6621:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6587:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207468652063726561746f72206f722061646d696e2063616e206368616e67652074686520737461747573","id":7496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6642:49:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_101195bdc2893527be50319c8104f34254486a75de7f900272d9e3d208644d8e","typeString":"literal_string \"Only the creator or admin can change the status\""},"value":"Only the creator or admin can change the status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_101195bdc2893527be50319c8104f34254486a75de7f900272d9e3d208644d8e","typeString":"literal_string \"Only the creator or admin can change the status\""}],"id":7485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6579:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6579:113:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7498,"nodeType":"ExpressionStatement","src":"6579:113:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7499,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"6754:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7500,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"6764:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6777:9:11","memberName":"Published","nodeType":"MemberAccess","referencedDeclaration":7114,"src":"6764:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"6754:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7522,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"7011:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7523,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"7021:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7034:6:11","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"7021:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"7011:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7536,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"7165:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7537,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"7175:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7188:7:11","memberName":"Awarded","nodeType":"MemberAccess","referencedDeclaration":7116,"src":"7175:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"7165:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7550,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"7314:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7551,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"7324:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7337:9:11","memberName":"Cancelled","nodeType":"MemberAccess","referencedDeclaration":7117,"src":"7324:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"7314:32:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7564,"nodeType":"IfStatement","src":"7310:201:11","trueBody":{"id":7563,"nodeType":"Block","src":"7348:163:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7555,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"7427:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7556,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7434:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"7427:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":7557,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"7444:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7457:7:11","memberName":"Awarded","nodeType":"MemberAccess","referencedDeclaration":7116,"src":"7444:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"7427:37:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f742063616e63656c20616e20617761726465642074656e646572","id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7466:33:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d57c575e62204f0c92a9c9df672084e2f8a0fff893bcf0ee1ac771f4d64e2e1e","typeString":"literal_string \"Cannot cancel an awarded tender\""},"value":"Cannot cancel an awarded tender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d57c575e62204f0c92a9c9df672084e2f8a0fff893bcf0ee1ac771f4d64e2e1e","typeString":"literal_string \"Cannot cancel an awarded tender\""}],"id":7554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7419:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7419:81:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7562,"nodeType":"ExpressionStatement","src":"7419:81:11"}]}},"id":7565,"nodeType":"IfStatement","src":"7161:350:11","trueBody":{"id":7549,"nodeType":"Block","src":"7197:107:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7541,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"7219:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7226:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"7219:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7543,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"7236:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7544,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7249:6:11","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"7236:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"7219:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c792061776172642066726f6d20436c6f73656420737461747573","id":7546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7257:35:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e398f8310d5aa1633826f5f1f8f0c8acaa91aa42a88ae0208040ce5febe6ba90","typeString":"literal_string \"Can only award from Closed status\""},"value":"Can only award from Closed status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e398f8310d5aa1633826f5f1f8f0c8acaa91aa42a88ae0208040ce5febe6ba90","typeString":"literal_string \"Can only award from Closed status\""}],"id":7540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7211:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7211:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7548,"nodeType":"ExpressionStatement","src":"7211:82:11"}]}},"id":7566,"nodeType":"IfStatement","src":"7007:504:11","trueBody":{"id":7535,"nodeType":"Block","src":"7042:113:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7527,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"7064:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7528,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7071:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"7064:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7529,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"7081:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7094:9:11","memberName":"Published","nodeType":"MemberAccess","referencedDeclaration":7114,"src":"7081:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"7064:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c7920636c6f73652066726f6d205075626c697368656420737461747573","id":7532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7105:38:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_fcc87f85bd4f804a3f147aca1526ed9e0822981c4e2ff2e8482eaa7df9209e95","typeString":"literal_string \"Can only close from Published status\""},"value":"Can only close from Published status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fcc87f85bd4f804a3f147aca1526ed9e0822981c4e2ff2e8482eaa7df9209e95","typeString":"literal_string \"Can only close from Published status\""}],"id":7526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7056:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7056:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7534,"nodeType":"ExpressionStatement","src":"7056:88:11"}]}},"id":7567,"nodeType":"IfStatement","src":"6750:761:11","trueBody":{"id":7521,"nodeType":"Block","src":"6788:213:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7504,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"6810:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7505,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6817:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"6810:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7506,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"6827:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6840:5:11","memberName":"Draft","nodeType":"MemberAccess","referencedDeclaration":7113,"src":"6827:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"6810:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c79207075626c6973682066726f6d20447261667420737461747573","id":7509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6847:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4c9f21d4333ebfbca247df379a236db8918e0318542de069b310400cff4b6235","typeString":"literal_string \"Can only publish from Draft status\""},"value":"Can only publish from Draft status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4c9f21d4333ebfbca247df379a236db8918e0318542de069b310400cff4b6235","typeString":"literal_string \"Can only publish from Draft status\""}],"id":7503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6802:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6802:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7511,"nodeType":"ExpressionStatement","src":"6802:82:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7513,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6906:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6912:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"6906:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7515,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"6925:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6932:7:11","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"6925:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6906:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207075626c69736820612074656e64657220746861742068617320616c726561647920656e646564","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6941:48:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_14523e6347deaf7b00ad31f1d43dcb109bd023aeedaaef5c3cb59d9eefdd76a6","typeString":"literal_string \"Cannot publish a tender that has already ended\""},"value":"Cannot publish a tender that has already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14523e6347deaf7b00ad31f1d43dcb109bd023aeedaaef5c3cb59d9eefdd76a6","typeString":"literal_string \"Cannot publish a tender that has already ended\""}],"id":7512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6898:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6898:92:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7520,"nodeType":"ExpressionStatement","src":"6898:92:11"}]}},{"expression":{"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7568,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7480,"src":"7529:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7536:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"7529:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7571,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"7545:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"7529:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"id":7573,"nodeType":"ExpressionStatement","src":"7529:22:11"},{"eventCall":{"arguments":[{"id":7575,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"7595:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7576,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7470,"src":"7605:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}],"id":7574,"name":"TenderStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"7575:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_enum$_TenderStatus_$7118_$returns$__$","typeString":"function (string memory,enum TenderManagement.TenderStatus)"}},"id":7577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7575:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7578,"nodeType":"EmitStatement","src":"7570:42:11"}]},"documentation":{"id":7465,"nodeType":"StructuredDocumentation","src":"6202:128:11","text":" @dev Change the status of a tender\n @param tenderId Tender ID to update\n @param status New status"},"functionSelector":"f7bf8b9e","id":7580,"implemented":true,"kind":"function","modifiers":[{"id":7473,"kind":"modifierInvocation","modifierName":{"id":7472,"name":"onlyOfficer","nameLocations":["6415:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":7213,"src":"6415:11:11"},"nodeType":"ModifierInvocation","src":"6415:11:11"},{"arguments":[{"id":7475,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7467,"src":"6440:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7476,"kind":"modifierInvocation","modifierName":{"id":7474,"name":"tenderExists","nameLocations":["6427:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7229,"src":"6427:12:11"},"nodeType":"ModifierInvocation","src":"6427:22:11"}],"name":"changeTenderStatus","nameLocation":"6344:18:11","nodeType":"FunctionDefinition","parameters":{"id":7471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7467,"mutability":"mutable","name":"tenderId","nameLocation":"6377:8:11","nodeType":"VariableDeclaration","scope":7580,"src":"6363:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7466,"name":"string","nodeType":"ElementaryTypeName","src":"6363:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7470,"mutability":"mutable","name":"status","nameLocation":"6400:6:11","nodeType":"VariableDeclaration","scope":7580,"src":"6387:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"typeName":{"id":7469,"nodeType":"UserDefinedTypeName","pathNode":{"id":7468,"name":"TenderStatus","nameLocations":["6387:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7118,"src":"6387:12:11"},"referencedDeclaration":7118,"src":"6387:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"visibility":"internal"}],"src":"6362:45:11"},"returnParameters":{"id":7477,"nodeType":"ParameterList","parameters":[],"src":"6450:0:11"},"scope":8044,"src":"6335:1284:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7680,"nodeType":"Block","src":"8042:1026:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7597,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"8060:4:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string memory => struct TenderManagement.Bid storage ref)"}},"id":7599,"indexExpression":{"id":7598,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8065:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8060:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage","typeString":"struct TenderManagement.Bid storage ref"}},"id":7600,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8072:11:11","memberName":"submittedAt","nodeType":"MemberAccess","referencedDeclaration":7105,"src":"8060:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7601,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8087:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8060:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420494420616c726561647920657869737473","id":7603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8090:23:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a34d3c7c8b9f2a45bdfe2ea3567bbd30b9548b0f765045536bfe223e29eb34f","typeString":"literal_string \"Bid ID already exists\""},"value":"Bid ID already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a34d3c7c8b9f2a45bdfe2ea3567bbd30b9548b0f765045536bfe223e29eb34f","typeString":"literal_string \"Bid ID already exists\""}],"id":7596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8052:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:62:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7605,"nodeType":"ExpressionStatement","src":"8052:62:11"},{"assignments":[7608],"declarations":[{"constant":false,"id":7608,"mutability":"mutable","name":"tender","nameLocation":"8148:6:11","nodeType":"VariableDeclaration","scope":7680,"src":"8133:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"},"typeName":{"id":7607,"nodeType":"UserDefinedTypeName","pathNode":{"id":7606,"name":"Tender","nameLocations":["8133:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7095,"src":"8133:6:11"},"referencedDeclaration":7095,"src":"8133:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"}},"visibility":"internal"}],"id":7612,"initialValue":{"baseExpression":{"id":7609,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"8157:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7611,"indexExpression":{"id":7610,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"8165:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8157:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8133:41:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7614,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"8255:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7615,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8262:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"8255:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7616,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"8272:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8285:9:11","memberName":"Published","nodeType":"MemberAccess","referencedDeclaration":7114,"src":"8272:22:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"8255:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e646572206973206e6f74206f70656e20666f722062696464696e67","id":7619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8296:32:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11b213da68555235d05e0eaf009482c88c2001016d38453df4859e9331afb81","typeString":"literal_string \"Tender is not open for bidding\""},"value":"Tender is not open for bidding"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11b213da68555235d05e0eaf009482c88c2001016d38453df4859e9331afb81","typeString":"literal_string \"Tender is not open for bidding\""}],"id":7613,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8247:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7621,"nodeType":"ExpressionStatement","src":"8247:82:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7623,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8347:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8353:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8347:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":7625,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"8366:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8373:9:11","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":7076,"src":"8366:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8347:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e6465722062696464696e6720686173206e6f74207374617274656420796574","id":7628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8384:36:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ce36baf0c73570239b92838061582f393aa5acef64a1dfb034dc12dbcebd32b","typeString":"literal_string \"Tender bidding has not started yet\""},"value":"Tender bidding has not started yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ce36baf0c73570239b92838061582f393aa5acef64a1dfb034dc12dbcebd32b","typeString":"literal_string \"Tender bidding has not started yet\""}],"id":7622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8339:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8339:82:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7630,"nodeType":"ExpressionStatement","src":"8339:82:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7632,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8439:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8445:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8439:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7634,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7608,"src":"8458:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8465:7:11","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"8458:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8439:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e6465722062696464696e672068617320656e646564","id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8474:26:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_5273d16920ea467f1e4f6edb280c6ce3a31806cf15fcd11f1a33601ce3ad8cff","typeString":"literal_string \"Tender bidding has ended\""},"value":"Tender bidding has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5273d16920ea467f1e4f6edb280c6ce3a31806cf15fcd11f1a33601ce3ad8cff","typeString":"literal_string \"Tender bidding has ended\""}],"id":7631,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8431:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8431:70:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7639,"nodeType":"ExpressionStatement","src":"8431:70:11"},{"expression":{"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7640,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"8546:4:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string memory => struct TenderManagement.Bid storage ref)"}},"id":7642,"indexExpression":{"id":7641,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8551:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8546:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage","typeString":"struct TenderManagement.Bid storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7644,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8582:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7645,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"8611:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7646,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8641:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8645:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8641:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7648,"name":"bidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"8676:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7649,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8712:5:11","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8718:9:11","memberName":"timestamp","nodeType":"MemberAccess","src":"8712:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7651,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"8749:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8759:9:11","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":7119,"src":"8749:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},{"id":7653,"name":"documents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7590,"src":"8793:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"id":7643,"name":"Bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"8560:3:11","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Bid_$7112_storage_ptr_$","typeString":"type(struct TenderManagement.Bid storage pointer)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8578:2:11","8601:8:11","8633:6:11","8665:9:11","8699:11:11","8741:6:11","8782:9:11"],"names":["id","tenderId","bidder","bidAmount","submittedAt","status","documents"],"nodeType":"FunctionCall","src":"8560:253:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid memory"}},"src":"8546:267:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage","typeString":"struct TenderManagement.Bid storage ref"}},"id":7656,"nodeType":"ExpressionStatement","src":"8546:267:11"},{"expression":{"arguments":[{"id":7661,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8894:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":7657,"name":"tenderBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"8868:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string memory => string storage ref[] storage ref)"}},"id":7659,"indexExpression":{"id":7658,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"8879:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8868:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8889:4:11","memberName":"push","nodeType":"MemberAccess","src":"8868:25:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8868:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7663,"nodeType":"ExpressionStatement","src":"8868:32:11"},{"expression":{"arguments":[{"id":7669,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"8979:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":7664,"name":"userBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"8953:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":7667,"indexExpression":{"expression":{"id":7665,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8962:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8966:6:11","memberName":"sender","nodeType":"MemberAccess","src":"8962:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8953:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":7668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8974:4:11","memberName":"push","nodeType":"MemberAccess","src":"8953:25:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":7670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8953:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7671,"nodeType":"ExpressionStatement","src":"8953:32:11"},{"eventCall":{"arguments":[{"id":7673,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7583,"src":"9022:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7674,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"9029:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7675,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9039:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9043:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9039:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7677,"name":"bidAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7587,"src":"9051:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7672,"name":"BidSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"9009:12:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,address,uint256)"}},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9009:52:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7679,"nodeType":"EmitStatement","src":"9004:57:11"}]},"documentation":{"id":7581,"nodeType":"StructuredDocumentation","src":"7629:230:11","text":" @dev Submit a bid for a tender\n @param bidId Unique identifier for the bid\n @param tenderId Tender ID to bid on\n @param bidAmount Bid amount\n @param documents IPFS hashes of bid documents"},"functionSelector":"33f1f39d","id":7681,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7593,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7585,"src":"8032:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7594,"kind":"modifierInvocation","modifierName":{"id":7592,"name":"tenderExists","nameLocations":["8019:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7229,"src":"8019:12:11"},"nodeType":"ModifierInvocation","src":"8019:22:11"}],"name":"submitBid","nameLocation":"7873:9:11","nodeType":"FunctionDefinition","parameters":{"id":7591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7583,"mutability":"mutable","name":"bidId","nameLocation":"7906:5:11","nodeType":"VariableDeclaration","scope":7681,"src":"7892:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7582,"name":"string","nodeType":"ElementaryTypeName","src":"7892:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7585,"mutability":"mutable","name":"tenderId","nameLocation":"7935:8:11","nodeType":"VariableDeclaration","scope":7681,"src":"7921:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7584,"name":"string","nodeType":"ElementaryTypeName","src":"7921:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7587,"mutability":"mutable","name":"bidAmount","nameLocation":"7961:9:11","nodeType":"VariableDeclaration","scope":7681,"src":"7953:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7586,"name":"uint256","nodeType":"ElementaryTypeName","src":"7953:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7590,"mutability":"mutable","name":"documents","nameLocation":"7996:9:11","nodeType":"VariableDeclaration","scope":7681,"src":"7980:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7588,"name":"string","nodeType":"ElementaryTypeName","src":"7980:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7589,"nodeType":"ArrayTypeName","src":"7980:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"7882:129:11"},"returnParameters":{"id":7595,"nodeType":"ParameterList","parameters":[],"src":"8042:0:11"},"scope":8044,"src":"7864:1204:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7820,"nodeType":"Block","src":"9302:1369:11","statements":[{"assignments":[7697],"declarations":[{"constant":false,"id":7697,"mutability":"mutable","name":"bid","nameLocation":"9324:3:11","nodeType":"VariableDeclaration","scope":7820,"src":"9312:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid"},"typeName":{"id":7696,"nodeType":"UserDefinedTypeName","pathNode":{"id":7695,"name":"Bid","nameLocations":["9312:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":7112,"src":"9312:3:11"},"referencedDeclaration":7112,"src":"9312:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid"}},"visibility":"internal"}],"id":7701,"initialValue":{"baseExpression":{"id":7698,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"9330:4:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string memory => struct TenderManagement.Bid storage ref)"}},"id":7700,"indexExpression":{"id":7699,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"9335:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9330:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage","typeString":"struct TenderManagement.Bid storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9312:29:11"},{"assignments":[7704],"declarations":[{"constant":false,"id":7704,"mutability":"mutable","name":"tender","nameLocation":"9366:6:11","nodeType":"VariableDeclaration","scope":7820,"src":"9351:21:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"},"typeName":{"id":7703,"nodeType":"UserDefinedTypeName","pathNode":{"id":7702,"name":"Tender","nameLocations":["9351:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7095,"src":"9351:6:11"},"referencedDeclaration":7095,"src":"9351:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"}},"visibility":"internal"}],"id":7709,"initialValue":{"baseExpression":{"id":7705,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"9375:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7708,"indexExpression":{"expression":{"id":7706,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"9383:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9387:8:11","memberName":"tenderId","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"9383:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9375:21:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9351:45:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7711,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"9489:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9496:9:11","memberName":"createdBy","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"9489:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7713,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9509:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9513:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9509:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9489:30:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9523:3:11","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9527:6:11","memberName":"sender","nodeType":"MemberAccess","src":"9523:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7718,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"9537:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9523:19:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9489:53:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207468652074656e6465722063726561746f72206f722061646d696e2063616e206368616e67652062696420737461747573","id":7721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9544:56:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_14b79167a2620a9652a225e31498c2ec00a1a7b335310ee35099c54ae41e7571","typeString":"literal_string \"Only the tender creator or admin can change bid status\""},"value":"Only the tender creator or admin can change bid status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14b79167a2620a9652a225e31498c2ec00a1a7b335310ee35099c54ae41e7571","typeString":"literal_string \"Only the tender creator or admin can change bid status\""}],"id":7710,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9481:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9481:120:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7723,"nodeType":"ExpressionStatement","src":"9481:120:11"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7724,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"9663:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7725,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"9673:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9683:11:11","memberName":"Shortlisted","nodeType":"MemberAccess","referencedDeclaration":7120,"src":"9673:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"9663:31:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7747,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"9919:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7748,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"9929:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9939:8:11","memberName":"Rejected","nodeType":"MemberAccess","referencedDeclaration":7121,"src":"9929:18:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"9919:28:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"id":7770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7767,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"10106:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7768,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"10116:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10126:7:11","memberName":"Awarded","nodeType":"MemberAccess","referencedDeclaration":7122,"src":"10116:17:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"10106:27:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7804,"nodeType":"IfStatement","src":"10102:456:11","trueBody":{"id":7803,"nodeType":"Block","src":"10135:423:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7772,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"10157:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10161:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"10157:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7774,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"10171:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10181:11:11","memberName":"Shortlisted","nodeType":"MemberAccess","referencedDeclaration":7120,"src":"10171:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"10157:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c792061776172642066726f6d2053686f72746c697374656420737461747573","id":7777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10194:40:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebe015de62b1bf99410a9ffc0b235203d7d310189ecce1f4b78b468cf173b594","typeString":"literal_string \"Can only award from Shortlisted status\""},"value":"Can only award from Shortlisted status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebe015de62b1bf99410a9ffc0b235203d7d310189ecce1f4b78b468cf173b594","typeString":"literal_string \"Can only award from Shortlisted status\""}],"id":7771,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10149:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10149:86:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7779,"nodeType":"ExpressionStatement","src":"10149:86:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7781,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"10257:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10264:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"10257:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7783,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"10274:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10287:6:11","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"10274:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"10257:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e646572206d75737420626520636c6f73656420746f2061776172642062696473","id":7786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10295:37:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_d2fac765dc901e0e58bb967cf4564d77db99cdcf80178fa5495db2440a92db95","typeString":"literal_string \"Tender must be closed to award bids\""},"value":"Tender must be closed to award bids"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d2fac765dc901e0e58bb967cf4564d77db99cdcf80178fa5495db2440a92db95","typeString":"literal_string \"Tender must be closed to award bids\""}],"id":7780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10249:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10249:84:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7788,"nodeType":"ExpressionStatement","src":"10249:84:11"},{"expression":{"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7789,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"10437:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10444:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"10437:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7792,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"10453:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10466:7:11","memberName":"Awarded","nodeType":"MemberAccess","referencedDeclaration":7116,"src":"10453:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"10437:36:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"id":7795,"nodeType":"ExpressionStatement","src":"10437:36:11"},{"eventCall":{"arguments":[{"expression":{"id":7797,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"10512:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7798,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10516:8:11","memberName":"tenderId","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"10512:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":7799,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"10526:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10539:7:11","memberName":"Awarded","nodeType":"MemberAccess","referencedDeclaration":7116,"src":"10526:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}],"id":7796,"name":"TenderStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7170,"src":"10492:19:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_enum$_TenderStatus_$7118_$returns$__$","typeString":"function (string memory,enum TenderManagement.TenderStatus)"}},"id":7801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10492:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7802,"nodeType":"EmitStatement","src":"10487:60:11"}]}},"id":7805,"nodeType":"IfStatement","src":"9915:643:11","trueBody":{"id":7766,"nodeType":"Block","src":"9949:147:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"id":7756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7752,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"9971:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7753,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9975:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"9971:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7754,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"9985:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9995:9:11","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":7119,"src":"9985:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"9971:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"id":7761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7757,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"10008:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10012:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"10008:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7759,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"10022:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10032:11:11","memberName":"Shortlisted","nodeType":"MemberAccess","referencedDeclaration":7120,"src":"10022:21:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"10008:35:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9971:72:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420737461747573207472616e736974696f6e20746f2052656a6563746564","id":7763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10045:39:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_447e8da847f7f487f76847251c7b35bba8659489c34ec8910f0cdcadd8ed057f","typeString":"literal_string \"Invalid status transition to Rejected\""},"value":"Invalid status transition to Rejected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_447e8da847f7f487f76847251c7b35bba8659489c34ec8910f0cdcadd8ed057f","typeString":"literal_string \"Invalid status transition to Rejected\""}],"id":7751,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9963:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9963:122:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7765,"nodeType":"ExpressionStatement","src":"9963:122:11"}]}},"id":7806,"nodeType":"IfStatement","src":"9659:899:11","trueBody":{"id":7746,"nodeType":"Block","src":"9696:213:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"id":7733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7729,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"9718:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9722:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"9718:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7731,"name":"BidStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"9732:9:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BidStatus_$7123_$","typeString":"type(enum TenderManagement.BidStatus)"}},"id":7732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9742:9:11","memberName":"Submitted","nodeType":"MemberAccess","referencedDeclaration":7119,"src":"9732:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"9718:33:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206f6e6c792073686f72746c6973742066726f6d205375626d697474656420737461747573","id":7734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9753:42:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_11d4d21b4ea6d63605cf4442bd9d60b4ec921151b0f22a48a6f045ba70c86c85","typeString":"literal_string \"Can only shortlist from Submitted status\""},"value":"Can only shortlist from Submitted status"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11d4d21b4ea6d63605cf4442bd9d60b4ec921151b0f22a48a6f045ba70c86c85","typeString":"literal_string \"Can only shortlist from Submitted status\""}],"id":7728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9710:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9710:86:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7736,"nodeType":"ExpressionStatement","src":"9710:86:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"id":7742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7738,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7704,"src":"9818:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender storage pointer"}},"id":7739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9825:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"9818:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7740,"name":"TenderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7118,"src":"9835:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TenderStatus_$7118_$","typeString":"type(enum TenderManagement.TenderStatus)"}},"id":7741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9848:6:11","memberName":"Closed","nodeType":"MemberAccess","referencedDeclaration":7115,"src":"9835:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"src":"9818:36:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54656e646572206d75737420626520636c6f73656420746f2073686f72746c6973742062696473","id":7743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9856:41:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5af74e5d11136a709b4d2fbfb194974d8059daa290f2624b584fff72dbe9dda","typeString":"literal_string \"Tender must be closed to shortlist bids\""},"value":"Tender must be closed to shortlist bids"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f5af74e5d11136a709b4d2fbfb194974d8059daa290f2624b584fff72dbe9dda","typeString":"literal_string \"Tender must be closed to shortlist bids\""}],"id":7737,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9810:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9810:88:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7745,"nodeType":"ExpressionStatement","src":"9810:88:11"}]}},{"expression":{"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7807,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"10576:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7809,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10580:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"10576:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7810,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"10589:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"src":"10576:19:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"id":7812,"nodeType":"ExpressionStatement","src":"10576:19:11"},{"eventCall":{"arguments":[{"id":7814,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"10636:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7815,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7697,"src":"10643:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid storage pointer"}},"id":7816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10647:8:11","memberName":"tenderId","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"10643:12:11","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":7817,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7687,"src":"10657:6:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}],"id":7813,"name":"BidStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"10619:16:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_enum$_BidStatus_$7123_$returns$__$","typeString":"function (string memory,string memory,enum TenderManagement.BidStatus)"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10619:45:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7819,"nodeType":"EmitStatement","src":"10614:50:11"}]},"documentation":{"id":7682,"nodeType":"StructuredDocumentation","src":"9078:119:11","text":" @dev Change the status of a bid\n @param bidId Bid ID to update\n @param status New status"},"functionSelector":"526f0300","id":7821,"implemented":true,"kind":"function","modifiers":[{"id":7690,"kind":"modifierInvocation","modifierName":{"id":7689,"name":"onlyOfficer","nameLocations":["9273:11:11"],"nodeType":"IdentifierPath","referencedDeclaration":7213,"src":"9273:11:11"},"nodeType":"ModifierInvocation","src":"9273:11:11"},{"arguments":[{"id":7692,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"9295:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7693,"kind":"modifierInvocation","modifierName":{"id":7691,"name":"bidExists","nameLocations":["9285:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7245,"src":"9285:9:11"},"nodeType":"ModifierInvocation","src":"9285:16:11"}],"name":"changeBidStatus","nameLocation":"9211:15:11","nodeType":"FunctionDefinition","parameters":{"id":7688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7684,"mutability":"mutable","name":"bidId","nameLocation":"9241:5:11","nodeType":"VariableDeclaration","scope":7821,"src":"9227:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7683,"name":"string","nodeType":"ElementaryTypeName","src":"9227:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7687,"mutability":"mutable","name":"status","nameLocation":"9258:6:11","nodeType":"VariableDeclaration","scope":7821,"src":"9248:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"typeName":{"id":7686,"nodeType":"UserDefinedTypeName","pathNode":{"id":7685,"name":"BidStatus","nameLocations":["9248:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7123,"src":"9248:9:11"},"referencedDeclaration":7123,"src":"9248:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"visibility":"internal"}],"src":"9226:39:11"},"returnParameters":{"id":7694,"nodeType":"ParameterList","parameters":[],"src":"9302:0:11"},"scope":8044,"src":"9202:1469:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7888,"nodeType":"Block","src":"11720:434:11","statements":[{"assignments":[7857],"declarations":[{"constant":false,"id":7857,"mutability":"mutable","name":"tender","nameLocation":"11744:6:11","nodeType":"VariableDeclaration","scope":7888,"src":"11730:20:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender"},"typeName":{"id":7856,"nodeType":"UserDefinedTypeName","pathNode":{"id":7855,"name":"Tender","nameLocations":["11730:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":7095,"src":"11730:6:11"},"referencedDeclaration":7095,"src":"11730:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage_ptr","typeString":"struct TenderManagement.Tender"}},"visibility":"internal"}],"id":7861,"initialValue":{"baseExpression":{"id":7858,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"11753:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7860,"indexExpression":{"id":7859,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"11761:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11753:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11730:40:11"},{"expression":{"components":[{"expression":{"id":7862,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"11801:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11808:2:11","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7068,"src":"11801:9:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7864,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"11824:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11831:5:11","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":7070,"src":"11824:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7866,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"11850:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11857:11:11","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":7072,"src":"11850:18:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7868,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"11882:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11889:14:11","memberName":"estimatedValue","nodeType":"MemberAccess","referencedDeclaration":7074,"src":"11882:21:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7870,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"11917:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7871,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11924:9:11","memberName":"startDate","nodeType":"MemberAccess","referencedDeclaration":7076,"src":"11917:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7872,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"11947:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11954:7:11","memberName":"endDate","nodeType":"MemberAccess","referencedDeclaration":7078,"src":"11947:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7874,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"11975:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11982:9:11","memberName":"createdBy","nodeType":"MemberAccess","referencedDeclaration":7080,"src":"11975:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7876,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"12005:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12012:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7083,"src":"12005:13:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},{"expression":{"id":7878,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"12032:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12039:9:11","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":7085,"src":"12032:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7880,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"12062:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7881,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12069:8:11","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":7087,"src":"12062:15:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7882,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"12091:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12098:10:11","memberName":"department","nodeType":"MemberAccess","referencedDeclaration":7089,"src":"12091:17:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7884,"name":"tender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7857,"src":"12122:6:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_memory_ptr","typeString":"struct TenderManagement.Tender memory"}},"id":7885,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12129:8:11","memberName":"location","nodeType":"MemberAccess","referencedDeclaration":7091,"src":"12122:15:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11787:360:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_enum$_TenderStatus_$7118_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(string memory,string memory,string memory,uint256,uint256,uint256,address,enum TenderManagement.TenderStatus,uint256,string memory,string memory,string memory)"}},"functionReturnParameters":7854,"id":7887,"nodeType":"Return","src":"11780:367:11"}]},"documentation":{"id":7822,"nodeType":"StructuredDocumentation","src":"10681:586:11","text":" @dev Get tender details\n @param tenderId Tender ID to query\n @return id Tender ID\n @return title Tender title\n @return description Tender description\n @return estimatedValue Tender estimated value\n @return startDate Tender start date\n @return endDate Tender end date\n @return createdBy Tender creator address\n @return status Tender status\n @return createdAt Tender creation timestamp\n @return category Tender category\n @return department Tender department\n @return location Tender location"},"functionSelector":"62f058c8","id":7889,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7827,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"11340:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7828,"kind":"modifierInvocation","modifierName":{"id":7826,"name":"tenderExists","nameLocations":["11327:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7229,"src":"11327:12:11"},"nodeType":"ModifierInvocation","src":"11327:22:11"}],"name":"getTender","nameLocation":"11281:9:11","nodeType":"FunctionDefinition","parameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"tenderId","nameLocation":"11305:8:11","nodeType":"VariableDeclaration","scope":7889,"src":"11291:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7823,"name":"string","nodeType":"ElementaryTypeName","src":"11291:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11290:24:11"},"returnParameters":{"id":7854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7830,"mutability":"mutable","name":"id","nameLocation":"11382:2:11","nodeType":"VariableDeclaration","scope":7889,"src":"11368:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7829,"name":"string","nodeType":"ElementaryTypeName","src":"11368:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7832,"mutability":"mutable","name":"title","nameLocation":"11408:5:11","nodeType":"VariableDeclaration","scope":7889,"src":"11394:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7831,"name":"string","nodeType":"ElementaryTypeName","src":"11394:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7834,"mutability":"mutable","name":"description","nameLocation":"11437:11:11","nodeType":"VariableDeclaration","scope":7889,"src":"11423:25:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7833,"name":"string","nodeType":"ElementaryTypeName","src":"11423:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7836,"mutability":"mutable","name":"estimatedValue","nameLocation":"11466:14:11","nodeType":"VariableDeclaration","scope":7889,"src":"11458:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7835,"name":"uint256","nodeType":"ElementaryTypeName","src":"11458:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7838,"mutability":"mutable","name":"startDate","nameLocation":"11498:9:11","nodeType":"VariableDeclaration","scope":7889,"src":"11490:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"11490:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7840,"mutability":"mutable","name":"endDate","nameLocation":"11525:7:11","nodeType":"VariableDeclaration","scope":7889,"src":"11517:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11517:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7842,"mutability":"mutable","name":"createdBy","nameLocation":"11550:9:11","nodeType":"VariableDeclaration","scope":7889,"src":"11542:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7841,"name":"address","nodeType":"ElementaryTypeName","src":"11542:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7845,"mutability":"mutable","name":"status","nameLocation":"11582:6:11","nodeType":"VariableDeclaration","scope":7889,"src":"11569:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"},"typeName":{"id":7844,"nodeType":"UserDefinedTypeName","pathNode":{"id":7843,"name":"TenderStatus","nameLocations":["11569:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7118,"src":"11569:12:11"},"referencedDeclaration":7118,"src":"11569:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_TenderStatus_$7118","typeString":"enum TenderManagement.TenderStatus"}},"visibility":"internal"},{"constant":false,"id":7847,"mutability":"mutable","name":"createdAt","nameLocation":"11606:9:11","nodeType":"VariableDeclaration","scope":7889,"src":"11598:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7846,"name":"uint256","nodeType":"ElementaryTypeName","src":"11598:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7849,"mutability":"mutable","name":"category","nameLocation":"11639:8:11","nodeType":"VariableDeclaration","scope":7889,"src":"11625:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7848,"name":"string","nodeType":"ElementaryTypeName","src":"11625:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7851,"mutability":"mutable","name":"department","nameLocation":"11671:10:11","nodeType":"VariableDeclaration","scope":7889,"src":"11657:24:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7850,"name":"string","nodeType":"ElementaryTypeName","src":"11657:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7853,"mutability":"mutable","name":"location","nameLocation":"11705:8:11","nodeType":"VariableDeclaration","scope":7889,"src":"11691:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7852,"name":"string","nodeType":"ElementaryTypeName","src":"11691:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11358:361:11"},"scope":8044,"src":"11272:882:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7906,"nodeType":"Block","src":"12413:51:11","statements":[{"expression":{"expression":{"baseExpression":{"id":7901,"name":"tenders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7128,"src":"12430:7:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Tender_$7095_storage_$","typeString":"mapping(string memory => struct TenderManagement.Tender storage ref)"}},"id":7903,"indexExpression":{"id":7902,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"12438:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12430:17:11","typeDescriptions":{"typeIdentifier":"t_struct$_Tender_$7095_storage","typeString":"struct TenderManagement.Tender storage ref"}},"id":7904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12448:9:11","memberName":"documents","nodeType":"MemberAccess","referencedDeclaration":7094,"src":"12430:27:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":7900,"id":7905,"nodeType":"Return","src":"12423:34:11"}]},"documentation":{"id":7890,"nodeType":"StructuredDocumentation","src":"12164:131:11","text":" @dev Get tender documents\n @param tenderId Tender ID to query\n @return Array of document IPFS hashes"},"functionSelector":"83f668b7","id":7907,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7895,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7892,"src":"12377:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7896,"kind":"modifierInvocation","modifierName":{"id":7894,"name":"tenderExists","nameLocations":["12364:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7229,"src":"12364:12:11"},"nodeType":"ModifierInvocation","src":"12364:22:11"}],"name":"getTenderDocuments","nameLocation":"12309:18:11","nodeType":"FunctionDefinition","parameters":{"id":7893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7892,"mutability":"mutable","name":"tenderId","nameLocation":"12342:8:11","nodeType":"VariableDeclaration","scope":7907,"src":"12328:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7891,"name":"string","nodeType":"ElementaryTypeName","src":"12328:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12327:24:11"},"returnParameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7907,"src":"12396:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7897,"name":"string","nodeType":"ElementaryTypeName","src":"12396:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7898,"nodeType":"ArrayTypeName","src":"12396:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"12395:17:11"},"scope":8044,"src":"12300:164:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7950,"nodeType":"Block","src":"13027:222:11","statements":[{"assignments":[7931],"declarations":[{"constant":false,"id":7931,"mutability":"mutable","name":"bid","nameLocation":"13048:3:11","nodeType":"VariableDeclaration","scope":7950,"src":"13037:14:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid"},"typeName":{"id":7930,"nodeType":"UserDefinedTypeName","pathNode":{"id":7929,"name":"Bid","nameLocations":["13037:3:11"],"nodeType":"IdentifierPath","referencedDeclaration":7112,"src":"13037:3:11"},"referencedDeclaration":7112,"src":"13037:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage_ptr","typeString":"struct TenderManagement.Bid"}},"visibility":"internal"}],"id":7935,"initialValue":{"baseExpression":{"id":7932,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"13054:4:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string memory => struct TenderManagement.Bid storage ref)"}},"id":7934,"indexExpression":{"id":7933,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"13059:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13054:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage","typeString":"struct TenderManagement.Bid storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13037:28:11"},{"expression":{"components":[{"expression":{"id":7936,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"13096:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid memory"}},"id":7937,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13100:2:11","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":7097,"src":"13096:6:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7938,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"13116:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid memory"}},"id":7939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13120:8:11","memberName":"tenderId","nodeType":"MemberAccess","referencedDeclaration":7099,"src":"13116:12:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7940,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"13142:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid memory"}},"id":7941,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13146:6:11","memberName":"bidder","nodeType":"MemberAccess","referencedDeclaration":7101,"src":"13142:10:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7942,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"13166:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid memory"}},"id":7943,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13170:9:11","memberName":"bidAmount","nodeType":"MemberAccess","referencedDeclaration":7103,"src":"13166:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7944,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"13193:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid memory"}},"id":7945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13197:11:11","memberName":"submittedAt","nodeType":"MemberAccess","referencedDeclaration":7105,"src":"13193:15:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7946,"name":"bid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7931,"src":"13222:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_memory_ptr","typeString":"struct TenderManagement.Bid memory"}},"id":7947,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13226:6:11","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":7108,"src":"13222:10:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}}],"id":7948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13082:160:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$_t_enum$_BidStatus_$7123_$","typeString":"tuple(string memory,string memory,address,uint256,uint256,enum TenderManagement.BidStatus)"}},"functionReturnParameters":7928,"id":7949,"nodeType":"Return","src":"13075:167:11"}]},"documentation":{"id":7908,"nodeType":"StructuredDocumentation","src":"12474:303:11","text":" @dev Get bid details\n @param bidId Bid ID to query\n @return id Bid ID\n @return tenderId Associated tender ID\n @return bidder Bidder address\n @return bidAmount Bid amount\n @return submittedAt Bid submission timestamp\n @return status Bid status"},"functionSelector":"f9853713","id":7951,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7913,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"12841:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7914,"kind":"modifierInvocation","modifierName":{"id":7912,"name":"bidExists","nameLocations":["12831:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7245,"src":"12831:9:11"},"nodeType":"ModifierInvocation","src":"12831:16:11"}],"name":"getBid","nameLocation":"12791:6:11","nodeType":"FunctionDefinition","parameters":{"id":7911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7910,"mutability":"mutable","name":"bidId","nameLocation":"12812:5:11","nodeType":"VariableDeclaration","scope":7951,"src":"12798:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7909,"name":"string","nodeType":"ElementaryTypeName","src":"12798:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12797:21:11"},"returnParameters":{"id":7928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7916,"mutability":"mutable","name":"id","nameLocation":"12880:2:11","nodeType":"VariableDeclaration","scope":7951,"src":"12866:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7915,"name":"string","nodeType":"ElementaryTypeName","src":"12866:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7918,"mutability":"mutable","name":"tenderId","nameLocation":"12906:8:11","nodeType":"VariableDeclaration","scope":7951,"src":"12892:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7917,"name":"string","nodeType":"ElementaryTypeName","src":"12892:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7920,"mutability":"mutable","name":"bidder","nameLocation":"12932:6:11","nodeType":"VariableDeclaration","scope":7951,"src":"12924:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7919,"name":"address","nodeType":"ElementaryTypeName","src":"12924:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7922,"mutability":"mutable","name":"bidAmount","nameLocation":"12956:9:11","nodeType":"VariableDeclaration","scope":7951,"src":"12948:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7921,"name":"uint256","nodeType":"ElementaryTypeName","src":"12948:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7924,"mutability":"mutable","name":"submittedAt","nameLocation":"12983:11:11","nodeType":"VariableDeclaration","scope":7951,"src":"12975:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7923,"name":"uint256","nodeType":"ElementaryTypeName","src":"12975:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7927,"mutability":"mutable","name":"status","nameLocation":"13014:6:11","nodeType":"VariableDeclaration","scope":7951,"src":"13004:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"},"typeName":{"id":7926,"nodeType":"UserDefinedTypeName","pathNode":{"id":7925,"name":"BidStatus","nameLocations":["13004:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7123,"src":"13004:9:11"},"referencedDeclaration":7123,"src":"13004:9:11","typeDescriptions":{"typeIdentifier":"t_enum$_BidStatus_$7123","typeString":"enum TenderManagement.BidStatus"}},"visibility":"internal"}],"src":"12856:170:11"},"scope":8044,"src":"12782:467:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7968,"nodeType":"Block","src":"13487:45:11","statements":[{"expression":{"expression":{"baseExpression":{"id":7963,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7136,"src":"13504:4:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_Bid_$7112_storage_$","typeString":"mapping(string memory => struct TenderManagement.Bid storage ref)"}},"id":7965,"indexExpression":{"id":7964,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"13509:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13504:11:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bid_$7112_storage","typeString":"struct TenderManagement.Bid storage ref"}},"id":7966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13516:9:11","memberName":"documents","nodeType":"MemberAccess","referencedDeclaration":7111,"src":"13504:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":7962,"id":7967,"nodeType":"Return","src":"13497:28:11"}]},"documentation":{"id":7952,"nodeType":"StructuredDocumentation","src":"13259:122:11","text":" @dev Get bid documents\n @param bidId Bid ID to query\n @return Array of document IPFS hashes"},"functionSelector":"0f9fb388","id":7969,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7957,"name":"bidId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7954,"src":"13454:5:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7958,"kind":"modifierInvocation","modifierName":{"id":7956,"name":"bidExists","nameLocations":["13444:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7245,"src":"13444:9:11"},"nodeType":"ModifierInvocation","src":"13444:16:11"}],"name":"getBidDocuments","nameLocation":"13395:15:11","nodeType":"FunctionDefinition","parameters":{"id":7955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7954,"mutability":"mutable","name":"bidId","nameLocation":"13425:5:11","nodeType":"VariableDeclaration","scope":7969,"src":"13411:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7953,"name":"string","nodeType":"ElementaryTypeName","src":"13411:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13410:21:11"},"returnParameters":{"id":7962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7969,"src":"13470:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7959,"name":"string","nodeType":"ElementaryTypeName","src":"13470:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7960,"nodeType":"ArrayTypeName","src":"13470:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13469:17:11"},"scope":8044,"src":"13386:146:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7985,"nodeType":"Block","src":"13778:44:11","statements":[{"expression":{"baseExpression":{"id":7981,"name":"tenderBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"13795:10:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(string memory => string storage ref[] storage ref)"}},"id":7983,"indexExpression":{"id":7982,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"13806:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13795:20:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":7980,"id":7984,"nodeType":"Return","src":"13788:27:11"}]},"documentation":{"id":7970,"nodeType":"StructuredDocumentation","src":"13542:123:11","text":" @dev Get all bids for a tender\n @param tenderId Tender ID to query\n @return Array of bid IDs"},"functionSelector":"2d1faf7c","id":7986,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":7975,"name":"tenderId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7972,"src":"13742:8:11","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7976,"kind":"modifierInvocation","modifierName":{"id":7974,"name":"tenderExists","nameLocations":["13729:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":7229,"src":"13729:12:11"},"nodeType":"ModifierInvocation","src":"13729:22:11"}],"name":"getTenderBids","nameLocation":"13679:13:11","nodeType":"FunctionDefinition","parameters":{"id":7973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7972,"mutability":"mutable","name":"tenderId","nameLocation":"13707:8:11","nodeType":"VariableDeclaration","scope":7986,"src":"13693:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7971,"name":"string","nodeType":"ElementaryTypeName","src":"13693:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13692:24:11"},"returnParameters":{"id":7980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7986,"src":"13761:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7977,"name":"string","nodeType":"ElementaryTypeName","src":"13761:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7978,"nodeType":"ArrayTypeName","src":"13761:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13760:17:11"},"scope":8044,"src":"13670:152:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7999,"nodeType":"Block","src":"14053:45:11","statements":[{"expression":{"baseExpression":{"id":7995,"name":"userBids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7146,"src":"14070:8:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_string_storage_$dyn_storage_$","typeString":"mapping(address => string storage ref[] storage ref)"}},"id":7997,"indexExpression":{"id":7996,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7989,"src":"14079:11:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14070:21:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":7994,"id":7998,"nodeType":"Return","src":"14063:28:11"}]},"documentation":{"id":7987,"nodeType":"StructuredDocumentation","src":"13832:136:11","text":" @dev Get all bids submitted by a user\n @param userAddress User address to query\n @return Array of bid IDs"},"functionSelector":"6759789f","id":8000,"implemented":true,"kind":"function","modifiers":[],"name":"getUserBids","nameLocation":"13982:11:11","nodeType":"FunctionDefinition","parameters":{"id":7990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7989,"mutability":"mutable","name":"userAddress","nameLocation":"14002:11:11","nodeType":"VariableDeclaration","scope":8000,"src":"13994:19:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7988,"name":"address","nodeType":"ElementaryTypeName","src":"13994:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13993:21:11"},"returnParameters":{"id":7994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7993,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8000,"src":"14036:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":7991,"name":"string","nodeType":"ElementaryTypeName","src":"14036:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":7992,"nodeType":"ArrayTypeName","src":"14036:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"14035:17:11"},"scope":8044,"src":"13973:125:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8009,"nodeType":"Block","src":"14261:40:11","statements":[{"expression":{"expression":{"id":8006,"name":"tenderIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"14278:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":8007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14288:6:11","memberName":"length","nodeType":"MemberAccess","src":"14278:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8005,"id":8008,"nodeType":"Return","src":"14271:23:11"}]},"documentation":{"id":8001,"nodeType":"StructuredDocumentation","src":"14108:92:11","text":" @dev Get the total number of tenders\n @return The number of tenders"},"functionSelector":"5850b383","id":8010,"implemented":true,"kind":"function","modifiers":[],"name":"getTenderCount","nameLocation":"14214:14:11","nodeType":"FunctionDefinition","parameters":{"id":8002,"nodeType":"ParameterList","parameters":[],"src":"14228:2:11"},"returnParameters":{"id":8005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8010,"src":"14252:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8003,"name":"uint256","nodeType":"ElementaryTypeName","src":"14252:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14251:9:11"},"scope":8044,"src":"14205:96:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8019,"nodeType":"Block","src":"14462:33:11","statements":[{"expression":{"id":8017,"name":"tenderIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"14479:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":8016,"id":8018,"nodeType":"Return","src":"14472:16:11"}]},"documentation":{"id":8011,"nodeType":"StructuredDocumentation","src":"14311:81:11","text":" @dev Get all tender IDs\n @return Array of all tender IDs"},"functionSelector":"174f7692","id":8020,"implemented":true,"kind":"function","modifiers":[],"name":"getAllTenderIds","nameLocation":"14406:15:11","nodeType":"FunctionDefinition","parameters":{"id":8012,"nodeType":"ParameterList","parameters":[],"src":"14421:2:11"},"returnParameters":{"id":8016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8015,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8020,"src":"14445:15:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8013,"name":"string","nodeType":"ElementaryTypeName","src":"14445:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8014,"nodeType":"ArrayTypeName","src":"14445:8:11","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"14444:17:11"},"scope":8044,"src":"14397:98:11","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8042,"nodeType":"Block","src":"14675:93:11","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8029,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"14693:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14713:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14705:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8030,"name":"address","nodeType":"ElementaryTypeName","src":"14705:7:11","typeDescriptions":{}}},"id":8033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14705:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14693:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":8035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14717:17:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":8028,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14685:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14685:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8037,"nodeType":"ExpressionStatement","src":"14685:50:11"},{"expression":{"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8038,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"14745:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8039,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8023,"src":"14753:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14745:16:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8041,"nodeType":"ExpressionStatement","src":"14745:16:11"}]},"documentation":{"id":8021,"nodeType":"StructuredDocumentation","src":"14505:107:11","text":" @dev Transfer admin rights to a new address\n @param newAdmin The new admin address"},"functionSelector":"75829def","id":8043,"implemented":true,"kind":"function","modifiers":[{"id":8026,"kind":"modifierInvocation","modifierName":{"id":8025,"name":"onlyAdmin","nameLocations":["14665:9:11"],"nodeType":"IdentifierPath","referencedDeclaration":7201,"src":"14665:9:11"},"nodeType":"ModifierInvocation","src":"14665:9:11"}],"name":"transferAdmin","nameLocation":"14626:13:11","nodeType":"FunctionDefinition","parameters":{"id":8024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8023,"mutability":"mutable","name":"newAdmin","nameLocation":"14648:8:11","nodeType":"VariableDeclaration","scope":8043,"src":"14640:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8022,"name":"address","nodeType":"ElementaryTypeName","src":"14640:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14639:18:11"},"returnParameters":{"id":8027,"nodeType":"ParameterList","parameters":[],"src":"14675:0:11"},"scope":8044,"src":"14617:151:11","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":8045,"src":"155:14615:11","usedErrors":[],"usedEvents":[7154,7163,7170,7180,7189]}],"src":"32:14739:11"},"id":11},"src/contracts/UserAuthentication.sol":{"ast":{"absolutePath":"src/contracts/UserAuthentication.sol","exportedSymbols":{"UserAuthentication":[9076]},"id":9077,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8046,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"UserAuthentication","contractDependencies":[],"contractKind":"contract","documentation":{"id":8047,"nodeType":"StructuredDocumentation","src":"57:111:12","text":" @title UserAuthentication\n @dev Contract for managing user authentication in the TrustChain system"},"fullyImplemented":true,"id":9076,"linearizedBaseContracts":[9076],"name":"UserAuthentication","nameLocation":"178:18:12","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f851a440","id":8049,"mutability":"mutable","name":"admin","nameLocation":"218:5:12","nodeType":"VariableDeclaration","scope":9076,"src":"203:20:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8048,"name":"address","nodeType":"ElementaryTypeName","src":"203:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"UserAuthentication.User","id":8086,"members":[{"constant":false,"id":8051,"mutability":"mutable","name":"id","nameLocation":"263:2:12","nodeType":"VariableDeclaration","scope":8086,"src":"256:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8050,"name":"string","nodeType":"ElementaryTypeName","src":"256:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8053,"mutability":"mutable","name":"name","nameLocation":"282:4:12","nodeType":"VariableDeclaration","scope":8086,"src":"275:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8052,"name":"string","nodeType":"ElementaryTypeName","src":"275:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8055,"mutability":"mutable","name":"username","nameLocation":"303:8:12","nodeType":"VariableDeclaration","scope":8086,"src":"296:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8054,"name":"string","nodeType":"ElementaryTypeName","src":"296:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8057,"mutability":"mutable","name":"email","nameLocation":"328:5:12","nodeType":"VariableDeclaration","scope":8086,"src":"321:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8056,"name":"string","nodeType":"ElementaryTypeName","src":"321:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8059,"mutability":"mutable","name":"role","nameLocation":"350:4:12","nodeType":"VariableDeclaration","scope":8086,"src":"343:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8058,"name":"string","nodeType":"ElementaryTypeName","src":"343:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8061,"mutability":"mutable","name":"isApproved","nameLocation":"401:10:12","nodeType":"VariableDeclaration","scope":8086,"src":"396:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8060,"name":"bool","nodeType":"ElementaryTypeName","src":"396:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8063,"mutability":"mutable","name":"approvalRemark","nameLocation":"428:14:12","nodeType":"VariableDeclaration","scope":8086,"src":"421:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8062,"name":"string","nodeType":"ElementaryTypeName","src":"421:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8065,"mutability":"mutable","name":"createdAt","nameLocation":"460:9:12","nodeType":"VariableDeclaration","scope":8086,"src":"452:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8064,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8067,"mutability":"mutable","name":"companyName","nameLocation":"521:11:12","nodeType":"VariableDeclaration","scope":8086,"src":"514:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8066,"name":"string","nodeType":"ElementaryTypeName","src":"514:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8069,"mutability":"mutable","name":"registrationNumber","nameLocation":"549:18:12","nodeType":"VariableDeclaration","scope":8086,"src":"542:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8068,"name":"string","nodeType":"ElementaryTypeName","src":"542:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8071,"mutability":"mutable","name":"gstNumber","nameLocation":"584:9:12","nodeType":"VariableDeclaration","scope":8086,"src":"577:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8070,"name":"string","nodeType":"ElementaryTypeName","src":"577:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8073,"mutability":"mutable","name":"panNumber","nameLocation":"610:9:12","nodeType":"VariableDeclaration","scope":8086,"src":"603:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8072,"name":"string","nodeType":"ElementaryTypeName","src":"603:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8075,"mutability":"mutable","name":"establishmentYear","nameLocation":"637:17:12","nodeType":"VariableDeclaration","scope":8086,"src":"629:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8074,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8077,"mutability":"mutable","name":"registeredAddress","nameLocation":"671:17:12","nodeType":"VariableDeclaration","scope":8086,"src":"664:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8076,"name":"string","nodeType":"ElementaryTypeName","src":"664:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8079,"mutability":"mutable","name":"state","nameLocation":"705:5:12","nodeType":"VariableDeclaration","scope":8086,"src":"698:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8078,"name":"string","nodeType":"ElementaryTypeName","src":"698:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8081,"mutability":"mutable","name":"city","nameLocation":"727:4:12","nodeType":"VariableDeclaration","scope":8086,"src":"720:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8080,"name":"string","nodeType":"ElementaryTypeName","src":"720:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8083,"mutability":"mutable","name":"pinCode","nameLocation":"748:7:12","nodeType":"VariableDeclaration","scope":8086,"src":"741:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8082,"name":"string","nodeType":"ElementaryTypeName","src":"741:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8085,"mutability":"mutable","name":"bidderType","nameLocation":"772:10:12","nodeType":"VariableDeclaration","scope":8086,"src":"765:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8084,"name":"string","nodeType":"ElementaryTypeName","src":"765:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"User","nameLocation":"241:4:12","nodeType":"StructDefinition","scope":9076,"src":"234:555:12","visibility":"public"},{"constant":false,"functionSelector":"a87430ba","id":8091,"mutability":"mutable","name":"users","nameLocation":"879:5:12","nodeType":"VariableDeclaration","scope":9076,"src":"847:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User)"},"typeName":{"id":8090,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8087,"name":"address","nodeType":"ElementaryTypeName","src":"855:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"847:24:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8089,"nodeType":"UserDefinedTypeName","pathNode":{"id":8088,"name":"User","nameLocations":["866:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":8086,"src":"866:4:12"},"referencedDeclaration":8086,"src":"866:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User"}}},"visibility":"public"},{"constant":false,"functionSelector":"f825f143","id":8095,"mutability":"mutable","name":"usernameToAddress","nameLocation":"976:17:12","nodeType":"VariableDeclaration","scope":9076,"src":"942:51:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"typeName":{"id":8094,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8092,"name":"string","nodeType":"ElementaryTypeName","src":"950:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"942:26:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8093,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"502c9bd5","id":8098,"mutability":"mutable","name":"userAddresses","nameLocation":"1078:13:12","nodeType":"VariableDeclaration","scope":9076,"src":"1061:30:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":8096,"name":"address","nodeType":"ElementaryTypeName","src":"1061:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8097,"nodeType":"ArrayTypeName","src":"1061:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"f309e3f9","id":8102,"mutability":"mutable","name":"usernameExists","nameLocation":"1201:14:12","nodeType":"VariableDeclaration","scope":9076,"src":"1170:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":8101,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8099,"name":"string","nodeType":"ElementaryTypeName","src":"1178:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1170:23:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8100,"name":"bool","nodeType":"ElementaryTypeName","src":"1188:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"509c70f523067009f7db7f46db6956d7af8b679323680dc3821a8bad001ac1e1","id":8112,"name":"UserRegistered","nameLocation":"1246:14:12","nodeType":"EventDefinition","parameters":{"id":8111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8104,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"1277:13:12","nodeType":"VariableDeclaration","scope":8112,"src":"1261:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8103,"name":"address","nodeType":"ElementaryTypeName","src":"1261:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8106,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"1299:2:12","nodeType":"VariableDeclaration","scope":8112,"src":"1292:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8105,"name":"string","nodeType":"ElementaryTypeName","src":"1292:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8108,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"1310:8:12","nodeType":"VariableDeclaration","scope":8112,"src":"1303:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8107,"name":"string","nodeType":"ElementaryTypeName","src":"1303:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8110,"indexed":false,"mutability":"mutable","name":"role","nameLocation":"1327:4:12","nodeType":"VariableDeclaration","scope":8112,"src":"1320:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8109,"name":"string","nodeType":"ElementaryTypeName","src":"1320:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:72:12"},"src":"1240:93:12"},{"anonymous":false,"eventSelector":"d6136f3cad7c60bfc24bbf1548f39f766ca8bce104bf9adde3deb6237dec51df","id":8118,"name":"UserUpdated","nameLocation":"1344:11:12","nodeType":"EventDefinition","parameters":{"id":8117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8114,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"1372:13:12","nodeType":"VariableDeclaration","scope":8118,"src":"1356:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8113,"name":"address","nodeType":"ElementaryTypeName","src":"1356:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8116,"indexed":false,"mutability":"mutable","name":"username","nameLocation":"1394:8:12","nodeType":"VariableDeclaration","scope":8118,"src":"1387:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8115,"name":"string","nodeType":"ElementaryTypeName","src":"1387:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1355:48:12"},"src":"1338:66:12"},{"anonymous":false,"eventSelector":"925b0343b9085747d26a9125c88206057343a6e2db8d4fe70cee25da0220aac1","id":8126,"name":"UserApprovalChanged","nameLocation":"1415:19:12","nodeType":"EventDefinition","parameters":{"id":8125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8120,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"1451:13:12","nodeType":"VariableDeclaration","scope":8126,"src":"1435:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8119,"name":"address","nodeType":"ElementaryTypeName","src":"1435:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8122,"indexed":false,"mutability":"mutable","name":"isApproved","nameLocation":"1471:10:12","nodeType":"VariableDeclaration","scope":8126,"src":"1466:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8121,"name":"bool","nodeType":"ElementaryTypeName","src":"1466:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8124,"indexed":false,"mutability":"mutable","name":"remark","nameLocation":"1490:6:12","nodeType":"VariableDeclaration","scope":8126,"src":"1483:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8123,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1434:63:12"},"src":"1409:89:12"},{"anonymous":false,"eventSelector":"89fcfa7c85bf81269953b23469028afbdb9913b80af31b7c931a42009fb252bd","id":8132,"name":"UserRemoved","nameLocation":"1509:11:12","nodeType":"EventDefinition","parameters":{"id":8131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8128,"indexed":true,"mutability":"mutable","name":"walletAddress","nameLocation":"1537:13:12","nodeType":"VariableDeclaration","scope":8132,"src":"1521:29:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8127,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8130,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"1559:2:12","nodeType":"VariableDeclaration","scope":8132,"src":"1552:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8129,"name":"string","nodeType":"ElementaryTypeName","src":"1552:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1520:42:12"},"src":"1503:60:12"},{"body":{"id":8161,"nodeType":"Block","src":"1611:166:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1629:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1633:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1629:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8137,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"1643:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1629:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":8142,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"1668:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8145,"indexExpression":{"expression":{"id":8143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1674:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1678:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1674:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1668:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8146,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1686:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"1668:22:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1662:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8140,"name":"bytes","nodeType":"ElementaryTypeName","src":"1662:5:12","typeDescriptions":{}}},"id":8147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1662:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":8139,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1652:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1652:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"61646d696e","id":8152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1712:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""}],"id":8151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1706:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8150,"name":"bytes","nodeType":"ElementaryTypeName","src":"1706:5:12","typeDescriptions":{}}},"id":8153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1706:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8149,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1696:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1696:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1652:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1629:92:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e","id":8157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1723:35:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""},"value":"Only admin can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b","typeString":"literal_string \"Only admin can call this function\""}],"id":8134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1621:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1621:138:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8159,"nodeType":"ExpressionStatement","src":"1621:138:12"},{"id":8160,"nodeType":"PlaceholderStatement","src":"1769:1:12"}]},"id":8162,"name":"onlyAdmin","nameLocation":"1599:9:12","nodeType":"ModifierDefinition","parameters":{"id":8133,"nodeType":"ParameterList","parameters":[],"src":"1608:2:12"},"src":"1590:187:12","virtual":false,"visibility":"internal"},{"body":{"id":8181,"nodeType":"Block","src":"1830:101:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8169,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"1854:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8171,"indexExpression":{"id":8170,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8164,"src":"1860:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1854:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1875:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8051,"src":"1854:23:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1848:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8167,"name":"bytes","nodeType":"ElementaryTypeName","src":"1848:5:12","typeDescriptions":{}}},"id":8173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":8174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1879:6:12","memberName":"length","nodeType":"MemberAccess","src":"1848:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1888:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1848:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220646f6573206e6f74206578697374","id":8177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1891:21:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_bde1711cf1e60b048cbfac2eae1e8c9e208b36da2330a29e0e29bfdd8d406ba1","typeString":"literal_string \"User does not exist\""},"value":"User does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bde1711cf1e60b048cbfac2eae1e8c9e208b36da2330a29e0e29bfdd8d406ba1","typeString":"literal_string \"User does not exist\""}],"id":8166,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1840:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1840:73:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8179,"nodeType":"ExpressionStatement","src":"1840:73:12"},{"id":8180,"nodeType":"PlaceholderStatement","src":"1923:1:12"}]},"id":8182,"name":"userExists","nameLocation":"1796:10:12","nodeType":"ModifierDefinition","parameters":{"id":8165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8164,"mutability":"mutable","name":"walletAddress","nameLocation":"1815:13:12","nodeType":"VariableDeclaration","scope":8182,"src":"1807:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8163,"name":"address","nodeType":"ElementaryTypeName","src":"1807:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1806:23:12"},"src":"1787:144:12","virtual":false,"visibility":"internal"},{"body":{"id":8245,"nodeType":"Block","src":"1955:969:12","statements":[{"expression":{"id":8188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8185,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"1965:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8186,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1973:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1977:6:12","memberName":"sender","nodeType":"MemberAccess","src":"1973:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1965:18:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8189,"nodeType":"ExpressionStatement","src":"1965:18:12"},{"expression":{"id":8215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8190,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"2054:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8193,"indexExpression":{"expression":{"id":8191,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2060:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2064:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2060:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2054:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"61646d696e2d31","id":8195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2097:9:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_336b375f05162ccebd465358334a8f8b81f20081f6b7a9ebce0dba6d453d68bb","typeString":"literal_string \"admin-1\""},"value":"admin-1"},{"hexValue":"53797374656d2041646d696e","id":8196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2126:14:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_297007c13abf2da8fa8844b87211734390028f3925f76c71f03a3689cc4551c8","typeString":"literal_string \"System Admin\""},"value":"System Admin"},{"hexValue":"61646d696e","id":8197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2164:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"},{"hexValue":"61646d696e407472757374636861696e2e636f6d","id":8198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2192:22:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_36ec2927c22775af7bdaf29a7ab4c7032fa4771cf2d01b6d00fd1f83809da451","typeString":"literal_string \"admin@trustchain.com\""},"value":"admin@trustchain.com"},{"hexValue":"61646d696e","id":8199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2234:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"},{"hexValue":"74727565","id":8200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2267:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"","id":8201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2301:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"expression":{"id":8202,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2328:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2334:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"2328:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"5472757374436861696e","id":8204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2370:12:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_0357dcdcf3f0e92a106c4617ff6820b38d9ff98f500512b8256220e86dc31985","typeString":"literal_string \"TrustChain\""},"value":"TrustChain"},{"hexValue":"5443303031","id":8205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2416:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_117182bf3e7e370fc1ee30a50ed4647b196450e62fd8862ba1def576e15f482a","typeString":"literal_string \"TC001\""},"value":"TC001"},{"hexValue":"","id":8206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2448:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":8207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2475:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"32303233","id":8208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2510:4:12","typeDescriptions":{"typeIdentifier":"t_rational_2023_by_1","typeString":"int_const 2023"},"value":"2023"},{"hexValue":"426c6f636b636861696e204851","id":8209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2547:15:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_74d57a8c75a99b489ad17d5019e3659a7fba69cf9a0991f1285ac598b4905cb5","typeString":"literal_string \"Blockchain HQ\""},"value":"Blockchain HQ"},{"hexValue":"446563656e7472616c616e64","id":8210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2583:14:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d99c299e753836d0331431d76226e44a3d02048556e6b3ae889db0887b2127","typeString":"literal_string \"Decentraland\""},"value":"Decentraland"},{"hexValue":"43727970746f2043697479","id":8211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2617:13:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_79f271e43867479aad3743fcde66fb643862aadeb1bdf124078eb5b9dceda330","typeString":"literal_string \"Crypto City\""},"value":"Crypto City"},{"hexValue":"303030303030","id":8212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2653:8:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_32b24b313e62a21daec5e28a834966126b4deeabb630f4f68a4fa67b7aa75cfb","typeString":"literal_string \"000000\""},"value":"000000"},{"hexValue":"","id":8213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2687:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_336b375f05162ccebd465358334a8f8b81f20081f6b7a9ebce0dba6d453d68bb","typeString":"literal_string \"admin-1\""},{"typeIdentifier":"t_stringliteral_297007c13abf2da8fa8844b87211734390028f3925f76c71f03a3689cc4551c8","typeString":"literal_string \"System Admin\""},{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},{"typeIdentifier":"t_stringliteral_36ec2927c22775af7bdaf29a7ab4c7032fa4771cf2d01b6d00fd1f83809da451","typeString":"literal_string \"admin@trustchain.com\""},{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_0357dcdcf3f0e92a106c4617ff6820b38d9ff98f500512b8256220e86dc31985","typeString":"literal_string \"TrustChain\""},{"typeIdentifier":"t_stringliteral_117182bf3e7e370fc1ee30a50ed4647b196450e62fd8862ba1def576e15f482a","typeString":"literal_string \"TC001\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_rational_2023_by_1","typeString":"int_const 2023"},{"typeIdentifier":"t_stringliteral_74d57a8c75a99b489ad17d5019e3659a7fba69cf9a0991f1285ac598b4905cb5","typeString":"literal_string \"Blockchain HQ\""},{"typeIdentifier":"t_stringliteral_c5d99c299e753836d0331431d76226e44a3d02048556e6b3ae889db0887b2127","typeString":"literal_string \"Decentraland\""},{"typeIdentifier":"t_stringliteral_79f271e43867479aad3743fcde66fb643862aadeb1bdf124078eb5b9dceda330","typeString":"literal_string \"Crypto City\""},{"typeIdentifier":"t_stringliteral_32b24b313e62a21daec5e28a834966126b4deeabb630f4f68a4fa67b7aa75cfb","typeString":"literal_string \"000000\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":8194,"name":"User","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"2074:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_User_$8086_storage_ptr_$","typeString":"type(struct UserAuthentication.User storage pointer)"}},"id":8214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2093:2:12","2120:4:12","2154:8:12","2185:5:12","2228:4:12","2255:10:12","2285:14:12","2317:9:12","2357:11:12","2396:18:12","2437:9:12","2464:9:12","2491:17:12","2528:17:12","2576:5:12","2611:4:12","2644:7:12","2675:10:12"],"names":["id","name","username","email","role","isApproved","approvalRemark","createdAt","companyName","registrationNumber","gstNumber","panNumber","establishmentYear","registeredAddress","state","city","pinCode","bidderType"],"nodeType":"FunctionCall","src":"2074:626:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"src":"2054:646:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8216,"nodeType":"ExpressionStatement","src":"2054:646:12"},{"expression":{"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8217,"name":"usernameToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"2719:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8219,"indexExpression":{"hexValue":"61646d696e","id":8218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2737:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2719:26:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8220,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2748:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2752:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2748:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2719:39:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8223,"nodeType":"ExpressionStatement","src":"2719:39:12"},{"expression":{"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8224,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"2768:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8226,"indexExpression":{"hexValue":"61646d696e","id":8225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2783:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2768:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2794:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2768:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8229,"nodeType":"ExpressionStatement","src":"2768:30:12"},{"expression":{"arguments":[{"expression":{"id":8233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2827:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2831:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2827:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8230,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"2808:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2822:4:12","memberName":"push","nodeType":"MemberAccess","src":"2808:18:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2808:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8236,"nodeType":"ExpressionStatement","src":"2808:30:12"},{"eventCall":{"arguments":[{"expression":{"id":8238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2877:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2881:6:12","memberName":"sender","nodeType":"MemberAccess","src":"2877:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"61646d696e2d31","id":8240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2889:9:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_336b375f05162ccebd465358334a8f8b81f20081f6b7a9ebce0dba6d453d68bb","typeString":"literal_string \"admin-1\""},"value":"admin-1"},{"hexValue":"61646d696e","id":8241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2900:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"},{"hexValue":"61646d696e","id":8242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2909:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_336b375f05162ccebd465358334a8f8b81f20081f6b7a9ebce0dba6d453d68bb","typeString":"literal_string \"admin-1\""},{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""}],"id":8237,"name":"UserRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8112,"src":"2862:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory,string memory)"}},"id":8243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2862:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8244,"nodeType":"EmitStatement","src":"2857:60:12"}]},"id":8246,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8183,"nodeType":"ParameterList","parameters":[],"src":"1952:2:12"},"returnParameters":{"id":8184,"nodeType":"ParameterList","parameters":[],"src":"1955:0:12"},"scope":9076,"src":"1941:983:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8412,"nodeType":"Block","src":"4158:1568:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8285,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"4292:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4286:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8283,"name":"bytes","nodeType":"ElementaryTypeName","src":"4286:5:12","typeDescriptions":{}}},"id":8286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4286:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8282,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4276:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"6f666669636572","id":8291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4318:9:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1aaef0d35cb26a46bccc715cd62704f9d812dcafe522c449d44d2096f7f5cdc","typeString":"literal_string \"officer\""},"value":"officer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f1aaef0d35cb26a46bccc715cd62704f9d812dcafe522c449d44d2096f7f5cdc","typeString":"literal_string \"officer\""}],"id":8290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4312:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8289,"name":"bytes","nodeType":"ElementaryTypeName","src":"4312:5:12","typeDescriptions":{}}},"id":8292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4312:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8288,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4302:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4276:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8322,"nodeType":"IfStatement","src":"4272:221:12","trueBody":{"id":8321,"nodeType":"Block","src":"4331:162:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4353:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4357:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4353:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8298,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"4367:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4353:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":8303,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"4392:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8306,"indexExpression":{"expression":{"id":8304,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4398:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4402:6:12","memberName":"sender","nodeType":"MemberAccess","src":"4398:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4392:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4410:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"4392:22:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4386:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8301,"name":"bytes","nodeType":"ElementaryTypeName","src":"4386:5:12","typeDescriptions":{}}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4386:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":8300,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4376:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4376:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"61646d696e","id":8313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4436:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""}],"id":8312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4430:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8311,"name":"bytes","nodeType":"ElementaryTypeName","src":"4430:5:12","typeDescriptions":{}}},"id":8314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4430:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8310,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4420:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4420:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4376:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4353:92:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e207265676973746572206f66666963657273","id":8318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4447:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8e54298cd9e82d3be88e694c38c4a896aee6eac553ad244e0701884932df20cf","typeString":"literal_string \"Only admin can register officers\""},"value":"Only admin can register officers"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8e54298cd9e82d3be88e694c38c4a896aee6eac553ad244e0701884932df20cf","typeString":"literal_string \"Only admin can register officers\""}],"id":8295,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4345:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4345:137:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8320,"nodeType":"ExpressionStatement","src":"4345:137:12"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8326,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"4525:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8328,"indexExpression":{"id":8327,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"4531:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4525:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8329,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4546:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8051,"src":"4525:23:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4519:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8324,"name":"bytes","nodeType":"ElementaryTypeName","src":"4519:5:12","typeDescriptions":{}}},"id":8330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4519:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":8331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4550:6:12","memberName":"length","nodeType":"MemberAccess","src":"4519:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4560:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4519:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220616c72656164792065786973747320666f7220746869732061646472657373","id":8334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4563:38:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_275b8d851a235d011480dd3fa5b897d6c78169acf9f24c97b5d5e13372c41bd7","typeString":"literal_string \"User already exists for this address\""},"value":"User already exists for this address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_275b8d851a235d011480dd3fa5b897d6c78169acf9f24c97b5d5e13372c41bd7","typeString":"literal_string \"User already exists for this address\""}],"id":8323,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4511:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4511:91:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8336,"nodeType":"ExpressionStatement","src":"4511:91:12"},{"expression":{"arguments":[{"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4620:25:12","subExpression":{"baseExpression":{"id":8338,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"4621:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8340,"indexExpression":{"id":8339,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"4636:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4621:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365726e616d6520616c726561647920657869737473","id":8342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4647:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""},"value":"Username already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""}],"id":8337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4612:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4612:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8344,"nodeType":"ExpressionStatement","src":"4612:61:12"},{"assignments":[8346],"declarations":[{"constant":false,"id":8346,"mutability":"mutable","name":"isApproved","nameLocation":"4768:10:12","nodeType":"VariableDeclaration","scope":8412,"src":"4763:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8345,"name":"bool","nodeType":"ElementaryTypeName","src":"4763:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":8360,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8350,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"4797:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4791:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8348,"name":"bytes","nodeType":"ElementaryTypeName","src":"4791:5:12","typeDescriptions":{}}},"id":8351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4791:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8347,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4781:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4781:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"6f666669636572","id":8356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4823:9:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1aaef0d35cb26a46bccc715cd62704f9d812dcafe522c449d44d2096f7f5cdc","typeString":"literal_string \"officer\""},"value":"officer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f1aaef0d35cb26a46bccc715cd62704f9d812dcafe522c449d44d2096f7f5cdc","typeString":"literal_string \"officer\""}],"id":8355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4817:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8354,"name":"bytes","nodeType":"ElementaryTypeName","src":"4817:5:12","typeDescriptions":{}}},"id":8357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4817:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8353,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4807:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4807:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4781:53:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4763:71:12"},{"expression":{"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8361,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"4853:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8363,"indexExpression":{"id":8362,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"4859:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4853:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8365,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"4899:2:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8366,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8253,"src":"4921:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8367,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"4949:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8368,"name":"email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8257,"src":"4978:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8369,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"5003:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8370,"name":"isApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8346,"src":"5033:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"","id":8371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5073:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"expression":{"id":8372,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5100:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5106:9:12","memberName":"timestamp","nodeType":"MemberAccess","src":"5100:15:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8374,"name":"companyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8261,"src":"5142:11:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8375,"name":"registrationNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8263,"src":"5187:18:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8376,"name":"gstNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8265,"src":"5230:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8377,"name":"panNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8267,"src":"5264:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8378,"name":"establishmentYear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8269,"src":"5306:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8379,"name":"registeredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"5356:17:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8380,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8273,"src":"5394:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8381,"name":"city","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8275,"src":"5419:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8382,"name":"pinCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8277,"src":"5446:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8383,"name":"bidderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8279,"src":"5479:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8364,"name":"User","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8086,"src":"4876:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_User_$8086_storage_ptr_$","typeString":"type(struct UserAuthentication.User storage pointer)"}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4895:2:12","4915:4:12","4939:8:12","4971:5:12","4997:4:12","5021:10:12","5057:14:12","5089:9:12","5129:11:12","5167:18:12","5219:9:12","5253:9:12","5287:17:12","5337:17:12","5387:5:12","5413:4:12","5437:7:12","5467:10:12"],"names":["id","name","username","email","role","isApproved","approvalRemark","createdAt","companyName","registrationNumber","gstNumber","panNumber","establishmentYear","registeredAddress","state","city","pinCode","bidderType"],"nodeType":"FunctionCall","src":"4876:624:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"src":"4853:647:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8386,"nodeType":"ExpressionStatement","src":"4853:647:12"},{"expression":{"arguments":[{"id":8390,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"5538:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8387,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"5519:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5533:4:12","memberName":"push","nodeType":"MemberAccess","src":"5519:18:12","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8392,"nodeType":"ExpressionStatement","src":"5519:33:12"},{"expression":{"id":8397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8393,"name":"usernameToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"5562:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8395,"indexExpression":{"id":8394,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"5580:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5562:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8396,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"5592:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5562:43:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8398,"nodeType":"ExpressionStatement","src":"5562:43:12"},{"expression":{"id":8403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8399,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"5615:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8401,"indexExpression":{"id":8400,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"5630:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5615:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5642:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5615:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8404,"nodeType":"ExpressionStatement","src":"5615:31:12"},{"eventCall":{"arguments":[{"id":8406,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8249,"src":"5685:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8407,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"5700:2:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8408,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8255,"src":"5704:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8409,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"5714:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8405,"name":"UserRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8112,"src":"5670:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory,string memory,string memory)"}},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5670:49:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8411,"nodeType":"EmitStatement","src":"5665:54:12"}]},"documentation":{"id":8247,"nodeType":"StructuredDocumentation","src":"2934:669:12","text":" @dev Register a new user\n @param walletAddress The user's wallet address\n @param id Unique identifier for the user\n @param name User's name\n @param username User's username\n @param email User's email\n @param role User's role\n @param companyName Company name\n @param registrationNumber Company registration number\n @param gstNumber GST number\n @param panNumber PAN number\n @param establishmentYear Establishment year\n @param registeredAddress Registered address\n @param state State\n @param city City\n @param pinCode Pin code\n @param bidderType Bidder type"},"functionSelector":"9d4d1342","id":8413,"implemented":true,"kind":"function","modifiers":[],"name":"registerUser","nameLocation":"3617:12:12","nodeType":"FunctionDefinition","parameters":{"id":8280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8249,"mutability":"mutable","name":"walletAddress","nameLocation":"3647:13:12","nodeType":"VariableDeclaration","scope":8413,"src":"3639:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8248,"name":"address","nodeType":"ElementaryTypeName","src":"3639:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8251,"mutability":"mutable","name":"id","nameLocation":"3684:2:12","nodeType":"VariableDeclaration","scope":8413,"src":"3670:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8250,"name":"string","nodeType":"ElementaryTypeName","src":"3670:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8253,"mutability":"mutable","name":"name","nameLocation":"3710:4:12","nodeType":"VariableDeclaration","scope":8413,"src":"3696:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8252,"name":"string","nodeType":"ElementaryTypeName","src":"3696:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8255,"mutability":"mutable","name":"username","nameLocation":"3738:8:12","nodeType":"VariableDeclaration","scope":8413,"src":"3724:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8254,"name":"string","nodeType":"ElementaryTypeName","src":"3724:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8257,"mutability":"mutable","name":"email","nameLocation":"3770:5:12","nodeType":"VariableDeclaration","scope":8413,"src":"3756:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8256,"name":"string","nodeType":"ElementaryTypeName","src":"3756:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8259,"mutability":"mutable","name":"role","nameLocation":"3799:4:12","nodeType":"VariableDeclaration","scope":8413,"src":"3785:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8258,"name":"string","nodeType":"ElementaryTypeName","src":"3785:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8261,"mutability":"mutable","name":"companyName","nameLocation":"3827:11:12","nodeType":"VariableDeclaration","scope":8413,"src":"3813:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8260,"name":"string","nodeType":"ElementaryTypeName","src":"3813:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8263,"mutability":"mutable","name":"registrationNumber","nameLocation":"3862:18:12","nodeType":"VariableDeclaration","scope":8413,"src":"3848:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8262,"name":"string","nodeType":"ElementaryTypeName","src":"3848:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8265,"mutability":"mutable","name":"gstNumber","nameLocation":"3904:9:12","nodeType":"VariableDeclaration","scope":8413,"src":"3890:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8264,"name":"string","nodeType":"ElementaryTypeName","src":"3890:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8267,"mutability":"mutable","name":"panNumber","nameLocation":"3937:9:12","nodeType":"VariableDeclaration","scope":8413,"src":"3923:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8266,"name":"string","nodeType":"ElementaryTypeName","src":"3923:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8269,"mutability":"mutable","name":"establishmentYear","nameLocation":"3964:17:12","nodeType":"VariableDeclaration","scope":8413,"src":"3956:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8268,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8271,"mutability":"mutable","name":"registeredAddress","nameLocation":"4005:17:12","nodeType":"VariableDeclaration","scope":8413,"src":"3991:31:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8270,"name":"string","nodeType":"ElementaryTypeName","src":"3991:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8273,"mutability":"mutable","name":"state","nameLocation":"4046:5:12","nodeType":"VariableDeclaration","scope":8413,"src":"4032:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8272,"name":"string","nodeType":"ElementaryTypeName","src":"4032:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8275,"mutability":"mutable","name":"city","nameLocation":"4075:4:12","nodeType":"VariableDeclaration","scope":8413,"src":"4061:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8274,"name":"string","nodeType":"ElementaryTypeName","src":"4061:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8277,"mutability":"mutable","name":"pinCode","nameLocation":"4103:7:12","nodeType":"VariableDeclaration","scope":8413,"src":"4089:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8276,"name":"string","nodeType":"ElementaryTypeName","src":"4089:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8279,"mutability":"mutable","name":"bidderType","nameLocation":"4134:10:12","nodeType":"VariableDeclaration","scope":8413,"src":"4120:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8278,"name":"string","nodeType":"ElementaryTypeName","src":"4120:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3629:521:12"},"returnParameters":{"id":8281,"nodeType":"ParameterList","parameters":[],"src":"4158:0:12"},"scope":9076,"src":"3608:2118:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8538,"nodeType":"Block","src":"6125:1087:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8429,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6213:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6217:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6213:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8431,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"6227:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6213:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":8436,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"6252:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8439,"indexExpression":{"expression":{"id":8437,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6258:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6262:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6258:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6252:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8440,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6270:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"6252:22:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6246:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8434,"name":"bytes","nodeType":"ElementaryTypeName","src":"6246:5:12","typeDescriptions":{}}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6246:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":8433,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6236:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6236:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"61646d696e","id":8446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6296:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""}],"id":8445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6290:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8444,"name":"bytes","nodeType":"ElementaryTypeName","src":"6290:5:12","typeDescriptions":{}}},"id":8447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8443,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6280:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6280:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6236:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6213:92:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8451,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6309:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6313:6:12","memberName":"sender","nodeType":"MemberAccess","src":"6309:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8453,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"6323:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6309:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6213:123:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e206f72207468652075736572207468656d73656c7665732063616e2075706461746520757365722064657461696c73","id":8456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6355:59:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_66de243c4296a0a0910518c31ef9ef408dbe6141cb532f5b01508641ac1e1fa8","typeString":"literal_string \"Only admin or the user themselves can update user details\""},"value":"Only admin or the user themselves can update user details"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_66de243c4296a0a0910518c31ef9ef408dbe6141cb532f5b01508641ac1e1fa8","typeString":"literal_string \"Only admin or the user themselves can update user details\""}],"id":8428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6205:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6205:210:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8458,"nodeType":"ExpressionStatement","src":"6205:210:12"},{"assignments":[8460],"declarations":[{"constant":false,"id":8460,"mutability":"mutable","name":"currentUsername","nameLocation":"6448:15:12","nodeType":"VariableDeclaration","scope":8538,"src":"6434:29:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8459,"name":"string","nodeType":"ElementaryTypeName","src":"6434:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8465,"initialValue":{"expression":{"baseExpression":{"id":8461,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"6466:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8463,"indexExpression":{"id":8462,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"6472:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6466:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6487:8:12","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":8055,"src":"6466:29:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6434:61:12"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":8469,"name":"currentUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"6604:15:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6598:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8467,"name":"bytes","nodeType":"ElementaryTypeName","src":"6598:5:12","typeDescriptions":{}}},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6598:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8466,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6588:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6588:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"id":8475,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"6641:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6635:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8473,"name":"bytes","nodeType":"ElementaryTypeName","src":"6635:5:12","typeDescriptions":{}}},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6635:15:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8472,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"6625:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6625:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6588:63:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8511,"nodeType":"IfStatement","src":"6584:417:12","trueBody":{"id":8510,"nodeType":"Block","src":"6653:348:12","statements":[{"expression":{"arguments":[{"id":8483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6675:25:12","subExpression":{"baseExpression":{"id":8480,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"6676:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8482,"indexExpression":{"id":8481,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"6691:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6676:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365726e616d6520616c726561647920657869737473","id":8484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6702:25:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""},"value":"Username already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c919aa61838e3d4ce5ac4efe3b8b68c8ff4ad3ed8d59d7e29dc69e9ccc6c86e","typeString":"literal_string \"Username already exists\""}],"id":8479,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6667:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6667:61:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8486,"nodeType":"ExpressionStatement","src":"6667:61:12"},{"expression":{"id":8491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8487,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"6742:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8489,"indexExpression":{"id":8488,"name":"currentUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"6757:15:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6742:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6776:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6742:39:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8492,"nodeType":"ExpressionStatement","src":"6742:39:12"},{"expression":{"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8493,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"6795:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8495,"indexExpression":{"id":8494,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"6810:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6795:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6822:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6795:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8498,"nodeType":"ExpressionStatement","src":"6795:31:12"},{"expression":{"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6892:41:12","subExpression":{"baseExpression":{"id":8499,"name":"usernameToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"6899:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8501,"indexExpression":{"id":8500,"name":"currentUsername","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8460,"src":"6917:15:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6899:34:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8503,"nodeType":"ExpressionStatement","src":"6892:41:12"},{"expression":{"id":8508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8504,"name":"usernameToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"6947:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8506,"indexExpression":{"id":8505,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"6965:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6947:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8507,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"6977:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6947:43:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8509,"nodeType":"ExpressionStatement","src":"6947:43:12"}]}},{"expression":{"id":8517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8512,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"7019:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8514,"indexExpression":{"id":8513,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"7025:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7019:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7040:4:12","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":8053,"src":"7019:25:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8516,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"7047:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7019:32:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8518,"nodeType":"ExpressionStatement","src":"7019:32:12"},{"expression":{"id":8524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8519,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"7061:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8521,"indexExpression":{"id":8520,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"7067:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7061:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7082:8:12","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":8055,"src":"7061:29:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8523,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"7093:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7061:40:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8525,"nodeType":"ExpressionStatement","src":"7061:40:12"},{"expression":{"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8526,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"7111:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8528,"indexExpression":{"id":8527,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"7117:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7111:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8529,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7132:5:12","memberName":"email","nodeType":"MemberAccess","referencedDeclaration":8057,"src":"7111:26:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8530,"name":"email","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8422,"src":"7140:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7111:34:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8532,"nodeType":"ExpressionStatement","src":"7111:34:12"},{"eventCall":{"arguments":[{"id":8534,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"7181:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8535,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8420,"src":"7196:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8533,"name":"UserUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"7169:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":8536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7169:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8537,"nodeType":"EmitStatement","src":"7164:41:12"}]},"documentation":{"id":8414,"nodeType":"StructuredDocumentation","src":"5736:205:12","text":" @dev Update an existing user's details\n @param walletAddress The user's wallet address\n @param name New name\n @param username New username\n @param email New email"},"functionSelector":"0da4578b","id":8539,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8425,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"6110:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8426,"kind":"modifierInvocation","modifierName":{"id":8424,"name":"userExists","nameLocations":["6099:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":8182,"src":"6099:10:12"},"nodeType":"ModifierInvocation","src":"6099:25:12"}],"name":"updateUser","nameLocation":"5955:10:12","nodeType":"FunctionDefinition","parameters":{"id":8423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8416,"mutability":"mutable","name":"walletAddress","nameLocation":"5983:13:12","nodeType":"VariableDeclaration","scope":8539,"src":"5975:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8415,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8418,"mutability":"mutable","name":"name","nameLocation":"6020:4:12","nodeType":"VariableDeclaration","scope":8539,"src":"6006:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8417,"name":"string","nodeType":"ElementaryTypeName","src":"6006:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8420,"mutability":"mutable","name":"username","nameLocation":"6048:8:12","nodeType":"VariableDeclaration","scope":8539,"src":"6034:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8419,"name":"string","nodeType":"ElementaryTypeName","src":"6034:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8422,"mutability":"mutable","name":"email","nameLocation":"6080:5:12","nodeType":"VariableDeclaration","scope":8539,"src":"6066:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8421,"name":"string","nodeType":"ElementaryTypeName","src":"6066:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5965:126:12"},"returnParameters":{"id":8427,"nodeType":"ParameterList","parameters":[],"src":"6125:0:12"},"scope":9076,"src":"5946:1266:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8672,"nodeType":"Block","src":"8167:827:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8569,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8255:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8259:6:12","memberName":"sender","nodeType":"MemberAccess","src":"8255:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8571,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"8269:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8255:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":8576,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"8294:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8579,"indexExpression":{"expression":{"id":8577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8300:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8304:6:12","memberName":"sender","nodeType":"MemberAccess","src":"8300:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8294:17:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8312:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"8294:22:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8288:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8574,"name":"bytes","nodeType":"ElementaryTypeName","src":"8288:5:12","typeDescriptions":{}}},"id":8581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8288:29:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":8573,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8278:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8278:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"61646d696e","id":8586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8338:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""}],"id":8585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8332:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8584,"name":"bytes","nodeType":"ElementaryTypeName","src":"8332:5:12","typeDescriptions":{}}},"id":8587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8332:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8583,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8322:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8322:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8278:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8255:92:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8591,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8351:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8355:6:12","memberName":"sender","nodeType":"MemberAccess","src":"8351:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8593,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"8365:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8351:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8255:123:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e206f72207468652075736572207468656d73656c7665732063616e2075706461746520636f6d70616e792064657461696c73","id":8596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8397:62:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1075f13fff0b27d787503aa5a1db3f507f027b19a6a3992855608a8dd1ebdd9","typeString":"literal_string \"Only admin or the user themselves can update company details\""},"value":"Only admin or the user themselves can update company details"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1075f13fff0b27d787503aa5a1db3f507f027b19a6a3992855608a8dd1ebdd9","typeString":"literal_string \"Only admin or the user themselves can update company details\""}],"id":8568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8247:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8247:213:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8598,"nodeType":"ExpressionStatement","src":"8247:213:12"},{"assignments":[8601],"declarations":[{"constant":false,"id":8601,"mutability":"mutable","name":"user","nameLocation":"8492:4:12","nodeType":"VariableDeclaration","scope":8672,"src":"8479:17:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User"},"typeName":{"id":8600,"nodeType":"UserDefinedTypeName","pathNode":{"id":8599,"name":"User","nameLocations":["8479:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":8086,"src":"8479:4:12"},"referencedDeclaration":8086,"src":"8479:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User"}},"visibility":"internal"}],"id":8605,"initialValue":{"baseExpression":{"id":8602,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"8499:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8604,"indexExpression":{"id":8603,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"8505:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8499:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8479:40:12"},{"expression":{"id":8610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8606,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8538:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8543:11:12","memberName":"companyName","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"8538:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8609,"name":"companyName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8544,"src":"8557:11:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8538:30:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8611,"nodeType":"ExpressionStatement","src":"8538:30:12"},{"expression":{"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8612,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8578:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8583:18:12","memberName":"registrationNumber","nodeType":"MemberAccess","referencedDeclaration":8069,"src":"8578:23:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8615,"name":"registrationNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"8604:18:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8578:44:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8617,"nodeType":"ExpressionStatement","src":"8578:44:12"},{"expression":{"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8618,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8632:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8637:9:12","memberName":"gstNumber","nodeType":"MemberAccess","referencedDeclaration":8071,"src":"8632:14:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8621,"name":"gstNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8548,"src":"8649:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8632:26:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8623,"nodeType":"ExpressionStatement","src":"8632:26:12"},{"expression":{"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8624,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8668:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8673:9:12","memberName":"panNumber","nodeType":"MemberAccess","referencedDeclaration":8073,"src":"8668:14:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8627,"name":"panNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8550,"src":"8685:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8668:26:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8629,"nodeType":"ExpressionStatement","src":"8668:26:12"},{"expression":{"id":8634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8630,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8704:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8709:17:12","memberName":"establishmentYear","nodeType":"MemberAccess","referencedDeclaration":8075,"src":"8704:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8633,"name":"establishmentYear","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8552,"src":"8729:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8704:42:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8635,"nodeType":"ExpressionStatement","src":"8704:42:12"},{"expression":{"id":8640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8636,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8756:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8761:17:12","memberName":"registeredAddress","nodeType":"MemberAccess","referencedDeclaration":8077,"src":"8756:22:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8639,"name":"registeredAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8554,"src":"8781:17:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8756:42:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8641,"nodeType":"ExpressionStatement","src":"8756:42:12"},{"expression":{"id":8646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8642,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8808:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8813:5:12","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":8079,"src":"8808:10:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8645,"name":"state","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8556,"src":"8821:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8808:18:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8647,"nodeType":"ExpressionStatement","src":"8808:18:12"},{"expression":{"id":8652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8648,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8836:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8841:4:12","memberName":"city","nodeType":"MemberAccess","referencedDeclaration":8081,"src":"8836:9:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8651,"name":"city","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8558,"src":"8848:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8836:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8653,"nodeType":"ExpressionStatement","src":"8836:16:12"},{"expression":{"id":8658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8654,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8862:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8656,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8867:7:12","memberName":"pinCode","nodeType":"MemberAccess","referencedDeclaration":8083,"src":"8862:12:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8657,"name":"pinCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8560,"src":"8877:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8862:22:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8659,"nodeType":"ExpressionStatement","src":"8862:22:12"},{"expression":{"id":8664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8660,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8894:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8899:10:12","memberName":"bidderType","nodeType":"MemberAccess","referencedDeclaration":8085,"src":"8894:15:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8663,"name":"bidderType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8562,"src":"8912:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"8894:28:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8665,"nodeType":"ExpressionStatement","src":"8894:28:12"},{"eventCall":{"arguments":[{"id":8667,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"8958:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8668,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8601,"src":"8973:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User storage pointer"}},"id":8669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8978:8:12","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":8055,"src":"8973:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8666,"name":"UserUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"8946:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":8670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8671,"nodeType":"EmitStatement","src":"8941:46:12"}]},"documentation":{"id":8540,"nodeType":"StructuredDocumentation","src":"7222:499:12","text":" @dev Update a user's company details\n @param walletAddress The user's wallet address\n @param companyName Company name\n @param registrationNumber Company registration number\n @param gstNumber GST number\n @param panNumber PAN number\n @param establishmentYear Establishment year\n @param registeredAddress Registered address\n @param state State\n @param city City\n @param pinCode Pin code\n @param bidderType Bidder type"},"functionSelector":"37a1bba2","id":8673,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":8565,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8542,"src":"8152:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8566,"kind":"modifierInvocation","modifierName":{"id":8564,"name":"userExists","nameLocations":["8141:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":8182,"src":"8141:10:12"},"nodeType":"ModifierInvocation","src":"8141:25:12"}],"name":"updateCompanyDetails","nameLocation":"7735:20:12","nodeType":"FunctionDefinition","parameters":{"id":8563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8542,"mutability":"mutable","name":"walletAddress","nameLocation":"7773:13:12","nodeType":"VariableDeclaration","scope":8673,"src":"7765:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8541,"name":"address","nodeType":"ElementaryTypeName","src":"7765:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8544,"mutability":"mutable","name":"companyName","nameLocation":"7810:11:12","nodeType":"VariableDeclaration","scope":8673,"src":"7796:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8543,"name":"string","nodeType":"ElementaryTypeName","src":"7796:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8546,"mutability":"mutable","name":"registrationNumber","nameLocation":"7845:18:12","nodeType":"VariableDeclaration","scope":8673,"src":"7831:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8545,"name":"string","nodeType":"ElementaryTypeName","src":"7831:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8548,"mutability":"mutable","name":"gstNumber","nameLocation":"7887:9:12","nodeType":"VariableDeclaration","scope":8673,"src":"7873:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8547,"name":"string","nodeType":"ElementaryTypeName","src":"7873:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8550,"mutability":"mutable","name":"panNumber","nameLocation":"7920:9:12","nodeType":"VariableDeclaration","scope":8673,"src":"7906:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8549,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8552,"mutability":"mutable","name":"establishmentYear","nameLocation":"7947:17:12","nodeType":"VariableDeclaration","scope":8673,"src":"7939:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8551,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8554,"mutability":"mutable","name":"registeredAddress","nameLocation":"7988:17:12","nodeType":"VariableDeclaration","scope":8673,"src":"7974:31:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8553,"name":"string","nodeType":"ElementaryTypeName","src":"7974:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8556,"mutability":"mutable","name":"state","nameLocation":"8029:5:12","nodeType":"VariableDeclaration","scope":8673,"src":"8015:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8555,"name":"string","nodeType":"ElementaryTypeName","src":"8015:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8558,"mutability":"mutable","name":"city","nameLocation":"8058:4:12","nodeType":"VariableDeclaration","scope":8673,"src":"8044:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8557,"name":"string","nodeType":"ElementaryTypeName","src":"8044:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8560,"mutability":"mutable","name":"pinCode","nameLocation":"8086:7:12","nodeType":"VariableDeclaration","scope":8673,"src":"8072:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8559,"name":"string","nodeType":"ElementaryTypeName","src":"8072:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8562,"mutability":"mutable","name":"bidderType","nameLocation":"8117:10:12","nodeType":"VariableDeclaration","scope":8673,"src":"8103:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8561,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7755:378:12"},"returnParameters":{"id":8567,"nodeType":"ParameterList","parameters":[],"src":"8167:0:12"},"scope":9076,"src":"7726:1268:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8708,"nodeType":"Block","src":"9362:193:12","statements":[{"expression":{"id":8693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8688,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"9372:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8690,"indexExpression":{"id":8689,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"9378:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9372:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9393:10:12","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":8061,"src":"9372:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8692,"name":"isApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"9406:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9372:44:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8694,"nodeType":"ExpressionStatement","src":"9372:44:12"},{"expression":{"id":8700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8695,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"9426:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8697,"indexExpression":{"id":8696,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"9432:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9426:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9447:14:12","memberName":"approvalRemark","nodeType":"MemberAccess","referencedDeclaration":8063,"src":"9426:35:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8699,"name":"remark","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"9464:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9426:44:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8701,"nodeType":"ExpressionStatement","src":"9426:44:12"},{"eventCall":{"arguments":[{"id":8703,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"9514:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8704,"name":"isApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"9529:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8705,"name":"remark","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8680,"src":"9541:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8702,"name":"UserApprovalChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8126,"src":"9494:19:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,bool,string memory)"}},"id":8706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9494:54:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8707,"nodeType":"EmitStatement","src":"9489:59:12"}]},"documentation":{"id":8674,"nodeType":"StructuredDocumentation","src":"9004:193:12","text":" @dev Approve or reject a user\n @param walletAddress The user's wallet address\n @param isApproved Approval status\n @param remark Approval or rejection remark"},"functionSelector":"b979cc2f","id":8709,"implemented":true,"kind":"function","modifiers":[{"id":8683,"kind":"modifierInvocation","modifierName":{"id":8682,"name":"onlyAdmin","nameLocations":["9326:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":8162,"src":"9326:9:12"},"nodeType":"ModifierInvocation","src":"9326:9:12"},{"arguments":[{"id":8685,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8676,"src":"9347:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8686,"kind":"modifierInvocation","modifierName":{"id":8684,"name":"userExists","nameLocations":["9336:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":8182,"src":"9336:10:12"},"nodeType":"ModifierInvocation","src":"9336:25:12"}],"name":"setUserApproval","nameLocation":"9211:15:12","nodeType":"FunctionDefinition","parameters":{"id":8681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8676,"mutability":"mutable","name":"walletAddress","nameLocation":"9244:13:12","nodeType":"VariableDeclaration","scope":8709,"src":"9236:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8675,"name":"address","nodeType":"ElementaryTypeName","src":"9236:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8678,"mutability":"mutable","name":"isApproved","nameLocation":"9272:10:12","nodeType":"VariableDeclaration","scope":8709,"src":"9267:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8677,"name":"bool","nodeType":"ElementaryTypeName","src":"9267:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8680,"mutability":"mutable","name":"remark","nameLocation":"9306:6:12","nodeType":"VariableDeclaration","scope":8709,"src":"9292:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8679,"name":"string","nodeType":"ElementaryTypeName","src":"9292:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9226:92:12"},"returnParameters":{"id":8687,"nodeType":"ParameterList","parameters":[],"src":"9362:0:12"},"scope":9076,"src":"9202:353:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8792,"nodeType":"Block","src":"9747:763:12","statements":[{"assignments":[8721],"declarations":[{"constant":false,"id":8721,"mutability":"mutable","name":"username","nameLocation":"9771:8:12","nodeType":"VariableDeclaration","scope":8792,"src":"9757:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8720,"name":"string","nodeType":"ElementaryTypeName","src":"9757:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8726,"initialValue":{"expression":{"baseExpression":{"id":8722,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"9782:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8724,"indexExpression":{"id":8723,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"9788:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9782:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9803:8:12","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":8055,"src":"9782:29:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9757:54:12"},{"assignments":[8728],"declarations":[{"constant":false,"id":8728,"mutability":"mutable","name":"id","nameLocation":"9835:2:12","nodeType":"VariableDeclaration","scope":8792,"src":"9821:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8727,"name":"string","nodeType":"ElementaryTypeName","src":"9821:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8733,"initialValue":{"expression":{"baseExpression":{"id":8729,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"9840:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8731,"indexExpression":{"id":8730,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"9846:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9840:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9861:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8051,"src":"9840:23:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9821:42:12"},{"expression":{"id":8737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9923:34:12","subExpression":{"baseExpression":{"id":8734,"name":"usernameToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"9930:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8736,"indexExpression":{"id":8735,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"9948:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9930:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8738,"nodeType":"ExpressionStatement","src":"9923:34:12"},{"expression":{"id":8743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8739,"name":"usernameExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8102,"src":"9967:14:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8741,"indexExpression":{"id":8740,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8721,"src":"9982:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9967:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":8742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9994:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9967:32:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8744,"nodeType":"ExpressionStatement","src":"9967:32:12"},{"body":{"id":8780,"nodeType":"Block","src":"10105:271:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":8756,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10123:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8758,"indexExpression":{"id":8757,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"10137:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10123:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":8759,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"10143:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10123:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8779,"nodeType":"IfStatement","src":"10119:247:12","trueBody":{"id":8778,"nodeType":"Block","src":"10158:208:12","statements":[{"expression":{"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8761,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10233:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8763,"indexExpression":{"id":8762,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"10247:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10233:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":8764,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10252:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8769,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8765,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10266:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10280:6:12","memberName":"length","nodeType":"MemberAccess","src":"10266:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":8767,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10266:24:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10252:39:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10233:58:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8771,"nodeType":"ExpressionStatement","src":"10233:58:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8772,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10309:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10323:3:12","memberName":"pop","nodeType":"MemberAccess","src":"10309:17:12","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":8775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10309:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8776,"nodeType":"ExpressionStatement","src":"10309:19:12"},{"id":8777,"nodeType":"Break","src":"10346:5:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8749,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"10074:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":8750,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10078:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10092:6:12","memberName":"length","nodeType":"MemberAccess","src":"10078:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10074:24:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8781,"initializationExpression":{"assignments":[8746],"declarations":[{"constant":false,"id":8746,"mutability":"mutable","name":"i","nameLocation":"10067:1:12","nodeType":"VariableDeclaration","scope":8781,"src":"10062:6:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8745,"name":"uint","nodeType":"ElementaryTypeName","src":"10062:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8748,"initialValue":{"hexValue":"30","id":8747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10071:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10062:10:12"},"loopExpression":{"expression":{"id":8754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10100:3:12","subExpression":{"id":8753,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8746,"src":"10100:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8755,"nodeType":"ExpressionStatement","src":"10100:3:12"},"nodeType":"ForStatement","src":"10057:319:12"},{"expression":{"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10422:27:12","subExpression":{"baseExpression":{"id":8782,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"10429:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8784,"indexExpression":{"id":8783,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"10435:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10429:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8786,"nodeType":"ExpressionStatement","src":"10422:27:12"},{"eventCall":{"arguments":[{"id":8788,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"10485:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8789,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8728,"src":"10500:2:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8787,"name":"UserRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8132,"src":"10473:11:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (address,string memory)"}},"id":8790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8791,"nodeType":"EmitStatement","src":"10468:35:12"}]},"documentation":{"id":8710,"nodeType":"StructuredDocumentation","src":"9565:91:12","text":" @dev Remove a user\n @param walletAddress The user's wallet address"},"functionSelector":"98575188","id":8793,"implemented":true,"kind":"function","modifiers":[{"id":8715,"kind":"modifierInvocation","modifierName":{"id":8714,"name":"onlyAdmin","nameLocations":["9711:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":8162,"src":"9711:9:12"},"nodeType":"ModifierInvocation","src":"9711:9:12"},{"arguments":[{"id":8717,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8712,"src":"9732:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8718,"kind":"modifierInvocation","modifierName":{"id":8716,"name":"userExists","nameLocations":["9721:10:12"],"nodeType":"IdentifierPath","referencedDeclaration":8182,"src":"9721:10:12"},"nodeType":"ModifierInvocation","src":"9721:25:12"}],"name":"removeUser","nameLocation":"9670:10:12","nodeType":"FunctionDefinition","parameters":{"id":8713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8712,"mutability":"mutable","name":"walletAddress","nameLocation":"9689:13:12","nodeType":"VariableDeclaration","scope":8793,"src":"9681:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8711,"name":"address","nodeType":"ElementaryTypeName","src":"9681:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9680:23:12"},"returnParameters":{"id":8719,"nodeType":"ParameterList","parameters":[],"src":"9747:0:12"},"scope":9076,"src":"9661:849:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8840,"nodeType":"Block","src":"11249:291:12","statements":[{"assignments":[8817],"declarations":[{"constant":false,"id":8817,"mutability":"mutable","name":"user","nameLocation":"11271:4:12","nodeType":"VariableDeclaration","scope":8840,"src":"11259:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User"},"typeName":{"id":8816,"nodeType":"UserDefinedTypeName","pathNode":{"id":8815,"name":"User","nameLocations":["11259:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":8086,"src":"11259:4:12"},"referencedDeclaration":8086,"src":"11259:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User"}},"visibility":"internal"}],"id":8821,"initialValue":{"baseExpression":{"id":8818,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"11278:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8820,"indexExpression":{"id":8819,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"11284:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11278:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11259:39:12"},{"expression":{"components":[{"expression":{"id":8822,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11329:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11334:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8051,"src":"11329:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8824,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11350:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11355:4:12","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":8053,"src":"11350:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8826,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11373:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11378:8:12","memberName":"username","nodeType":"MemberAccess","referencedDeclaration":8055,"src":"11373:13:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8828,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11400:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8829,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11405:5:12","memberName":"email","nodeType":"MemberAccess","referencedDeclaration":8057,"src":"11400:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8830,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11424:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11429:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"11424:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8832,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11447:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11452:10:12","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":8061,"src":"11447:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8834,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11476:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8835,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11481:14:12","memberName":"approvalRemark","nodeType":"MemberAccess","referencedDeclaration":8063,"src":"11476:19:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8836,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"11509:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11514:9:12","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":8065,"src":"11509:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11315:218:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(string memory,string memory,string memory,string memory,string memory,bool,string memory,uint256)"}},"functionReturnParameters":8814,"id":8839,"nodeType":"Return","src":"11308:225:12"}]},"documentation":{"id":8794,"nodeType":"StructuredDocumentation","src":"10520:415:12","text":" @dev Get user details by wallet address\n @param walletAddress The user's wallet address\n @return id User ID\n @return name User name\n @return username User username\n @return email User email\n @return role User role\n @return isApproved User approval status\n @return approvalRemark User approval remark\n @return createdAt User creation timestamp"},"functionSelector":"69c212f6","id":8841,"implemented":true,"kind":"function","modifiers":[],"name":"getUserByAddress","nameLocation":"10949:16:12","nodeType":"FunctionDefinition","parameters":{"id":8797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8796,"mutability":"mutable","name":"walletAddress","nameLocation":"10974:13:12","nodeType":"VariableDeclaration","scope":8841,"src":"10966:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8795,"name":"address","nodeType":"ElementaryTypeName","src":"10966:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10965:23:12"},"returnParameters":{"id":8814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8799,"mutability":"mutable","name":"id","nameLocation":"11033:2:12","nodeType":"VariableDeclaration","scope":8841,"src":"11019:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8798,"name":"string","nodeType":"ElementaryTypeName","src":"11019:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8801,"mutability":"mutable","name":"name","nameLocation":"11059:4:12","nodeType":"VariableDeclaration","scope":8841,"src":"11045:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8800,"name":"string","nodeType":"ElementaryTypeName","src":"11045:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8803,"mutability":"mutable","name":"username","nameLocation":"11087:8:12","nodeType":"VariableDeclaration","scope":8841,"src":"11073:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8802,"name":"string","nodeType":"ElementaryTypeName","src":"11073:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8805,"mutability":"mutable","name":"email","nameLocation":"11119:5:12","nodeType":"VariableDeclaration","scope":8841,"src":"11105:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8804,"name":"string","nodeType":"ElementaryTypeName","src":"11105:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8807,"mutability":"mutable","name":"role","nameLocation":"11148:4:12","nodeType":"VariableDeclaration","scope":8841,"src":"11134:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8806,"name":"string","nodeType":"ElementaryTypeName","src":"11134:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8809,"mutability":"mutable","name":"isApproved","nameLocation":"11167:10:12","nodeType":"VariableDeclaration","scope":8841,"src":"11162:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8808,"name":"bool","nodeType":"ElementaryTypeName","src":"11162:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8811,"mutability":"mutable","name":"approvalRemark","nameLocation":"11201:14:12","nodeType":"VariableDeclaration","scope":8841,"src":"11187:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8810,"name":"string","nodeType":"ElementaryTypeName","src":"11187:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8813,"mutability":"mutable","name":"createdAt","nameLocation":"11233:9:12","nodeType":"VariableDeclaration","scope":8841,"src":"11225:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8812,"name":"uint256","nodeType":"ElementaryTypeName","src":"11225:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11009:239:12"},"scope":9076,"src":"10940:600:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8903,"nodeType":"Block","src":"12280:421:12","statements":[{"assignments":[8864],"declarations":[{"constant":false,"id":8864,"mutability":"mutable","name":"userAddress","nameLocation":"12298:11:12","nodeType":"VariableDeclaration","scope":8903,"src":"12290:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8863,"name":"address","nodeType":"ElementaryTypeName","src":"12290:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":8868,"initialValue":{"baseExpression":{"id":8865,"name":"usernameToAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8095,"src":"12312:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_address_$","typeString":"mapping(string memory => address)"}},"id":8867,"indexExpression":{"id":8866,"name":"username","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8844,"src":"12330:8:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12312:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12290:49:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8870,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8864,"src":"12357:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12380:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12372:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8871,"name":"address","nodeType":"ElementaryTypeName","src":"12372:7:12","typeDescriptions":{}}},"id":8874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12372:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12357:25:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365726e616d65206e6f7420666f756e64","id":8876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12384:20:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_61955635717c60acb26c7a335cb45d1fe39c25ddc58f1380f10e2f524c5ac727","typeString":"literal_string \"Username not found\""},"value":"Username not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_61955635717c60acb26c7a335cb45d1fe39c25ddc58f1380f10e2f524c5ac727","typeString":"literal_string \"Username not found\""}],"id":8869,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12349:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12349:56:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8878,"nodeType":"ExpressionStatement","src":"12349:56:12"},{"assignments":[8881],"declarations":[{"constant":false,"id":8881,"mutability":"mutable","name":"user","nameLocation":"12436:4:12","nodeType":"VariableDeclaration","scope":8903,"src":"12424:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User"},"typeName":{"id":8880,"nodeType":"UserDefinedTypeName","pathNode":{"id":8879,"name":"User","nameLocations":["12424:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":8086,"src":"12424:4:12"},"referencedDeclaration":8086,"src":"12424:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User"}},"visibility":"internal"}],"id":8885,"initialValue":{"baseExpression":{"id":8882,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"12443:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8884,"indexExpression":{"id":8883,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8864,"src":"12449:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12443:18:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12424:37:12"},{"expression":{"components":[{"id":8886,"name":"userAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8864,"src":"12492:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8887,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12517:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12522:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8051,"src":"12517:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8889,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12538:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12543:4:12","memberName":"name","nodeType":"MemberAccess","referencedDeclaration":8053,"src":"12538:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8891,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12561:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12566:5:12","memberName":"email","nodeType":"MemberAccess","referencedDeclaration":8057,"src":"12561:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8893,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12585:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12590:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"12585:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8895,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12608:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12613:10:12","memberName":"isApproved","nodeType":"MemberAccess","referencedDeclaration":8061,"src":"12608:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8897,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12637:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12642:14:12","memberName":"approvalRemark","nodeType":"MemberAccess","referencedDeclaration":8063,"src":"12637:19:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8899,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"12670:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12675:9:12","memberName":"createdAt","nodeType":"MemberAccess","referencedDeclaration":8065,"src":"12670:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12478:216:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$_t_string_memory_ptr_$_t_uint256_$","typeString":"tuple(address,string memory,string memory,string memory,string memory,bool,string memory,uint256)"}},"functionReturnParameters":8862,"id":8902,"nodeType":"Return","src":"12471:223:12"}]},"documentation":{"id":8842,"nodeType":"StructuredDocumentation","src":"11550:415:12","text":" @dev Get user details by username\n @param username The username to look up\n @return walletAddress User's wallet address\n @return id User ID\n @return name User name\n @return email User email\n @return role User role\n @return isApproved User approval status\n @return approvalRemark User approval remark\n @return createdAt User creation timestamp"},"functionSelector":"9f42af63","id":8904,"implemented":true,"kind":"function","modifiers":[],"name":"getUserByUsername","nameLocation":"11979:17:12","nodeType":"FunctionDefinition","parameters":{"id":8845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8844,"mutability":"mutable","name":"username","nameLocation":"12011:8:12","nodeType":"VariableDeclaration","scope":8904,"src":"11997:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8843,"name":"string","nodeType":"ElementaryTypeName","src":"11997:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11996:24:12"},"returnParameters":{"id":8862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8847,"mutability":"mutable","name":"walletAddress","nameLocation":"12059:13:12","nodeType":"VariableDeclaration","scope":8904,"src":"12051:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8846,"name":"address","nodeType":"ElementaryTypeName","src":"12051:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8849,"mutability":"mutable","name":"id","nameLocation":"12096:2:12","nodeType":"VariableDeclaration","scope":8904,"src":"12082:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8848,"name":"string","nodeType":"ElementaryTypeName","src":"12082:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8851,"mutability":"mutable","name":"name","nameLocation":"12122:4:12","nodeType":"VariableDeclaration","scope":8904,"src":"12108:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8850,"name":"string","nodeType":"ElementaryTypeName","src":"12108:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8853,"mutability":"mutable","name":"email","nameLocation":"12150:5:12","nodeType":"VariableDeclaration","scope":8904,"src":"12136:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8852,"name":"string","nodeType":"ElementaryTypeName","src":"12136:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8855,"mutability":"mutable","name":"role","nameLocation":"12179:4:12","nodeType":"VariableDeclaration","scope":8904,"src":"12165:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8854,"name":"string","nodeType":"ElementaryTypeName","src":"12165:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8857,"mutability":"mutable","name":"isApproved","nameLocation":"12198:10:12","nodeType":"VariableDeclaration","scope":8904,"src":"12193:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8856,"name":"bool","nodeType":"ElementaryTypeName","src":"12193:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8859,"mutability":"mutable","name":"approvalRemark","nameLocation":"12232:14:12","nodeType":"VariableDeclaration","scope":8904,"src":"12218:28:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8858,"name":"string","nodeType":"ElementaryTypeName","src":"12218:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8861,"mutability":"mutable","name":"createdAt","nameLocation":"12264:9:12","nodeType":"VariableDeclaration","scope":8904,"src":"12256:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8860,"name":"uint256","nodeType":"ElementaryTypeName","src":"12256:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12041:238:12"},"scope":9076,"src":"11970:731:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8959,"nodeType":"Block","src":"13628:380:12","statements":[{"assignments":[8932],"declarations":[{"constant":false,"id":8932,"mutability":"mutable","name":"user","nameLocation":"13650:4:12","nodeType":"VariableDeclaration","scope":8959,"src":"13638:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User"},"typeName":{"id":8931,"nodeType":"UserDefinedTypeName","pathNode":{"id":8930,"name":"User","nameLocations":["13638:4:12"],"nodeType":"IdentifierPath","referencedDeclaration":8086,"src":"13638:4:12"},"referencedDeclaration":8086,"src":"13638:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage_ptr","typeString":"struct UserAuthentication.User"}},"visibility":"internal"}],"id":8936,"initialValue":{"baseExpression":{"id":8933,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"13657:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8935,"indexExpression":{"id":8934,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8907,"src":"13663:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13657:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"nodeType":"VariableDeclarationStatement","src":"13638:39:12"},{"expression":{"components":[{"expression":{"id":8937,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13708:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13713:11:12","memberName":"companyName","nodeType":"MemberAccess","referencedDeclaration":8067,"src":"13708:16:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8939,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13738:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13743:18:12","memberName":"registrationNumber","nodeType":"MemberAccess","referencedDeclaration":8069,"src":"13738:23:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8941,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13775:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13780:9:12","memberName":"gstNumber","nodeType":"MemberAccess","referencedDeclaration":8071,"src":"13775:14:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8943,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13803:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8944,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13808:9:12","memberName":"panNumber","nodeType":"MemberAccess","referencedDeclaration":8073,"src":"13803:14:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8945,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13831:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13836:17:12","memberName":"establishmentYear","nodeType":"MemberAccess","referencedDeclaration":8075,"src":"13831:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8947,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13867:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13872:17:12","memberName":"registeredAddress","nodeType":"MemberAccess","referencedDeclaration":8077,"src":"13867:22:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8949,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13903:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8950,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13908:5:12","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":8079,"src":"13903:10:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8951,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13927:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13932:4:12","memberName":"city","nodeType":"MemberAccess","referencedDeclaration":8081,"src":"13927:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8953,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13950:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13955:7:12","memberName":"pinCode","nodeType":"MemberAccess","referencedDeclaration":8083,"src":"13950:12:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8955,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8932,"src":"13976:4:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_memory_ptr","typeString":"struct UserAuthentication.User memory"}},"id":8956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13981:10:12","memberName":"bidderType","nodeType":"MemberAccess","referencedDeclaration":8085,"src":"13976:15:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":8957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13694:307:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(string memory,string memory,string memory,string memory,uint256,string memory,string memory,string memory,string memory,string memory)"}},"functionReturnParameters":8929,"id":8958,"nodeType":"Return","src":"13687:314:12"}]},"documentation":{"id":8905,"nodeType":"StructuredDocumentation","src":"12711:494:12","text":" @dev Get user company details\n @param walletAddress The user's wallet address\n @return companyName Company name\n @return registrationNumber Registration number\n @return gstNumber GST number\n @return panNumber PAN number\n @return establishmentYear Establishment year\n @return registeredAddress Registered address\n @return state State\n @return city City\n @return pinCode Pin code\n @return bidderType Bidder type"},"functionSelector":"0558d3e9","id":8960,"implemented":true,"kind":"function","modifiers":[],"name":"getCompanyDetails","nameLocation":"13219:17:12","nodeType":"FunctionDefinition","parameters":{"id":8908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8907,"mutability":"mutable","name":"walletAddress","nameLocation":"13245:13:12","nodeType":"VariableDeclaration","scope":8960,"src":"13237:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8906,"name":"address","nodeType":"ElementaryTypeName","src":"13237:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13236:23:12"},"returnParameters":{"id":8929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8910,"mutability":"mutable","name":"companyName","nameLocation":"13304:11:12","nodeType":"VariableDeclaration","scope":8960,"src":"13290:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8909,"name":"string","nodeType":"ElementaryTypeName","src":"13290:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8912,"mutability":"mutable","name":"registrationNumber","nameLocation":"13339:18:12","nodeType":"VariableDeclaration","scope":8960,"src":"13325:32:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8911,"name":"string","nodeType":"ElementaryTypeName","src":"13325:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8914,"mutability":"mutable","name":"gstNumber","nameLocation":"13381:9:12","nodeType":"VariableDeclaration","scope":8960,"src":"13367:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8913,"name":"string","nodeType":"ElementaryTypeName","src":"13367:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8916,"mutability":"mutable","name":"panNumber","nameLocation":"13414:9:12","nodeType":"VariableDeclaration","scope":8960,"src":"13400:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8915,"name":"string","nodeType":"ElementaryTypeName","src":"13400:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8918,"mutability":"mutable","name":"establishmentYear","nameLocation":"13441:17:12","nodeType":"VariableDeclaration","scope":8960,"src":"13433:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8917,"name":"uint256","nodeType":"ElementaryTypeName","src":"13433:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8920,"mutability":"mutable","name":"registeredAddress","nameLocation":"13482:17:12","nodeType":"VariableDeclaration","scope":8960,"src":"13468:31:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8919,"name":"string","nodeType":"ElementaryTypeName","src":"13468:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8922,"mutability":"mutable","name":"state","nameLocation":"13523:5:12","nodeType":"VariableDeclaration","scope":8960,"src":"13509:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8921,"name":"string","nodeType":"ElementaryTypeName","src":"13509:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8924,"mutability":"mutable","name":"city","nameLocation":"13552:4:12","nodeType":"VariableDeclaration","scope":8960,"src":"13538:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8923,"name":"string","nodeType":"ElementaryTypeName","src":"13538:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8926,"mutability":"mutable","name":"pinCode","nameLocation":"13580:7:12","nodeType":"VariableDeclaration","scope":8960,"src":"13566:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8925,"name":"string","nodeType":"ElementaryTypeName","src":"13566:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8928,"mutability":"mutable","name":"bidderType","nameLocation":"13611:10:12","nodeType":"VariableDeclaration","scope":8960,"src":"13597:24:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8927,"name":"string","nodeType":"ElementaryTypeName","src":"13597:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13280:347:12"},"scope":9076,"src":"13210:798:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8979,"nodeType":"Block","src":"14243:65:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"baseExpression":{"id":8970,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"14266:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8972,"indexExpression":{"id":8971,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8963,"src":"14272:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14266:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14287:2:12","memberName":"id","nodeType":"MemberAccess","referencedDeclaration":8051,"src":"14266:23:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14260:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8968,"name":"bytes","nodeType":"ElementaryTypeName","src":"14260:5:12","typeDescriptions":{}}},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14260:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14291:6:12","memberName":"length","nodeType":"MemberAccess","src":"14260:37:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14300:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14260:41:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8967,"id":8978,"nodeType":"Return","src":"14253:48:12"}]},"documentation":{"id":8961,"nodeType":"StructuredDocumentation","src":"14018:154:12","text":" @dev Check if an address is a user\n @param walletAddress The wallet address to check\n @return true if the address is a user"},"functionSelector":"4209fff1","id":8980,"implemented":true,"kind":"function","modifiers":[],"name":"isUser","nameLocation":"14186:6:12","nodeType":"FunctionDefinition","parameters":{"id":8964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8963,"mutability":"mutable","name":"walletAddress","nameLocation":"14201:13:12","nodeType":"VariableDeclaration","scope":8980,"src":"14193:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8962,"name":"address","nodeType":"ElementaryTypeName","src":"14193:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14192:23:12"},"returnParameters":{"id":8967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8980,"src":"14237:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8965,"name":"bool","nodeType":"ElementaryTypeName","src":"14237:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14236:6:12"},"scope":9076,"src":"14177:131:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9005,"nodeType":"Block","src":"14548:96:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":8991,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"14581:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":8993,"indexExpression":{"id":8992,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8983,"src":"14587:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14581:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":8994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14602:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"14581:25:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":8990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14575:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8989,"name":"bytes","nodeType":"ElementaryTypeName","src":"14575:5:12","typeDescriptions":{}}},"id":8995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14575:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":8988,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14565:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14565:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"61646d696e","id":9000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14628:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""},"value":"admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8","typeString":"literal_string \"admin\""}],"id":8999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14622:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8998,"name":"bytes","nodeType":"ElementaryTypeName","src":"14622:5:12","typeDescriptions":{}}},"id":9001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14622:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8997,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14612:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14612:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14565:72:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8987,"id":9004,"nodeType":"Return","src":"14558:79:12"}]},"documentation":{"id":8981,"nodeType":"StructuredDocumentation","src":"14318:158:12","text":" @dev Check if an address is an admin\n @param walletAddress The wallet address to check\n @return true if the address is an admin"},"functionSelector":"24d7806c","id":9006,"implemented":true,"kind":"function","modifiers":[],"name":"isAdmin","nameLocation":"14490:7:12","nodeType":"FunctionDefinition","parameters":{"id":8984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8983,"mutability":"mutable","name":"walletAddress","nameLocation":"14506:13:12","nodeType":"VariableDeclaration","scope":9006,"src":"14498:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8982,"name":"address","nodeType":"ElementaryTypeName","src":"14498:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14497:23:12"},"returnParameters":{"id":8987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9006,"src":"14542:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8985,"name":"bool","nodeType":"ElementaryTypeName","src":"14542:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14541:6:12"},"scope":9076,"src":"14481:163:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9031,"nodeType":"Block","src":"14890:98:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":9029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"expression":{"baseExpression":{"id":9017,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8091,"src":"14923:5:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_User_$8086_storage_$","typeString":"mapping(address => struct UserAuthentication.User storage ref)"}},"id":9019,"indexExpression":{"id":9018,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"14929:13:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14923:20:12","typeDescriptions":{"typeIdentifier":"t_struct$_User_$8086_storage","typeString":"struct UserAuthentication.User storage ref"}},"id":9020,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14944:4:12","memberName":"role","nodeType":"MemberAccess","referencedDeclaration":8059,"src":"14923:25:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":9016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14917:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9015,"name":"bytes","nodeType":"ElementaryTypeName","src":"14917:5:12","typeDescriptions":{}}},"id":9021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14917:32:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":9014,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14907:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14907:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"hexValue":"6f666669636572","id":9026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14970:9:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_f1aaef0d35cb26a46bccc715cd62704f9d812dcafe522c449d44d2096f7f5cdc","typeString":"literal_string \"officer\""},"value":"officer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f1aaef0d35cb26a46bccc715cd62704f9d812dcafe522c449d44d2096f7f5cdc","typeString":"literal_string \"officer\""}],"id":9025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14964:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9024,"name":"bytes","nodeType":"ElementaryTypeName","src":"14964:5:12","typeDescriptions":{}}},"id":9027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14964:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9023,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"14954:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":9028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14954:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"14907:74:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9013,"id":9030,"nodeType":"Return","src":"14900:81:12"}]},"documentation":{"id":9007,"nodeType":"StructuredDocumentation","src":"14654:162:12","text":" @dev Check if an address is an officer\n @param walletAddress The wallet address to check\n @return true if the address is an officer"},"functionSelector":"6816442d","id":9032,"implemented":true,"kind":"function","modifiers":[],"name":"isOfficer","nameLocation":"14830:9:12","nodeType":"FunctionDefinition","parameters":{"id":9010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9009,"mutability":"mutable","name":"walletAddress","nameLocation":"14848:13:12","nodeType":"VariableDeclaration","scope":9032,"src":"14840:21:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9008,"name":"address","nodeType":"ElementaryTypeName","src":"14840:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14839:23:12"},"returnParameters":{"id":9013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9032,"src":"14884:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9011,"name":"bool","nodeType":"ElementaryTypeName","src":"14884:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14883:6:12"},"scope":9076,"src":"14821:167:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9041,"nodeType":"Block","src":"15145:44:12","statements":[{"expression":{"expression":{"id":9038,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"15162:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":9039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15176:6:12","memberName":"length","nodeType":"MemberAccess","src":"15162:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9037,"id":9040,"nodeType":"Return","src":"15155:27:12"}]},"documentation":{"id":9033,"nodeType":"StructuredDocumentation","src":"14998:88:12","text":" @dev Get the total number of users\n @return The number of users"},"functionSelector":"b5cb15f7","id":9042,"implemented":true,"kind":"function","modifiers":[],"name":"getUserCount","nameLocation":"15100:12:12","nodeType":"FunctionDefinition","parameters":{"id":9034,"nodeType":"ParameterList","parameters":[],"src":"15112:2:12"},"returnParameters":{"id":9037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9042,"src":"15136:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9035,"name":"uint256","nodeType":"ElementaryTypeName","src":"15136:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15135:9:12"},"scope":9076,"src":"15091:98:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9051,"nodeType":"Block","src":"15363:37:12","statements":[{"expression":{"id":9049,"name":"userAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"15380:13:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":9048,"id":9050,"nodeType":"Return","src":"15373:20:12"}]},"documentation":{"id":9043,"nodeType":"StructuredDocumentation","src":"15199:89:12","text":" @dev Get all user addresses\n @return Array of all user addresses"},"functionSelector":"2f330023","id":9052,"implemented":true,"kind":"function","modifiers":[],"name":"getAllUserAddresses","nameLocation":"15302:19:12","nodeType":"FunctionDefinition","parameters":{"id":9044,"nodeType":"ParameterList","parameters":[],"src":"15321:2:12"},"returnParameters":{"id":9048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9052,"src":"15345:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9045,"name":"address","nodeType":"ElementaryTypeName","src":"15345:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9046,"nodeType":"ArrayTypeName","src":"15345:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15344:18:12"},"scope":9076,"src":"15293:107:12","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":9074,"nodeType":"Block","src":"15580:93:12","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9061,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"15598:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15618:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9062,"name":"address","nodeType":"ElementaryTypeName","src":"15610:7:12","typeDescriptions":{}}},"id":9065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15598:22:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":9067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15622:17:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":9060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15590:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15590:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9069,"nodeType":"ExpressionStatement","src":"15590:50:12"},{"expression":{"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9070,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8049,"src":"15650:5:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9071,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9055,"src":"15658:8:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15650:16:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9073,"nodeType":"ExpressionStatement","src":"15650:16:12"}]},"documentation":{"id":9053,"nodeType":"StructuredDocumentation","src":"15410:107:12","text":" @dev Transfer admin rights to a new address\n @param newAdmin The new admin address"},"functionSelector":"75829def","id":9075,"implemented":true,"kind":"function","modifiers":[{"id":9058,"kind":"modifierInvocation","modifierName":{"id":9057,"name":"onlyAdmin","nameLocations":["15570:9:12"],"nodeType":"IdentifierPath","referencedDeclaration":8162,"src":"15570:9:12"},"nodeType":"ModifierInvocation","src":"15570:9:12"}],"name":"transferAdmin","nameLocation":"15531:13:12","nodeType":"FunctionDefinition","parameters":{"id":9056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9055,"mutability":"mutable","name":"newAdmin","nameLocation":"15553:8:12","nodeType":"VariableDeclaration","scope":9075,"src":"15545:16:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9054,"name":"address","nodeType":"ElementaryTypeName","src":"15545:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15544:18:12"},"returnParameters":{"id":9059,"nodeType":"ParameterList","parameters":[],"src":"15580:0:12"},"scope":9076,"src":"15522:151:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":9077,"src":"169:15506:12","usedErrors":[],"usedEvents":[8112,8118,8126,8132]}],"src":"32:15644:12"},"id":12}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:2:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d3d3dd910cc19267204057e7b98620445f3f33d10c6a1b7d466fb2f1dbaaa3e464736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD3 0xDD SWAP2 0xC 0xC1 SWAP3 PUSH8 0x204057E7B9862044 PUSH0 EXTCODEHASH CALLER 0xD1 0xC PUSH11 0x1B7D466FB2F1DBAAA3E464 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"657:1315:2:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d08bc96a8d6dcc6448a3f0db7c13cd229f9ccdca095b3b8c535911fcf74d27b164736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 DUP12 0xC9 PUSH11 0x8D6DCC6448A3F0DB7C13CD 0x22 SWAP16 SWAP13 0xCD 0xCA MULMOD JUMPDEST EXTCODESIZE DUP13 MSTORE8 MSIZE GT 0xFC 0xF7 0x4D 0x27 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"297:18980:3:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220079cd2c71475848145681b815221685650cc081e23cc8b888477ca686a1c397264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD SWAP13 0xD2 0xC7 EQ PUSH22 0x848145681B815221685650CC081E23CC8B888477CA68 PUSH11 0x1C397264736F6C63430008 EQ STOP CALLER ","sourceMap":"281:31863:4:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212202c4ad86538ce8a084b7fdb2cd3d42f4c2dabe3fc8415c635d8bb43bd1dd67f0264736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x4A 0xD8 PUSH6 0x38CE8A084B7F 0xDB 0x2C 0xD3 0xD4 0x2F 0x4C 0x2D 0xAB 0xE3 0xFC DUP5 ISZERO 0xC6 CALLDATALOAD 0xD8 0xBB NUMBER 0xBD SAR 0xD6 PUSH32 0x264736F6C634300081400330000000000000000000000000000000000000000 ","sourceMap":"769:34173:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220b18474e30ba46df553fc97b5dbc5e061d13f068480eada5c75b285875d02dfc564736f6c63430008140033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP5 PUSH21 0xE30BA46DF553FC97B5DBC5E061D13F068480EADA5C PUSH22 0xB285875D02DFC564736F6C6343000814003300000000 ","sourceMap":"258:2354:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"src/contracts/AdminManagement.sol":{"AdminManagement":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"officer","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"}],"name":"OfficerAppointed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"officer","type":"address"},{"indexed":false,"internalType":"bool","name":"canCreate","type":"bool"},{"indexed":false,"internalType":"bool","name":"canApprove","type":"bool"}],"name":"OfficerPermissionsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"officer","type":"address"}],"name":"OfficerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"_officerAddress","type":"address"},{"internalType":"string","name":"_name","type":"string"},{"internalType":"bool","name":"_canCreateTenders","type":"bool"},{"internalType":"bool","name":"_canApproveBids","type":"bool"}],"name":"appointOfficer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActiveOfficers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_officerAddress","type":"address"}],"name":"getOfficer","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"canCreateTenders","type":"bool"},{"internalType":"bool","name":"canApproveBids","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"}],"internalType":"struct AdminManagement.Officer","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"officerList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"officers","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"canCreateTenders","type":"bool"},{"internalType":"bool","name":"canApproveBids","type":"bool"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_officerAddress","type":"address"}],"name":"removeOfficer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_officerAddress","type":"address"},{"internalType":"bool","name":"_canCreateTenders","type":"bool"},{"internalType":"bool","name":"_canApproveBids","type":"bool"}],"name":"updateOfficerPermissions","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100bb57601f610d0a38819003918201601f19168301916001600160401b038311848410176100c0578084926020946040528339810103126100bb57516001600160a01b0390818116908190036100bb5780156100a257600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610c3390816100d78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe604060808152600436101561001357600080fd5b60003560e01c8063084866dd146109185780631e572c0f1461084c57806334a3537b146104d757806348cace83146104965780634ac52c24146103c2578063715018a614610369578063719a0f8c146102e35780638da5cb5b146102ba578063c10fd6dd1461011d5763f2fde38b1461008b57600080fd5b34610118576020366003190112610118576100a4610995565b6100ac610b4f565b6001600160a01b039081169182156101015750600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b51631e4fbdf760e01b815260006004820152602490fd5b600080fd5b5034610118576000366003190112610118576000906000600254905b81811061025d575061016261014d84610be5565b9361015a84519586610a01565b808552610be5565b6020848101929091601f19013684376000805b8282106101c557505050825193849382850191838652518092528401929160005b8281106101a557505050500390f35b83516001600160a01b031685528695509381019392810192600101610196565b6101d28297959697610b18565b60018060a01b03809254600392831b1c1660005260ff60018088528a600020015460101c16610212575b50509061020890610bc0565b9095949395610175565b61021b84610b18565b9054911b1c168551821015610247578161024091866102089460051b89010152610bc0565b90386101fc565b634e487b7160e01b600052603260045260246000fd5b61026a8194929394610b18565b60018060a01b0391549060031b1c1660005260ff60018060205285600020015460101c166102a5575b61029c90610bc0565b92919092610139565b906102b261029c91610bc0565b919050610293565b50346101185760003660031901126101185760005490516001600160a01b039091168152602090f35b50346101185760203660031901126101185760016102ff610995565b610307610b4f565b818060a01b031691826000528160205261032c60ff8383600020015460101c16610b7b565b82600052816020526000200162ff00001981541690557fc71ac73682f965d639a2f97202d5b162f5ea75f1ef0e933bad7f1db870a4c254600080a2005b3461011857600036600319011261011857610382610b4f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b5034610118576060366003190112610118576103dc610995565b60243591821515808403610118577f1409a6573d9c6d90ded7d595beb38d129f18081ae8a1018662713cbc1488041c92610487610417610b09565b8092610421610b4f565b60018060a01b03169687600052600160205261044960ff600188600020015460101c16610b7b565b87600052600160205261046f6001876000200191829060ff801983541691151516179055565b9061ff00825491151560081b169061ff001916179055565b825191825215156020820152a2005b50346101185760203660031901126101185760043590600254821015610118576104c1602092610b18565b905491519160018060a01b039160031b1c168152f35b5034610118576080366003190112610118576104f1610995565b906024359167ffffffffffffffff808411610118573660238501121561011857836004013581811161070757835194610534601f8301601f191660200187610a01565b81865236602483830101116101185781600092602460209301838901378601015261055d610b09565b9060643580151580910361011857610573610b4f565b6001600160a01b038416156108165760018060a01b038416600052600160205260ff600186600020015460101c166107d9578451926105b1846109e5565b86845215156020840152848301526001606083015260018060a01b0383166000526001602052836000209082518051918211610707576105f183546109ab565b601f8111610795575b50602090601f83116001146107285791806060949260019460009261071d575b5050600019600383901b1c191690831b1781555b019161064c60208201511515849060ff801983541691151516179055565b80850151835461ff00191690151560081b61ff00161783550151815462ff0000191690151560101b62ff0000161790556002549068010000000000000000821015610707577f51fadfdef046410e08649e65456ef08f429833c2095cd7092ee0bb0cbf519ded926106c68360016107029501600255610b18565b81549060031b9060018060a01b038516821b9160018060a01b03901b1916179055519182916020835260018060a01b0316946020830190610ac9565b0390a2005b634e487b7160e01b600052604160045260246000fd5b01519050388061061a565b90601f198316918460005260206000209260005b81811061077d57509260019491928593836060989610610764575b505050811b01815561062e565b015160001960f88460031b161c19169055388080610757565b9293602060018192878601518155019501930161073c565b836000526020600020601f840160051c8101602085106107d2575b601f830160051c820181106107c65750506105fa565b600081556001016107b0565b50806107b0565b845162461bcd60e51b81526020600482015260166024820152754f66666963657220616c72656164792065786973747360501b6044820152606490fd5b845162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b5034610118576020806003193601126101185760809161086a610995565b600060608351610879816109e5565b81815282868201528285820152015260018060a01b031660005260018252806000209160018251936108aa856109e5565b6108b381610a23565b85520154908084019260ff8316151584526108fc8186019260ff8560081c161515845260ff606088019560101c16151585528251978897828952519188015260a0870190610ac9565b9351151590850152511515606084015251151560808301520390f35b50346101185760203660031901126101185761096f906001600160a01b0361093e610995565b166000526001602052806000209060ff600161095984610a23565b9301548251948594608086526080860190610ac9565b9282821615156020860152828260081c1615159085015260101c16151560608301520390f35b600435906001600160a01b038216820361011857565b90600182811c921680156109db575b60208310146109c557565b634e487b7160e01b600052602260045260246000fd5b91607f16916109ba565b6080810190811067ffffffffffffffff82111761070757604052565b90601f8019910116810190811067ffffffffffffffff82111761070757604052565b9060405191826000825492610a37846109ab565b908184526001948581169081600014610aa65750600114610a63575b5050610a6192500383610a01565b565b9093915060005260209081600020936000915b818310610a8e575050610a6193508201013880610a53565b85548884018501529485019487945091830191610a76565b915050610a6194506020925060ff191682840152151560051b8201013880610a53565b919082519283825260005b848110610af5575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ad4565b60443590811515820361011857565b6002548110156102475760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b6000546001600160a01b03163303610b6357565b60405163118cdaa760e01b8152336004820152602490fd5b15610b8257565b60405162461bcd60e51b815260206004820152601660248201527513d9999a58d95c88191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b6000198114610bcf5760010190565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff81116107075760051b6020019056fea2646970667358221220498006c5bc7b499fb71a66f0a30ad1af89b2d5bd815e3885b332b6416699e69764736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x1F PUSH2 0xD0A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC0 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBB JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xBB JUMPI DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0xC33 SWAP1 DUP2 PUSH2 0xD7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84866DD EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0x1E572C0F EQ PUSH2 0x84C JUMPI DUP1 PUSH4 0x34A3537B EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x48CACE83 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x4AC52C24 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x719A0F8C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xC10FD6DD EQ PUSH2 0x11D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0xA4 PUSH2 0x995 JUMP JUMPDEST PUSH2 0xAC PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x101 JUMPI POP PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x25D JUMPI POP PUSH2 0x162 PUSH2 0x14D DUP5 PUSH2 0xBE5 JUMP JUMPDEST SWAP4 PUSH2 0x15A DUP5 MLOAD SWAP6 DUP7 PUSH2 0xA01 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD SWAP3 SWAP1 SWAP2 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1C5 JUMPI POP POP POP DUP3 MLOAD SWAP4 DUP5 SWAP4 DUP3 DUP6 ADD SWAP2 DUP4 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A5 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x196 JUMP JUMPDEST PUSH2 0x1D2 DUP3 SWAP8 SWAP6 SWAP7 SWAP8 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 SLOAD PUSH1 0x3 SWAP3 DUP4 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x1 DUP1 DUP9 MSTORE DUP11 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0x212 JUMPI JUMPDEST POP POP SWAP1 PUSH2 0x208 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP4 SWAP6 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x21B DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x247 JUMPI DUP2 PUSH2 0x240 SWAP2 DUP7 PUSH2 0x208 SWAP5 PUSH1 0x5 SHL DUP10 ADD ADD MSTORE PUSH2 0xBC0 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26A DUP2 SWAP5 SWAP3 SWAP4 SWAP5 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0x20 MSTORE DUP6 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0x2A5 JUMPI JUMPDEST PUSH2 0x29C SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x139 JUMP JUMPDEST SWAP1 PUSH2 0x2B2 PUSH2 0x29C SWAP2 PUSH2 0xBC0 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x293 JUMP JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x1 PUSH2 0x2FF PUSH2 0x995 JUMP JUMPDEST PUSH2 0x307 PUSH2 0xB4F JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x32C PUSH1 0xFF DUP4 DUP4 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0xB7B JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 ADD PUSH3 0xFF0000 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC71AC73682F965D639A2F97202D5B162F5EA75F1EF0E933BAD7F1DB870A4C254 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x382 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x3DC PUSH2 0x995 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 DUP5 SUB PUSH2 0x118 JUMPI PUSH32 0x1409A6573D9C6D90DED7D595BEB38D129F18081AE8A1018662713CBC1488041C SWAP3 PUSH2 0x487 PUSH2 0x417 PUSH2 0xB09 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x421 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP7 DUP8 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x449 PUSH1 0xFF PUSH1 0x1 DUP9 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0xB7B JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x46F PUSH1 0x1 DUP8 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x118 JUMPI PUSH2 0x4C1 PUSH1 0x20 SWAP3 PUSH2 0xB18 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x4F1 PUSH2 0x995 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT PUSH2 0x118 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x118 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x707 JUMPI DUP4 MLOAD SWAP5 PUSH2 0x534 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP8 PUSH2 0xA01 JUMP JUMPDEST DUP2 DUP7 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x118 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE PUSH2 0x55D PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x118 JUMPI PUSH2 0x573 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x816 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 DUP7 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0x7D9 JUMPI DUP5 MLOAD SWAP3 PUSH2 0x5B1 DUP5 PUSH2 0x9E5 JUMP JUMPDEST DUP7 DUP5 MSTORE ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP1 DUP3 MLOAD DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x707 JUMPI PUSH2 0x5F1 DUP4 SLOAD PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x795 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x728 JUMPI SWAP2 DUP1 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0x1 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x71D JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP2 SSTORE JUMPDEST ADD SWAP2 PUSH2 0x64C PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 DUP6 ADD MLOAD DUP4 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP4 SSTORE ADD MLOAD DUP2 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x707 JUMPI PUSH32 0x51FADFDEF046410E08649E65456EF08F429833C2095CD7092EE0BB0CBF519DED SWAP3 PUSH2 0x6C6 DUP4 PUSH1 0x1 PUSH2 0x702 SWAP6 ADD PUSH1 0x2 SSTORE PUSH2 0xB18 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xAC9 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x61A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x77D JUMPI POP SWAP3 PUSH1 0x1 SWAP5 SWAP2 SWAP3 DUP6 SWAP4 DUP4 PUSH1 0x60 SWAP9 SWAP7 LT PUSH2 0x764 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x62E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x757 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x73C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x7D2 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x7C6 JUMPI POP POP PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7B0 JUMP JUMPDEST POP DUP1 PUSH2 0x7B0 JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4F66666963657220616C726561647920657869737473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x118 JUMPI PUSH1 0x80 SWAP2 PUSH2 0x86A PUSH2 0x995 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 MLOAD PUSH2 0x879 DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP3 MLOAD SWAP4 PUSH2 0x8AA DUP6 PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x8B3 DUP2 PUSH2 0xA23 JUMP JUMPDEST DUP6 MSTORE ADD SLOAD SWAP1 DUP1 DUP5 ADD SWAP3 PUSH1 0xFF DUP4 AND ISZERO ISZERO DUP5 MSTORE PUSH2 0x8FC DUP2 DUP7 ADD SWAP3 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO ISZERO DUP5 MSTORE PUSH1 0xFF PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0x10 SHR AND ISZERO ISZERO DUP6 MSTORE DUP3 MLOAD SWAP8 DUP9 SWAP8 DUP3 DUP10 MSTORE MLOAD SWAP2 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0xAC9 JUMP JUMPDEST SWAP4 MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x96F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x93E PUSH2 0x995 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH2 0x959 DUP5 PUSH2 0xA23 JUMP JUMPDEST SWAP4 ADD SLOAD DUP3 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x80 DUP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 DUP3 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP7 ADD MSTORE DUP3 DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x118 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x9DB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x9C5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x707 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x707 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xA37 DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xAA6 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA63 JUMPI JUMPDEST POP POP PUSH2 0xA61 SWAP3 POP SUB DUP4 PUSH2 0xA01 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xA8E JUMPI POP POP PUSH2 0xA61 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xA53 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA61 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xA53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xAF5 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x118 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB63 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB82 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13D9999A58D95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xBCF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x707 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 DUP1 MOD 0xC5 0xBC PUSH28 0x499FB71A66F0A30AD1AF89B2D5BD815E3885B332B6416699E6976473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"163:3482:7:-:0;;;;;;;;;;;;;-1:-1:-1;;163:3482:7;;;;-1:-1:-1;;;;;163:3482:7;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:3482:7;;;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;163:3482:7;;-1:-1:-1;;;;;;163:3482:7;;;;;;;;;;;3052:40:0;;-1:-1:-1;3052:40:0;163:3482:7;;;;;;;1269:95:0;163:3482:7;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;163:3482:7;;;1322:31:0;163:3482:7;-1:-1:-1;163:3482:7;;;;;;-1:-1:-1;163:3482:7;;;;;-1:-1:-1;163:3482:7"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2453,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool":{"entryPoint":2825,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":2761,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":3045,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":2595,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2475,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":2561,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_9773":{"entryPoint":2533,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":2895,"id":84,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":3008,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_aa9f":{"entryPoint":2939,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":2840,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_offset_0t_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"604060808152600436101561001357600080fd5b60003560e01c8063084866dd146109185780631e572c0f1461084c57806334a3537b146104d757806348cace83146104965780634ac52c24146103c2578063715018a614610369578063719a0f8c146102e35780638da5cb5b146102ba578063c10fd6dd1461011d5763f2fde38b1461008b57600080fd5b34610118576020366003190112610118576100a4610995565b6100ac610b4f565b6001600160a01b039081169182156101015750600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b51631e4fbdf760e01b815260006004820152602490fd5b600080fd5b5034610118576000366003190112610118576000906000600254905b81811061025d575061016261014d84610be5565b9361015a84519586610a01565b808552610be5565b6020848101929091601f19013684376000805b8282106101c557505050825193849382850191838652518092528401929160005b8281106101a557505050500390f35b83516001600160a01b031685528695509381019392810192600101610196565b6101d28297959697610b18565b60018060a01b03809254600392831b1c1660005260ff60018088528a600020015460101c16610212575b50509061020890610bc0565b9095949395610175565b61021b84610b18565b9054911b1c168551821015610247578161024091866102089460051b89010152610bc0565b90386101fc565b634e487b7160e01b600052603260045260246000fd5b61026a8194929394610b18565b60018060a01b0391549060031b1c1660005260ff60018060205285600020015460101c166102a5575b61029c90610bc0565b92919092610139565b906102b261029c91610bc0565b919050610293565b50346101185760003660031901126101185760005490516001600160a01b039091168152602090f35b50346101185760203660031901126101185760016102ff610995565b610307610b4f565b818060a01b031691826000528160205261032c60ff8383600020015460101c16610b7b565b82600052816020526000200162ff00001981541690557fc71ac73682f965d639a2f97202d5b162f5ea75f1ef0e933bad7f1db870a4c254600080a2005b3461011857600036600319011261011857610382610b4f565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b5034610118576060366003190112610118576103dc610995565b60243591821515808403610118577f1409a6573d9c6d90ded7d595beb38d129f18081ae8a1018662713cbc1488041c92610487610417610b09565b8092610421610b4f565b60018060a01b03169687600052600160205261044960ff600188600020015460101c16610b7b565b87600052600160205261046f6001876000200191829060ff801983541691151516179055565b9061ff00825491151560081b169061ff001916179055565b825191825215156020820152a2005b50346101185760203660031901126101185760043590600254821015610118576104c1602092610b18565b905491519160018060a01b039160031b1c168152f35b5034610118576080366003190112610118576104f1610995565b906024359167ffffffffffffffff808411610118573660238501121561011857836004013581811161070757835194610534601f8301601f191660200187610a01565b81865236602483830101116101185781600092602460209301838901378601015261055d610b09565b9060643580151580910361011857610573610b4f565b6001600160a01b038416156108165760018060a01b038416600052600160205260ff600186600020015460101c166107d9578451926105b1846109e5565b86845215156020840152848301526001606083015260018060a01b0383166000526001602052836000209082518051918211610707576105f183546109ab565b601f8111610795575b50602090601f83116001146107285791806060949260019460009261071d575b5050600019600383901b1c191690831b1781555b019161064c60208201511515849060ff801983541691151516179055565b80850151835461ff00191690151560081b61ff00161783550151815462ff0000191690151560101b62ff0000161790556002549068010000000000000000821015610707577f51fadfdef046410e08649e65456ef08f429833c2095cd7092ee0bb0cbf519ded926106c68360016107029501600255610b18565b81549060031b9060018060a01b038516821b9160018060a01b03901b1916179055519182916020835260018060a01b0316946020830190610ac9565b0390a2005b634e487b7160e01b600052604160045260246000fd5b01519050388061061a565b90601f198316918460005260206000209260005b81811061077d57509260019491928593836060989610610764575b505050811b01815561062e565b015160001960f88460031b161c19169055388080610757565b9293602060018192878601518155019501930161073c565b836000526020600020601f840160051c8101602085106107d2575b601f830160051c820181106107c65750506105fa565b600081556001016107b0565b50806107b0565b845162461bcd60e51b81526020600482015260166024820152754f66666963657220616c72656164792065786973747360501b6044820152606490fd5b845162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b5034610118576020806003193601126101185760809161086a610995565b600060608351610879816109e5565b81815282868201528285820152015260018060a01b031660005260018252806000209160018251936108aa856109e5565b6108b381610a23565b85520154908084019260ff8316151584526108fc8186019260ff8560081c161515845260ff606088019560101c16151585528251978897828952519188015260a0870190610ac9565b9351151590850152511515606084015251151560808301520390f35b50346101185760203660031901126101185761096f906001600160a01b0361093e610995565b166000526001602052806000209060ff600161095984610a23565b9301548251948594608086526080860190610ac9565b9282821615156020860152828260081c1615159085015260101c16151560608301520390f35b600435906001600160a01b038216820361011857565b90600182811c921680156109db575b60208310146109c557565b634e487b7160e01b600052602260045260246000fd5b91607f16916109ba565b6080810190811067ffffffffffffffff82111761070757604052565b90601f8019910116810190811067ffffffffffffffff82111761070757604052565b9060405191826000825492610a37846109ab565b908184526001948581169081600014610aa65750600114610a63575b5050610a6192500383610a01565b565b9093915060005260209081600020936000915b818310610a8e575050610a6193508201013880610a53565b85548884018501529485019487945091830191610a76565b915050610a6194506020925060ff191682840152151560051b8201013880610a53565b919082519283825260005b848110610af5575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ad4565b60443590811515820361011857565b6002548110156102475760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b6000546001600160a01b03163303610b6357565b60405163118cdaa760e01b8152336004820152602490fd5b15610b8257565b60405162461bcd60e51b815260206004820152601660248201527513d9999a58d95c88191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b6000198114610bcf5760010190565b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff81116107075760051b6020019056fea2646970667358221220498006c5bc7b499fb71a66f0a30ad1af89b2d5bd815e3885b332b6416699e69764736f6c63430008140033","opcodes":"PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84866DD EQ PUSH2 0x918 JUMPI DUP1 PUSH4 0x1E572C0F EQ PUSH2 0x84C JUMPI DUP1 PUSH4 0x34A3537B EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x48CACE83 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0x4AC52C24 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0x719A0F8C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xC10FD6DD EQ PUSH2 0x11D JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0xA4 PUSH2 0x995 JUMP JUMPDEST PUSH2 0xAC PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP3 ISZERO PUSH2 0x101 JUMPI POP PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x25D JUMPI POP PUSH2 0x162 PUSH2 0x14D DUP5 PUSH2 0xBE5 JUMP JUMPDEST SWAP4 PUSH2 0x15A DUP5 MLOAD SWAP6 DUP7 PUSH2 0xA01 JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD SWAP3 SWAP1 SWAP2 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x0 DUP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1C5 JUMPI POP POP POP DUP3 MLOAD SWAP4 DUP5 SWAP4 DUP3 DUP6 ADD SWAP2 DUP4 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1A5 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x196 JUMP JUMPDEST PUSH2 0x1D2 DUP3 SWAP8 SWAP6 SWAP7 SWAP8 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 SLOAD PUSH1 0x3 SWAP3 DUP4 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x1 DUP1 DUP9 MSTORE DUP11 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0x212 JUMPI JUMPDEST POP POP SWAP1 PUSH2 0x208 SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP1 SWAP6 SWAP5 SWAP4 SWAP6 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x21B DUP5 PUSH2 0xB18 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND DUP6 MLOAD DUP3 LT ISZERO PUSH2 0x247 JUMPI DUP2 PUSH2 0x240 SWAP2 DUP7 PUSH2 0x208 SWAP5 PUSH1 0x5 SHL DUP10 ADD ADD MSTORE PUSH2 0xBC0 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1FC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x26A DUP2 SWAP5 SWAP3 SWAP4 SWAP5 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND PUSH1 0x0 MSTORE PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0x20 MSTORE DUP6 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0x2A5 JUMPI JUMPDEST PUSH2 0x29C SWAP1 PUSH2 0xBC0 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x139 JUMP JUMPDEST SWAP1 PUSH2 0x2B2 PUSH2 0x29C SWAP2 PUSH2 0xBC0 JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x293 JUMP JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x0 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x1 PUSH2 0x2FF PUSH2 0x995 JUMP JUMPDEST PUSH2 0x307 PUSH2 0xB4F JUMP JUMPDEST DUP2 DUP1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH2 0x32C PUSH1 0xFF DUP4 DUP4 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0xB7B JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x0 KECCAK256 ADD PUSH3 0xFF0000 NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH32 0xC71AC73682F965D639A2F97202D5B162F5EA75F1EF0E933BAD7F1DB870A4C254 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x382 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x3DC PUSH2 0x995 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 ISZERO ISZERO DUP1 DUP5 SUB PUSH2 0x118 JUMPI PUSH32 0x1409A6573D9C6D90DED7D595BEB38D129F18081AE8A1018662713CBC1488041C SWAP3 PUSH2 0x487 PUSH2 0x417 PUSH2 0xB09 JUMP JUMPDEST DUP1 SWAP3 PUSH2 0x421 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP7 DUP8 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x449 PUSH1 0xFF PUSH1 0x1 DUP9 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0xB7B JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x46F PUSH1 0x1 DUP8 PUSH1 0x0 KECCAK256 ADD SWAP2 DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x2 SLOAD DUP3 LT ISZERO PUSH2 0x118 JUMPI PUSH2 0x4C1 PUSH1 0x20 SWAP3 PUSH2 0xB18 JUMP JUMPDEST SWAP1 SLOAD SWAP2 MLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x4F1 PUSH2 0x995 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT PUSH2 0x118 JUMPI CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0x118 JUMPI DUP4 PUSH1 0x4 ADD CALLDATALOAD DUP2 DUP2 GT PUSH2 0x707 JUMPI DUP4 MLOAD SWAP5 PUSH2 0x534 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP8 PUSH2 0xA01 JUMP JUMPDEST DUP2 DUP7 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x118 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP10 ADD CALLDATACOPY DUP7 ADD ADD MSTORE PUSH2 0x55D PUSH2 0xB09 JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x118 JUMPI PUSH2 0x573 PUSH2 0xB4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0x816 JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x1 DUP7 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x10 SHR AND PUSH2 0x7D9 JUMPI DUP5 MLOAD SWAP3 PUSH2 0x5B1 DUP5 PUSH2 0x9E5 JUMP JUMPDEST DUP7 DUP5 MSTORE ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE DUP5 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP4 PUSH1 0x0 KECCAK256 SWAP1 DUP3 MLOAD DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x707 JUMPI PUSH2 0x5F1 DUP4 SLOAD PUSH2 0x9AB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x795 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x728 JUMPI SWAP2 DUP1 PUSH1 0x60 SWAP5 SWAP3 PUSH1 0x1 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x71D JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR DUP2 SSTORE JUMPDEST ADD SWAP2 PUSH2 0x64C PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 DUP6 ADD MLOAD DUP4 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR DUP4 SSTORE ADD MLOAD DUP2 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x10 SHL PUSH3 0xFF0000 AND OR SWAP1 SSTORE PUSH1 0x2 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x707 JUMPI PUSH32 0x51FADFDEF046410E08649E65456EF08F429833C2095CD7092EE0BB0CBF519DED SWAP3 PUSH2 0x6C6 DUP4 PUSH1 0x1 PUSH2 0x702 SWAP6 ADD PUSH1 0x2 SSTORE PUSH2 0xB18 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 SHL NOT AND OR SWAP1 SSTORE MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0xAC9 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x61A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x77D JUMPI POP SWAP3 PUSH1 0x1 SWAP5 SWAP2 SWAP3 DUP6 SWAP4 DUP4 PUSH1 0x60 SWAP9 SWAP7 LT PUSH2 0x764 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x62E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x757 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x73C JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x7D2 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x7C6 JUMPI POP POP PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7B0 JUMP JUMPDEST POP DUP1 PUSH2 0x7B0 JUMP JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4F66666963657220616C726561647920657869737473 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x118 JUMPI PUSH1 0x80 SWAP2 PUSH2 0x86A PUSH2 0x995 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 MLOAD PUSH2 0x879 DUP2 PUSH2 0x9E5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP3 DUP7 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x1 DUP3 MLOAD SWAP4 PUSH2 0x8AA DUP6 PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x8B3 DUP2 PUSH2 0xA23 JUMP JUMPDEST DUP6 MSTORE ADD SLOAD SWAP1 DUP1 DUP5 ADD SWAP3 PUSH1 0xFF DUP4 AND ISZERO ISZERO DUP5 MSTORE PUSH2 0x8FC DUP2 DUP7 ADD SWAP3 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO ISZERO DUP5 MSTORE PUSH1 0xFF PUSH1 0x60 DUP9 ADD SWAP6 PUSH1 0x10 SHR AND ISZERO ISZERO DUP6 MSTORE DUP3 MLOAD SWAP8 DUP9 SWAP8 DUP3 DUP10 MSTORE MLOAD SWAP2 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0xAC9 JUMP JUMPDEST SWAP4 MLOAD ISZERO ISZERO SWAP1 DUP6 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP5 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x118 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x118 JUMPI PUSH2 0x96F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x93E PUSH2 0x995 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH2 0x959 DUP5 PUSH2 0xA23 JUMP JUMPDEST SWAP4 ADD SLOAD DUP3 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x80 DUP7 MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0xAC9 JUMP JUMPDEST SWAP3 DUP3 DUP3 AND ISZERO ISZERO PUSH1 0x20 DUP7 ADD MSTORE DUP3 DUP3 PUSH1 0x8 SHR AND ISZERO ISZERO SWAP1 DUP6 ADD MSTORE PUSH1 0x10 SHR AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x118 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x9DB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x9C5 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x707 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x707 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0xA37 DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xAA6 JUMPI POP PUSH1 0x1 EQ PUSH2 0xA63 JUMPI JUMPDEST POP POP PUSH2 0xA61 SWAP3 POP SUB DUP4 PUSH2 0xA01 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0xA8E JUMPI POP POP PUSH2 0xA61 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xA53 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xA76 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA61 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xA53 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xAF5 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xAD4 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x118 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x247 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xB63 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xB82 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13D9999A58D95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xBCF JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x707 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 DUP1 MOD 0xC5 0xBC PUSH28 0x499FB71A66F0A30AD1AF89B2D5BD815E3885B332B6416699E6976473 PUSH16 0x6C634300081400330000000000000000 ","sourceMap":"163:3482:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;163:3482:7;;;;2627:22:0;;2623:91;;163:3482:7;;;;;;;;;;;;;3052:40:0;163:3482:7;3052:40:0;;163:3482:7;2623:91:0;163:3482:7;-1:-1:-1;;;2672:31:0;;163:3482:7;;2672:31:0;;163:3482:7;;;2672:31:0;163:3482:7;;;;;;;;;;;-1:-1:-1;;163:3482:7;;;;;2986:13;163:3482;3005:11;163:3482;2981:152;3001:22;;;;;;163:3482;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;3254:22;;;;;;163:3482;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:3482:7;;;;;-1:-1:-1;163:3482:7;;;;;;;;;;;;3278:3;3310:14;;;;;;;:::i;:::-;163:3482;;;;;;;;;;;;;;;;;;;;;;;;3301:33;163:3482;;;;3297:135;;3278:3;;;;;;;:::i;:::-;3239:13;;;;;;;3297:135;3378:14;;;:::i;:::-;163:3482;;;;;;;;;;;;;;3410:7;163:3482;;3278:3;163:3482;;;;;;;3410:7;:::i;:::-;3297:135;;;;163:3482;;;;;;;;;;;;3025:3;3057:14;;;;;;;:::i;:::-;163:3482;;;;;;;;;;;;;;;;;;;;;;3048:33;163:3482;;;;3044:79;;3025:3;;;;:::i;:::-;2986:13;;;;;;3044:79;3101:7;;3025:3;3101:7;;:::i;:::-;3044:79;;;;;163:3482;;;;;;;-1:-1:-1;;163:3482:7;;;;;;;;-1:-1:-1;;;;;163:3482:7;;;;;;;;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;163:3482:7;;;;;;;;;;;;;2081:69;163:3482;;;;;2089:34;163:3482;;;;2081:69;:::i;:::-;163:3482;;;;;;;;2169:34;163:3482;;;;;;;2226:31;163:3482;2226:31;;163:3482;;;;;;;-1:-1:-1;;163:3482:7;;;;1500:62:0;;:::i;:::-;163:3482:7;;;-1:-1:-1;;;;;;163:3482:7;;;;-1:-1:-1;;;;;163:3482:7;3052:40:0;163:3482:7;;3052:40:0;163:3482:7;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;:::i;:::-;;;;;;;;;;;;2708:124;163:3482;2626:58;163:3482;;:::i;:::-;1500:62:0;;;;:::i;:::-;163:3482:7;;;;;;;;;;;;;2466:69;163:3482;;;;;2474:34;163:3482;;;;2466:69;:::i;:::-;163:3482;;;;;;2554:62;163:3482;;;;2554:42;:62;;163:3482;;;;;;;;;;;;;;;2554:62;163:3482;;;;;;;;;;;;;;;;;;2626:58;163:3482;;;;;;;;;;;2708:124;163:3482;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;;777:28;163:3482;777:28;;;;;;163:3482;777:28;;:::i;:::-;163:3482;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:3482:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;163:3482:7;;1587:29;163:3482;;;;;;;;;;;;;;;;;;;1655:34;163:3482;;;;;;;;;;;;:::i;:::-;;;;;;;1755:114;;163:3482;1755:114;;;163:3482;;;1755:114;;163:3482;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;163:3482:7;;;;;;;;;;;;;;;1755:114;163:3482;;1755:114;;163:3482;;;;;;;;;;;;;;;;;;;;1755:114;;;163:3482;;;-1:-1:-1;;163:3482:7;;;;;;;;;;;1755:114;163:3482;;;-1:-1:-1;;163:3482:7;;;;;;;;;;;1879:11;163:3482;;;;;;;;1928:40;163:3482;;;;;;;1879:11;163:3482;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1928:40;;;163:3482;;;;;;;;;;;;;;;;;-1:-1:-1;163:3482:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:3482:7;;;;;;-1:-1:-1;;;163:3482:7;;;;;;;;;;;;-1:-1:-1;;;163:3482:7;;;;;;;;;;-1:-1:-1;;;163:3482:7;;;;;;;;;;;;-1:-1:-1;;;163:3482:7;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;-1:-1:-1;;;;;163:3482:7;;:::i;:::-;;;;;;;;;;728:43;163:3482;;728:43;;;:::i;:::-;;;163:3482;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:3482:7;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;163:3482:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;163:3482:7;;;;-1:-1:-1;163:3482:7;;-1:-1:-1;163:3482:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:3482:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;1879:11;163:3482;;;;;;1879:11;-1:-1:-1;163:3482:7;;;;-1:-1:-1;163:3482:7;:::o;1796:162:0:-;1710:6;163:3482:7;-1:-1:-1;;;;;163:3482:7;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;163:3482:7;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;163:3482:7;;;1901:40:0;163:3482:7;;;;:::o;:::-;;;-1:-1:-1;;;163:3482:7;;;;;;;;;;;;-1:-1:-1;;;163:3482:7;;;;;;;;-1:-1:-1;;163:3482:7;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"appointOfficer(address,string,bool,bool)":"34a3537b","getActiveOfficers()":"c10fd6dd","getOfficer(address)":"1e572c0f","officerList(uint256)":"48cace83","officers(address)":"084866dd","owner()":"8da5cb5b","removeOfficer(address)":"719a0f8c","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","updateOfficerPermissions(address,bool,bool)":"4ac52c24"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"officer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"OfficerAppointed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"officer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canCreate\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canApprove\",\"type\":\"bool\"}],\"name\":\"OfficerPermissionsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"officer\",\"type\":\"address\"}],\"name\":\"OfficerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_officerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_canCreateTenders\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_canApproveBids\",\"type\":\"bool\"}],\"name\":\"appointOfficer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveOfficers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_officerAddress\",\"type\":\"address\"}],\"name\":\"getOfficer\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"canCreateTenders\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canApproveBids\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct AdminManagement.Officer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"officerList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"officers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"canCreateTenders\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canApproveBids\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_officerAddress\",\"type\":\"address\"}],\"name\":\"removeOfficer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_officerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_canCreateTenders\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_canApproveBids\",\"type\":\"bool\"}],\"name\":\"updateOfficerPermissions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/AdminManagement.sol\":\"AdminManagement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/contracts/AdminManagement.sol\":{\"keccak256\":\"0x3be2d825d362492a443382ceddf94016660f79185eb0ad456caa83a6b339c0a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1336ae154c8f70c270f39ec1ce165c72bae4143454af3744f64efd1fa3042cd7\",\"dweb:/ipfs/QmfBk3dgb7d6F9qPFwHx2RX7nAJF6Q8wfrq7vF11RwVTiy\"]}},\"version\":1}"}},"src/contracts/BidManagement.sol":{"BidManagement":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tenderId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"bidIndex","type":"uint256"},{"indexed":false,"internalType":"string","name":"feedback","type":"string"}],"name":"BidFeedbackGiven","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tenderId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"bidIndex","type":"uint256"},{"indexed":false,"internalType":"string","name":"modifications","type":"string"}],"name":"BidModificationRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tenderId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"bidIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newAmount","type":"uint256"},{"indexed":false,"internalType":"string","name":"newDescription","type":"string"}],"name":"BidModified","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tenderId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"bidIndex","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"BidRejectedWithReason","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tenderId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"bidIndex","type":"uint256"},{"indexed":false,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BidSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"bidCounts","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"bids","outputs":[{"internalType":"uint256","name":"tenderId","type":"uint256"},{"internalType":"address","name":"bidderAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"enum BidManagement.BidStatus","name":"status","type":"uint8"},{"internalType":"string","name":"feedback","type":"string"},{"internalType":"string","name":"modificationRequest","type":"string"},{"internalType":"string","name":"rejectionReason","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"},{"internalType":"uint256","name":"_bidIndex","type":"uint256"}],"name":"getBid","outputs":[{"components":[{"internalType":"uint256","name":"tenderId","type":"uint256"},{"internalType":"address","name":"bidderAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"enum BidManagement.BidStatus","name":"status","type":"uint8"},{"internalType":"string","name":"feedback","type":"string"},{"internalType":"string","name":"modificationRequest","type":"string"},{"internalType":"string","name":"rejectionReason","type":"string"}],"internalType":"struct BidManagement.Bid","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"}],"name":"getBidsForTender","outputs":[{"components":[{"internalType":"uint256","name":"tenderId","type":"uint256"},{"internalType":"address","name":"bidderAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"enum BidManagement.BidStatus","name":"status","type":"uint8"},{"internalType":"string","name":"feedback","type":"string"},{"internalType":"string","name":"modificationRequest","type":"string"},{"internalType":"string","name":"rejectionReason","type":"string"}],"internalType":"struct BidManagement.Bid[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getBidsForUser","outputs":[{"components":[{"internalType":"uint256","name":"tenderId","type":"uint256"},{"internalType":"address","name":"bidderAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"enum BidManagement.BidStatus","name":"status","type":"uint8"},{"internalType":"string","name":"feedback","type":"string"},{"internalType":"string","name":"modificationRequest","type":"string"},{"internalType":"string","name":"rejectionReason","type":"string"}],"internalType":"struct BidManagement.Bid[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"},{"internalType":"uint256","name":"_bidIndex","type":"uint256"},{"internalType":"string","name":"_feedback","type":"string"}],"name":"giveBidFeedback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"},{"internalType":"uint256","name":"_bidIndex","type":"uint256"},{"internalType":"uint256","name":"_newAmount","type":"uint256"},{"internalType":"string","name":"_newDescription","type":"string"}],"name":"modifyBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"},{"internalType":"uint256","name":"_bidIndex","type":"uint256"},{"internalType":"string","name":"_reason","type":"string"}],"name":"rejectBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"},{"internalType":"uint256","name":"_bidIndex","type":"uint256"},{"internalType":"string","name":"_modifications","type":"string"}],"name":"requestBidModification","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_description","type":"string"}],"name":"submitBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tenders","outputs":[{"internalType":"address","name":"officerAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100bb57601f611cc938819003918201601f19168301916001600160401b038311848410176100c0578084926020946040528339810103126100bb57516001600160a01b0390818116908190036100bb5780156100a257600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3611bf290816100d78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806314c60bdd14610fce578063267b51b314610f315780632e78b86914610d975780633fc898d214610a86578063465e1def14610a39578063582c7ffd146109615780635b8c665c14610770578063715018a6146107175780637b3c4baa146106245780637c8ecd2f146105f85780638da5cb5b146105cf578063928c1784146104035780639f07d4621461014b5763f2fde38b146100b657600080fd5b34610146576020366003190112610146576004356001600160a01b0381811691829003610146576100e56119c3565b811561012d57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b346101465761015936611751565b91806000526020926003845261017d60018060a01b036040600020541633146119ef565b81600052600284526101956040600020548410611a3b565b816000526001938481526040600020846000528152600560ff816040600020015416818110156103ed571580156103bf575b156103825783600052858252604060002085600052825280604060002001600260ff198254161790558360005285825260406000208560005282526008604060002001908351906001600160401b03821161036c5761022683546118e3565b90601f8211610325575b50508296601f82116001146102a3578180917f7a9bc058a0636c74f09fba8b41a836b2d26f59e8b63350b3b633df61def6f1cf979899600093610298575b501b916000199060031b1c19161790555b610293604051928284938452830190611786565b0390a3005b87015192508a61026e565b90601f1981169783600052846000209860005b818110610310575090827f7a9bc058a0636c74f09fba8b41a836b2d26f59e8b63350b3b633df61def6f1cf98999a92106102f7575b5050811b01905561027f565b86015160001960f88460031b161c1916905588806102eb565b878301518b55998401999186019186016102b6565b836000528460002090601f8401811c820192868510610362575b601f01901c019088905b8281106103565750610230565b60008155018890610349565b919250829161033f565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152600481018390526015602482015274109a5908185b1c9958591e481c1c9bd8d95cdcd959605a1b6044820152606490fd5b5083600052858252604060002085600052825260ff816040600020015416818110156103ed576003146101c7565b634e487b7160e01b600052602160045260246000fd5b346101465761041136611751565b91806000526020926003845261043560018060a01b036040600020541633146119ef565b816000526002845261044d6040600020548410611a3b565b81600052600193848152604060002084600052815260ff6005604060002001541660058110156103ed576104819015611a7c565b826000528481526040600020846000528152600660406000200182516001600160401b03811161036c576104b582546118e3565b601f8111610586575b508296601f821160011461051e578180917fd7ed299e5e685e22477fc439df8043df54d62f2b07ada5aeda8003a8b376014e97989960009361029857501b916000199060031b1c1916179055610293604051928284938452830190611786565b90601f1981169783600052846000209860005b818110610571575090827fd7ed299e5e685e22477fc439df8043df54d62f2b07ada5aeda8003a8b376014e98999a92106102f7575050811b01905561027f565b878301518b5599840199918601918601610531565b8260005283600020601f830160051c8101918584106105c5575b601f0160051c019088905b8281106105b95750506104be565b600081550188906105ab565b90915081906105a0565b34610146576000366003190112610146576000546040516001600160a01b039091168152602090f35b346101465760203660031901126101465760043560005260026020526020604060002054604051908152f35b3461014657610632366118cd565b9060005260016020526040600020906000526020526020604060002061071381549161070460018060a01b03600183015416916106f660028201546106796003840161191d565b906106e96004850154926106d960ff6005880154169161069b6006890161191d565b946106b460086106ad60078c0161191d565b9a0161191d565b9a6040519e8f9e8f908152015260408d015260608c61012091829101528c0190611786565b9360808b015260a08a01906117c6565b87820360c0890152611786565b9085820360e0870152611786565b90838203610100850152611786565b0390f35b34610146576000366003190112610146576107306119c3565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101465761077e36611751565b9180600052602092600384526107a260018060a01b036040600020541633146119ef565b81600052600284526107ba6040600020548410611a3b565b81600052600193848152604060002084600052815260ff6005604060002001541660058110156103ed576107ee9015611a7c565b8260005284815260406000208460005281526005604060002001600460ff19825416179055826000528481526040600020846000528152600760406000200182516001600160401b03811161036c5761084782546118e3565b601f8111610918575b508296601f82116001146108b0578180917f1131d9b33dacd5043302ebe5126de7550c4ca8f01092e4a8f198e52e6bbdfcce97989960009361029857501b916000199060031b1c1916179055610293604051928284938452830190611786565b90601f1981169783600052846000209860005b818110610903575090827f1131d9b33dacd5043302ebe5126de7550c4ca8f01092e4a8f198e52e6bbdfcce98999a92106102f7575050811b01905561027f565b878301518b55998401999186019186016108c3565b8260005283600020601f830160051c810191858410610957575b601f0160051c019088905b82811061094b575050610850565b6000815501889061093d565b9091508190610932565b346101465761096f366118cd565b90610978611ae3565b5060005260016020526040600020906000526020526107136040600020610a1f6008604051926109a7846116a3565b8054845260018101546001600160a01b03166020850152600281015460408501526109d46003820161191d565b6060850152600481015460808501526109f760ff60058301541660a08601611ad7565b610a036006820161191d565b60c0850152610a146007820161191d565b60e08501520161191d565b6101008201526040519182916020835260208301906117d3565b34610146576020366003190112610146576004356000526003602052606060406000206001815491015460ff6040519260018060a01b038116845260a01c16151560208301526040820152f35b34610146576080366003190112610146576024356004356001600160401b0360443560643582811161014657610ac09036906004016116fb565b8360005260209260028452610adb6040600020548710611a3b565b84600052600190818552604060002087600052855260018060a01b038260406000200154163303610d485785600052818552604060002087600052855260ff6005604060002001541660058110156103ed57600403610cf35785600052818552604060002087600052855283600260406000200155856000528185526040600020876000528552600360406000200190835190811161036c57610b7e82546118e3565b601f8111610caa575b5085601f8211600114610c2057918161029394927fff8032bdb7048063741d028837c6b1dc7ba91d1915100882519364c030a0441898979694600091610c15575b50600019600383901b1c191690831b1790555b86600052845260406000208760005284526005604060002001600360ff198254161790556040805194859485528401526040830190611786565b90508401518b610bc8565b601f1982169083600052876000209160005b818110610c955750927fff8032bdb7048063741d028837c6b1dc7ba91d1915100882519364c030a04418989796949286949282610293989410610c7c575b5050811b019055610bdb565b86015160001960f88460031b161c191690558b80610c70565b87830151845592860192918901918901610c32565b8260005286600020601f830160051c810191888410610ce9575b601f0160051c019084905b828110610cdd575050610b87565b60008155018490610ccf565b9091508190610cc4565b60405162461bcd60e51b815260048101869052602760248201527f426964206e6f7420696e206d6f64696669636174696f6e2072657175657374656044820152666420737461746560c81b6064820152608490fd5b60405162461bcd60e51b815260048101869052602160248201527f4e6f7420617574686f72697a656420746f206d6f6469667920746869732062696044820152601960fa1b6064820152608490fd5b3461014657602080600319360112610146576001600160a01b03600435818116908190036101465760009060015b60008052600285526040600020548111610e3e576001855260406000206000198201828111610e2857600052855281846001604060002001541614610e13575b610e0e90611ac8565b610dc5565b91610e20610e0e91611ac8565b929050610e05565b634e487b7160e01b600052601160045260246000fd5b50610e498492611b42565b9060009060015b6000805260028086526040600020548211610f2357600186526040600020600019830190838211610e285781600052875283886001604060002001541614610ea3575b5050610e9e90611ac8565b610e50565b93610f1b91610e9e939560008052600189526040600020906000528852610efa6008604060002060405193610ed7856116a3565b815485528c6001830154168c86015281015460408501526109d46003820161191d565b610100820152610f0a8288611b92565b52610f158187611b92565b50611ac8565b929087610e93565b60405180610713878261186b565b346101465760208060031936011261014657600435806000526002808352610f5d604060002054611b42565b9260005b83600052828252604060002054811015610f2357610fc99060018084526040600020826000528452610efa6008604060002060405193610fa0856116a3565b815485528101546001600160a01b0316878501528781015460408501526109d46003820161191d565b610f61565b3461014657610fdc36611751565b82600093929352600360205260ff60406000205460a01c16156116675781600052600360205260016040600020015442116116295781600052600260205260406000206110298154611ac8565b90558160005260026020526040600020549081600019810111610e2857604051611052816116a3565b83815260208101913383526040820186815260608301918252426080840152600060a0840152604051611084816116bf565b6000815260c0840152604051611099816116bf565b6000815260e08401526040516110ae816116bf565b600081526101008401528560005260016020526040600020600019860160005260205260406000209383518555600185019060018060a01b039051166bffffffffffffffffffffffff60a01b825416179055516002840155518051906001600160401b03821161036c57819061112760038601546118e3565b601f81116115d6575b50602090601f831160011461156457600092611559575b50508160011b916000199060031b1c19161760038301555b608081015160048301556005820160a082015160058110156103ed5760ff8019835416911617905560c08101518051906001600160401b03821161036c5781906111ac60068601546118e3565b601f8111611506575b50602090601f831160011461149457600092611489575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b03821161036c5761120760078501546118e3565b601f8111611442575b50602090601f83116001146113ce57610100939291600091836113c3575b50508160011b916000199060031b1c19161760078401555b01518051906001600160401b03821161036c5761126660088401546118e3565b601f8111611378575b50602090601f83116001146112e557827fb5cc2e6a75ba593196ae1600d90399014d2790179ceae0b5d9a2303144028bad9593604095936008936000926112da575b50508160011b916000199060031b1c1916179101555b81519433865260208601526000190193a3005b0151905089806112b1565b90601f198316916008850160005260206000209260005b81811061136057509360409593600893600193837fb5cc2e6a75ba593196ae1600d90399014d2790179ceae0b5d9a2303144028bad9a9810611347575b505050811b019101556112c7565b015160001960f88460031b161c19169055898080611339565b929360206001819287860151815501950193016112fc565b600884016000526020600020601f840160051c810191602085106113b9575b601f0160051c01905b8181106113ad575061126f565b600081556001016113a0565b9091508190611397565b01519050888061122e565b906007850160005260206000209160005b601f198516811061142a57509183916001936101009695601f19811610611411575b505050811b016007840155611246565b015160001960f88460031b161c19169055888080611401565b919260206001819286850151815501940192016113df565b600785016000526020600020601f840160051c810160208510611482575b601f830160051c82018110611476575050611210565b60008155600101611460565b5080611460565b0151905087806111cc565b9250600685016000526020600020906000935b601f19841685106114eb576001945083601f198116106114d2575b505050811b0160068301556111e4565b015160001960f88460031b161c191690558780806114c2565b818101518355602094850194600190930192909101906114a7565b909150600685016000526020600020601f840160051c810160208510611552575b90849392915b601f830160051c820181106115435750506111b5565b6000815585945060010161152d565b5080611527565b015190508780611147565b9250600385016000526020600020906000935b601f19841685106115bb576001945083601f198116106115a2575b505050811b01600383015561115f565b015160001960f88460031b161c19169055878080611592565b81810151835560209485019460019093019290910190611577565b909150600385016000526020600020601f840160051c810160208510611622575b90849392915b601f830160051c82018110611613575050611130565b600081558594506001016115fd565b50806115f7565b60405162461bcd60e51b815260206004820152601660248201527515195b99195c88191958591b1a5b99481c185cdcd95960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527354656e646572206973206e6f742061637469766560601b6044820152606490fd5b61012081019081106001600160401b0382111761036c57604052565b602081019081106001600160401b0382111761036c57604052565b90601f801991011681019081106001600160401b0382111761036c57604052565b81601f82011215610146578035906001600160401b03821161036c576040519261172f601f8401601f1916602001856116da565b8284526020838301011161014657816000926020809301838601378301015290565b6060600319820112610146576004359160243591604435906001600160401b03821161014657611783916004016116fb565b90565b919082519283825260005b8481106117b2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611791565b9060058210156103ed5752565b90611783918051825260018060a01b036020820151166020830152604081015160408301526118576118456118176060840151610120806060880152860190611786565b6080840151608086015261183360a085015160a08701906117c6565b60c084015185820360c0870152611786565b60e083015184820360e0860152611786565b916101008092015191818403910152611786565b602080820190808352835180925260408301928160408460051b8301019501936000915b84831061189f5750505050505090565b90919293949584806118bd600193603f198682030187528a516117d3565b980193019301919493929061188f565b6040906003190112610146576004359060243590565b90600182811c92168015611913575b60208310146118fd57565b634e487b7160e01b600052602260045260246000fd5b91607f16916118f2565b9060405191826000825492611931846118e3565b9081845260019485811690816000146119a0575060011461195d575b505061195b925003836116da565b565b9093915060005260209081600020936000915b81831061198857505061195b9350820101388061194d565b85548884018501529485019487945091830191611970565b91505061195b94506020925060ff191682840152151560051b820101388061194d565b6000546001600160a01b031633036119d757565b60405163118cdaa760e01b8152336004820152602490fd5b156119f657565b60405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742074656e646572206f666669636572000000006044820152606490fd5b15611a4257565b60405162461bcd60e51b8152602060048201526012602482015271109a5908191bd95cc81b9bdd08195e1a5cdd60721b6044820152606490fd5b15611a8357565b60405162461bcd60e51b815260206004820152601860248201527f426964206e6f7420696e2070656e64696e6720737461746500000000000000006044820152606490fd5b6000198114610e285760010190565b60058210156103ed5752565b60405190611af0826116a3565b606061010083600081526000602082015260006040820152828082015260006080820152600060a08201528260c08201528260e08201520152565b6001600160401b03811161036c5760051b60200190565b90611b4c82611b2b565b611b5960405191826116da565b8281528092611b6a601f1991611b2b565b019060005b828110611b7b57505050565b602090611b86611ae3565b82828501015201611b6f565b8051821015611ba65760209160051b010190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212200e211a926359350eb6aa9110beafd276eae1ba0f9e157d15b9671f345d936d1664736f6c63430008140033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x1F PUSH2 0x1CC9 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC0 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBB JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xBB JUMPI DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x1BF2 SWAP1 DUP2 PUSH2 0xD7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14C60BDD EQ PUSH2 0xFCE JUMPI DUP1 PUSH4 0x267B51B3 EQ PUSH2 0xF31 JUMPI DUP1 PUSH4 0x2E78B869 EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0x3FC898D2 EQ PUSH2 0xA86 JUMPI DUP1 PUSH4 0x465E1DEF EQ PUSH2 0xA39 JUMPI DUP1 PUSH4 0x582C7FFD EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0x5B8C665C EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x717 JUMPI DUP1 PUSH4 0x7B3C4BAA EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x7C8ECD2F EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x928C1784 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x9F07D462 EQ PUSH2 0x14B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x146 JUMPI PUSH2 0xE5 PUSH2 0x19C3 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x159 CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x3 DUP5 MSTORE PUSH2 0x17D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x19EF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH2 0x195 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP5 LT PUSH2 0x1A3B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x5 PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND DUP2 DUP2 LT ISZERO PUSH2 0x3ED JUMPI ISZERO DUP1 ISZERO PUSH2 0x3BF JUMPI JUMPDEST ISZERO PUSH2 0x382 JUMPI DUP4 PUSH1 0x0 MSTORE DUP6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE DUP6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP4 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH2 0x226 DUP4 SLOAD PUSH2 0x18E3 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x325 JUMPI JUMPDEST POP POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2A3 JUMPI DUP2 DUP1 SWAP2 PUSH32 0x7A9BC058A0636C74F09FBA8B41A836B2D26F59E8B63350B3B633DF61DEF6F1CF SWAP8 SWAP9 SWAP10 PUSH1 0x0 SWAP4 PUSH2 0x298 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x293 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST DUP8 ADD MLOAD SWAP3 POP DUP11 PUSH2 0x26E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP2 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x310 JUMPI POP SWAP1 DUP3 PUSH32 0x7A9BC058A0636C74F09FBA8B41A836B2D26F59E8B63350B3B633DF61DEF6F1CF SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x2F7 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27F JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x2EB JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x2B6 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F DUP5 ADD DUP2 SHR DUP3 ADD SWAP3 DUP7 DUP6 LT PUSH2 0x362 JUMPI JUMPDEST PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x356 JUMPI POP PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x349 JUMP JUMPDEST SWAP2 SWAP3 POP DUP3 SWAP2 PUSH2 0x33F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x109A5908185B1C9958591E481C1C9BD8D95CDCD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x0 MSTORE DUP6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND DUP2 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x3 EQ PUSH2 0x1C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x411 CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x3 DUP5 MSTORE PUSH2 0x435 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x19EF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH2 0x44D PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP5 LT PUSH2 0x1A3B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x481 SWAP1 ISZERO PUSH2 0x1A7C JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36C JUMPI PUSH2 0x4B5 DUP3 SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x586 JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x51E JUMPI DUP2 DUP1 SWAP2 PUSH32 0xD7ED299E5E685E22477FC439DF8043DF54D62F2B07ADA5AEDA8003A8B376014E SWAP8 SWAP9 SWAP10 PUSH1 0x0 SWAP4 PUSH2 0x298 JUMPI POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x293 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP2 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x571 JUMPI POP SWAP1 DUP3 PUSH32 0xD7ED299E5E685E22477FC439DF8043DF54D62F2B07ADA5AEDA8003A8B376014E SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x2F7 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27F JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x531 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x5C5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5B9 JUMPI POP POP PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x5AB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x632 CALLDATASIZE PUSH2 0x18CD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x713 DUP2 SLOAD SWAP2 PUSH2 0x704 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x6F6 PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x679 PUSH1 0x3 DUP5 ADD PUSH2 0x191D JUMP JUMPDEST SWAP1 PUSH2 0x6E9 PUSH1 0x4 DUP6 ADD SLOAD SWAP3 PUSH2 0x6D9 PUSH1 0xFF PUSH1 0x5 DUP9 ADD SLOAD AND SWAP2 PUSH2 0x69B PUSH1 0x6 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 PUSH2 0x6B4 PUSH1 0x8 PUSH2 0x6AD PUSH1 0x7 DUP13 ADD PUSH2 0x191D JUMP JUMPDEST SWAP11 ADD PUSH2 0x191D JUMP JUMPDEST SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 PUSH2 0x120 SWAP2 DUP3 SWAP2 ADD MSTORE DUP13 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD SWAP1 PUSH2 0x17C6 JUMP JUMPDEST DUP8 DUP3 SUB PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH2 0x730 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x77E CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x3 DUP5 MSTORE PUSH2 0x7A2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x19EF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH2 0x7BA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP5 LT PUSH2 0x1A3B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x7EE SWAP1 ISZERO PUSH2 0x1A7C JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 PUSH1 0x0 MSTORE DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36C JUMPI PUSH2 0x847 DUP3 SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x918 JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x8B0 JUMPI DUP2 DUP1 SWAP2 PUSH32 0x1131D9B33DACD5043302EBE5126DE7550C4CA8F01092E4A8F198E52E6BBDFCCE SWAP8 SWAP9 SWAP10 PUSH1 0x0 SWAP4 PUSH2 0x298 JUMPI POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x293 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP2 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x903 JUMPI POP SWAP1 DUP3 PUSH32 0x1131D9B33DACD5043302EBE5126DE7550C4CA8F01092E4A8F198E52E6BBDFCCE SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x2F7 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27F JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x8C3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x957 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x94B JUMPI POP POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x93D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x96F CALLDATASIZE PUSH2 0x18CD JUMP JUMPDEST SWAP1 PUSH2 0x978 PUSH2 0x1AE3 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x713 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xA1F PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x9A7 DUP5 PUSH2 0x16A3 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x9D4 PUSH1 0x3 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x9F7 PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0xA0 DUP7 ADD PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0xA03 PUSH1 0x6 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xA14 PUSH1 0x7 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE ADD PUSH2 0x191D JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x17D3 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x146 JUMPI PUSH2 0xAC0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16FB JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x2 DUP5 MSTORE PUSH2 0xADB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP8 LT PUSH2 0x1A3B JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER SUB PUSH2 0xD48 JUMPI DUP6 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x4 SUB PUSH2 0xCF3 JUMPI DUP6 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE DUP4 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE DUP6 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP4 MLOAD SWAP1 DUP2 GT PUSH2 0x36C JUMPI PUSH2 0xB7E DUP3 SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCAA JUMPI JUMPDEST POP DUP6 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xC20 JUMPI SWAP2 DUP2 PUSH2 0x293 SWAP5 SWAP3 PUSH32 0xFF8032BDB7048063741D028837C6B1DC7BA91D1915100882519364C030A04418 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xC15 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP1 POP DUP5 ADD MLOAD DUP12 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC95 JUMPI POP SWAP3 PUSH32 0xFF8032BDB7048063741D028837C6B1DC7BA91D1915100882519364C030A04418 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 DUP7 SWAP5 SWAP3 DUP3 PUSH2 0x293 SWAP9 SWAP5 LT PUSH2 0xC7C JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xBDB JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0xC70 JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP7 ADD SWAP3 SWAP2 DUP10 ADD SWAP2 DUP10 ADD PUSH2 0xC32 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP9 DUP5 LT PUSH2 0xCE9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP5 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xCDD JUMPI POP POP PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP5 SWAP1 PUSH2 0xCCF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426964206E6F7420696E206D6F64696669636174696F6E207265717565737465 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x64207374617465 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D6F646966792074686973206269 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x146 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 GT PUSH2 0xE3E JUMPI PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP3 ADD DUP3 DUP2 GT PUSH2 0xE28 JUMPI PUSH1 0x0 MSTORE DUP6 MSTORE DUP2 DUP5 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND EQ PUSH2 0xE13 JUMPI JUMPDEST PUSH2 0xE0E SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH2 0xDC5 JUMP JUMPDEST SWAP2 PUSH2 0xE20 PUSH2 0xE0E SWAP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xE05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xE49 DUP5 SWAP3 PUSH2 0x1B42 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP3 GT PUSH2 0xF23 JUMPI PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP4 ADD SWAP1 DUP4 DUP3 GT PUSH2 0xE28 JUMPI DUP2 PUSH1 0x0 MSTORE DUP8 MSTORE DUP4 DUP9 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND EQ PUSH2 0xEA3 JUMPI JUMPDEST POP POP PUSH2 0xE9E SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST SWAP4 PUSH2 0xF1B SWAP2 PUSH2 0xE9E SWAP4 SWAP6 PUSH1 0x0 DUP1 MSTORE PUSH1 0x1 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE DUP9 MSTORE PUSH2 0xEFA PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xED7 DUP6 PUSH2 0x16A3 JUMP JUMPDEST DUP2 SLOAD DUP6 MSTORE DUP13 PUSH1 0x1 DUP4 ADD SLOAD AND DUP13 DUP7 ADD MSTORE DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x9D4 PUSH1 0x3 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xF0A DUP3 DUP9 PUSH2 0x1B92 JUMP JUMPDEST MSTORE PUSH2 0xF15 DUP2 DUP8 PUSH2 0x1B92 JUMP JUMPDEST POP PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 SWAP1 DUP8 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x713 DUP8 DUP3 PUSH2 0x186B JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP4 MSTORE PUSH2 0xF5D PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B42 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xF23 JUMPI PUSH2 0xFC9 SWAP1 PUSH1 0x1 DUP1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0xEFA PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xFA0 DUP6 PUSH2 0x16A3 JUMP JUMPDEST DUP2 SLOAD DUP6 MSTORE DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 ADD MSTORE DUP8 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x9D4 PUSH1 0x3 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH2 0xF61 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0xFDC CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST DUP3 PUSH1 0x0 SWAP4 SWAP3 SWAP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1667 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT PUSH2 0x1629 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1029 DUP2 SLOAD PUSH2 0x1AC8 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1052 DUP2 PUSH2 0x16A3 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x40 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE TIMESTAMP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1084 DUP2 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1099 DUP2 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x10AE DUP2 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x100 DUP5 ADD MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP4 MLOAD DUP6 SSTORE PUSH1 0x1 DUP6 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI DUP2 SWAP1 PUSH2 0x1127 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15D6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1559 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI DUP2 SWAP1 PUSH2 0x11AC PUSH1 0x6 DUP7 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1506 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1494 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1489 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP4 ADD SSTORE JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH2 0x1207 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1442 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x13CE JUMPI PUSH2 0x100 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x13C3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP5 ADD SSTORE JUMPDEST ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH2 0x1266 PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1378 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x12E5 JUMPI DUP3 PUSH32 0xB5CC2E6A75BA593196AE1600D90399014D2790179CEAE0B5D9A2303144028BAD SWAP6 SWAP4 PUSH1 0x40 SWAP6 SWAP4 PUSH1 0x8 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x12DA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST DUP2 MLOAD SWAP5 CALLER DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x0 NOT ADD SWAP4 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1360 JUMPI POP SWAP4 PUSH1 0x40 SWAP6 SWAP4 PUSH1 0x8 SWAP4 PUSH1 0x1 SWAP4 DUP4 PUSH32 0xB5CC2E6A75BA593196AE1600D90399014D2790179CEAE0B5D9A2303144028BAD SWAP11 SWAP9 LT PUSH2 0x1347 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0x12C7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x1339 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x13B9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x13AD JUMPI POP PUSH2 0x126F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13A0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x122E JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x142A JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x100 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1411 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP5 ADD SSTORE PUSH2 0x1246 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1401 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1482 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1476 JUMPI POP POP PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1460 JUMP JUMPDEST POP DUP1 PUSH2 0x1460 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x11CC JUMP JUMPDEST SWAP3 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x14EB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x14D2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 DUP4 ADD SSTORE PUSH2 0x11E4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x14C2 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x14A7 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1552 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1543 JUMPI POP POP PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x152D JUMP JUMPDEST POP DUP1 PUSH2 0x1527 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1147 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x15BB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x15A2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x115F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1592 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1577 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1622 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1613 JUMPI POP POP PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x15FD JUMP JUMPDEST POP DUP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15195B99195C88191958591B1A5B99481C185CDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x54656E646572206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x36C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x36C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x36C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x146 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x172F PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x16DA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x146 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146 JUMPI PUSH2 0x1783 SWAP2 PUSH1 0x4 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x17B2 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1791 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3ED JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1783 SWAP2 DUP1 MLOAD DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1857 PUSH2 0x1845 PUSH2 0x1817 PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x120 DUP1 PUSH1 0x60 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x1833 PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD DUP6 DUP3 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP1 SWAP3 ADD MLOAD SWAP2 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x189F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x18BD PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x17D3 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1913 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18FD JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1931 DUP5 PUSH2 0x18E3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x19A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x195D JUMPI JUMPDEST POP POP PUSH2 0x195B SWAP3 POP SUB DUP4 PUSH2 0x16DA JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1988 JUMPI POP POP PUSH2 0x195B SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x194D JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x195B SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x19D7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x19F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074656E646572206F66666963657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A42 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109A5908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A83 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426964206E6F7420696E2070656E64696E672073746174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE28 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3ED JUMPI MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1AF0 DUP3 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x100 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B4C DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1B59 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x16DA JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B6A PUSH1 0x1F NOT SWAP2 PUSH2 0x1B2B JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1B7B JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1B86 PUSH2 0x1AE3 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1B6F JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1BA6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 BYTE SWAP3 PUSH4 0x59350EB6 0xAA SWAP2 LT 0xBE 0xAF 0xD2 PUSH23 0xEAE1BA0F9E157D15B9671F345D936D1664736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"163:6111:8:-:0;;;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;163:6111:8;;-1:-1:-1;;;;;;163:6111:8;;;;;;;;;;;3052:40:0;;-1:-1:-1;3052:40:0;163:6111:8;;;;;;;1269:95:0;163:6111:8;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;163:6111:8;;;1322:31:0;163:6111:8;-1:-1:-1;163:6111:8;;;;;;-1:-1:-1;163:6111:8;;;;;-1:-1:-1;163:6111:8"},"deployedBytecode":{"functionDebugData":{"abi_decode_string":{"entryPoint":5883,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":6349,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint256t_uint256t_string":{"entryPoint":5969,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_array_struct_Bid_dyn":{"entryPoint":6251,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_BidStatus":{"entryPoint":6086,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":6022,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Bid":{"entryPoint":6099,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_struct_Bid_dyn":{"entryPoint":6978,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Bid":{"entryPoint":6883,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Bid_dyn":{"entryPoint":6955,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":6429,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6371,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":5850,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_25244":{"entryPoint":5795,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_32246":{"entryPoint":5823,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":6595,"id":84,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":6856,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_Bid_dyn":{"entryPoint":7058,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_25e9":{"entryPoint":6639,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9b00":{"entryPoint":6715,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e476":{"entryPoint":6780,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_enum_BidStatus":{"entryPoint":6871,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806314c60bdd14610fce578063267b51b314610f315780632e78b86914610d975780633fc898d214610a86578063465e1def14610a39578063582c7ffd146109615780635b8c665c14610770578063715018a6146107175780637b3c4baa146106245780637c8ecd2f146105f85780638da5cb5b146105cf578063928c1784146104035780639f07d4621461014b5763f2fde38b146100b657600080fd5b34610146576020366003190112610146576004356001600160a01b0381811691829003610146576100e56119c3565b811561012d57600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b346101465761015936611751565b91806000526020926003845261017d60018060a01b036040600020541633146119ef565b81600052600284526101956040600020548410611a3b565b816000526001938481526040600020846000528152600560ff816040600020015416818110156103ed571580156103bf575b156103825783600052858252604060002085600052825280604060002001600260ff198254161790558360005285825260406000208560005282526008604060002001908351906001600160401b03821161036c5761022683546118e3565b90601f8211610325575b50508296601f82116001146102a3578180917f7a9bc058a0636c74f09fba8b41a836b2d26f59e8b63350b3b633df61def6f1cf979899600093610298575b501b916000199060031b1c19161790555b610293604051928284938452830190611786565b0390a3005b87015192508a61026e565b90601f1981169783600052846000209860005b818110610310575090827f7a9bc058a0636c74f09fba8b41a836b2d26f59e8b63350b3b633df61def6f1cf98999a92106102f7575b5050811b01905561027f565b86015160001960f88460031b161c1916905588806102eb565b878301518b55998401999186019186016102b6565b836000528460002090601f8401811c820192868510610362575b601f01901c019088905b8281106103565750610230565b60008155018890610349565b919250829161033f565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b8152600481018390526015602482015274109a5908185b1c9958591e481c1c9bd8d95cdcd959605a1b6044820152606490fd5b5083600052858252604060002085600052825260ff816040600020015416818110156103ed576003146101c7565b634e487b7160e01b600052602160045260246000fd5b346101465761041136611751565b91806000526020926003845261043560018060a01b036040600020541633146119ef565b816000526002845261044d6040600020548410611a3b565b81600052600193848152604060002084600052815260ff6005604060002001541660058110156103ed576104819015611a7c565b826000528481526040600020846000528152600660406000200182516001600160401b03811161036c576104b582546118e3565b601f8111610586575b508296601f821160011461051e578180917fd7ed299e5e685e22477fc439df8043df54d62f2b07ada5aeda8003a8b376014e97989960009361029857501b916000199060031b1c1916179055610293604051928284938452830190611786565b90601f1981169783600052846000209860005b818110610571575090827fd7ed299e5e685e22477fc439df8043df54d62f2b07ada5aeda8003a8b376014e98999a92106102f7575050811b01905561027f565b878301518b5599840199918601918601610531565b8260005283600020601f830160051c8101918584106105c5575b601f0160051c019088905b8281106105b95750506104be565b600081550188906105ab565b90915081906105a0565b34610146576000366003190112610146576000546040516001600160a01b039091168152602090f35b346101465760203660031901126101465760043560005260026020526020604060002054604051908152f35b3461014657610632366118cd565b9060005260016020526040600020906000526020526020604060002061071381549161070460018060a01b03600183015416916106f660028201546106796003840161191d565b906106e96004850154926106d960ff6005880154169161069b6006890161191d565b946106b460086106ad60078c0161191d565b9a0161191d565b9a6040519e8f9e8f908152015260408d015260608c61012091829101528c0190611786565b9360808b015260a08a01906117c6565b87820360c0890152611786565b9085820360e0870152611786565b90838203610100850152611786565b0390f35b34610146576000366003190112610146576107306119c3565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101465761077e36611751565b9180600052602092600384526107a260018060a01b036040600020541633146119ef565b81600052600284526107ba6040600020548410611a3b565b81600052600193848152604060002084600052815260ff6005604060002001541660058110156103ed576107ee9015611a7c565b8260005284815260406000208460005281526005604060002001600460ff19825416179055826000528481526040600020846000528152600760406000200182516001600160401b03811161036c5761084782546118e3565b601f8111610918575b508296601f82116001146108b0578180917f1131d9b33dacd5043302ebe5126de7550c4ca8f01092e4a8f198e52e6bbdfcce97989960009361029857501b916000199060031b1c1916179055610293604051928284938452830190611786565b90601f1981169783600052846000209860005b818110610903575090827f1131d9b33dacd5043302ebe5126de7550c4ca8f01092e4a8f198e52e6bbdfcce98999a92106102f7575050811b01905561027f565b878301518b55998401999186019186016108c3565b8260005283600020601f830160051c810191858410610957575b601f0160051c019088905b82811061094b575050610850565b6000815501889061093d565b9091508190610932565b346101465761096f366118cd565b90610978611ae3565b5060005260016020526040600020906000526020526107136040600020610a1f6008604051926109a7846116a3565b8054845260018101546001600160a01b03166020850152600281015460408501526109d46003820161191d565b6060850152600481015460808501526109f760ff60058301541660a08601611ad7565b610a036006820161191d565b60c0850152610a146007820161191d565b60e08501520161191d565b6101008201526040519182916020835260208301906117d3565b34610146576020366003190112610146576004356000526003602052606060406000206001815491015460ff6040519260018060a01b038116845260a01c16151560208301526040820152f35b34610146576080366003190112610146576024356004356001600160401b0360443560643582811161014657610ac09036906004016116fb565b8360005260209260028452610adb6040600020548710611a3b565b84600052600190818552604060002087600052855260018060a01b038260406000200154163303610d485785600052818552604060002087600052855260ff6005604060002001541660058110156103ed57600403610cf35785600052818552604060002087600052855283600260406000200155856000528185526040600020876000528552600360406000200190835190811161036c57610b7e82546118e3565b601f8111610caa575b5085601f8211600114610c2057918161029394927fff8032bdb7048063741d028837c6b1dc7ba91d1915100882519364c030a0441898979694600091610c15575b50600019600383901b1c191690831b1790555b86600052845260406000208760005284526005604060002001600360ff198254161790556040805194859485528401526040830190611786565b90508401518b610bc8565b601f1982169083600052876000209160005b818110610c955750927fff8032bdb7048063741d028837c6b1dc7ba91d1915100882519364c030a04418989796949286949282610293989410610c7c575b5050811b019055610bdb565b86015160001960f88460031b161c191690558b80610c70565b87830151845592860192918901918901610c32565b8260005286600020601f830160051c810191888410610ce9575b601f0160051c019084905b828110610cdd575050610b87565b60008155018490610ccf565b9091508190610cc4565b60405162461bcd60e51b815260048101869052602760248201527f426964206e6f7420696e206d6f64696669636174696f6e2072657175657374656044820152666420737461746560c81b6064820152608490fd5b60405162461bcd60e51b815260048101869052602160248201527f4e6f7420617574686f72697a656420746f206d6f6469667920746869732062696044820152601960fa1b6064820152608490fd5b3461014657602080600319360112610146576001600160a01b03600435818116908190036101465760009060015b60008052600285526040600020548111610e3e576001855260406000206000198201828111610e2857600052855281846001604060002001541614610e13575b610e0e90611ac8565b610dc5565b91610e20610e0e91611ac8565b929050610e05565b634e487b7160e01b600052601160045260246000fd5b50610e498492611b42565b9060009060015b6000805260028086526040600020548211610f2357600186526040600020600019830190838211610e285781600052875283886001604060002001541614610ea3575b5050610e9e90611ac8565b610e50565b93610f1b91610e9e939560008052600189526040600020906000528852610efa6008604060002060405193610ed7856116a3565b815485528c6001830154168c86015281015460408501526109d46003820161191d565b610100820152610f0a8288611b92565b52610f158187611b92565b50611ac8565b929087610e93565b60405180610713878261186b565b346101465760208060031936011261014657600435806000526002808352610f5d604060002054611b42565b9260005b83600052828252604060002054811015610f2357610fc99060018084526040600020826000528452610efa6008604060002060405193610fa0856116a3565b815485528101546001600160a01b0316878501528781015460408501526109d46003820161191d565b610f61565b3461014657610fdc36611751565b82600093929352600360205260ff60406000205460a01c16156116675781600052600360205260016040600020015442116116295781600052600260205260406000206110298154611ac8565b90558160005260026020526040600020549081600019810111610e2857604051611052816116a3565b83815260208101913383526040820186815260608301918252426080840152600060a0840152604051611084816116bf565b6000815260c0840152604051611099816116bf565b6000815260e08401526040516110ae816116bf565b600081526101008401528560005260016020526040600020600019860160005260205260406000209383518555600185019060018060a01b039051166bffffffffffffffffffffffff60a01b825416179055516002840155518051906001600160401b03821161036c57819061112760038601546118e3565b601f81116115d6575b50602090601f831160011461156457600092611559575b50508160011b916000199060031b1c19161760038301555b608081015160048301556005820160a082015160058110156103ed5760ff8019835416911617905560c08101518051906001600160401b03821161036c5781906111ac60068601546118e3565b601f8111611506575b50602090601f831160011461149457600092611489575b50508160011b916000199060031b1c19161760068301555b60e08101518051906001600160401b03821161036c5761120760078501546118e3565b601f8111611442575b50602090601f83116001146113ce57610100939291600091836113c3575b50508160011b916000199060031b1c19161760078401555b01518051906001600160401b03821161036c5761126660088401546118e3565b601f8111611378575b50602090601f83116001146112e557827fb5cc2e6a75ba593196ae1600d90399014d2790179ceae0b5d9a2303144028bad9593604095936008936000926112da575b50508160011b916000199060031b1c1916179101555b81519433865260208601526000190193a3005b0151905089806112b1565b90601f198316916008850160005260206000209260005b81811061136057509360409593600893600193837fb5cc2e6a75ba593196ae1600d90399014d2790179ceae0b5d9a2303144028bad9a9810611347575b505050811b019101556112c7565b015160001960f88460031b161c19169055898080611339565b929360206001819287860151815501950193016112fc565b600884016000526020600020601f840160051c810191602085106113b9575b601f0160051c01905b8181106113ad575061126f565b600081556001016113a0565b9091508190611397565b01519050888061122e565b906007850160005260206000209160005b601f198516811061142a57509183916001936101009695601f19811610611411575b505050811b016007840155611246565b015160001960f88460031b161c19169055888080611401565b919260206001819286850151815501940192016113df565b600785016000526020600020601f840160051c810160208510611482575b601f830160051c82018110611476575050611210565b60008155600101611460565b5080611460565b0151905087806111cc565b9250600685016000526020600020906000935b601f19841685106114eb576001945083601f198116106114d2575b505050811b0160068301556111e4565b015160001960f88460031b161c191690558780806114c2565b818101518355602094850194600190930192909101906114a7565b909150600685016000526020600020601f840160051c810160208510611552575b90849392915b601f830160051c820181106115435750506111b5565b6000815585945060010161152d565b5080611527565b015190508780611147565b9250600385016000526020600020906000935b601f19841685106115bb576001945083601f198116106115a2575b505050811b01600383015561115f565b015160001960f88460031b161c19169055878080611592565b81810151835560209485019460019093019290910190611577565b909150600385016000526020600020601f840160051c810160208510611622575b90849392915b601f830160051c82018110611613575050611130565b600081558594506001016115fd565b50806115f7565b60405162461bcd60e51b815260206004820152601660248201527515195b99195c88191958591b1a5b99481c185cdcd95960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527354656e646572206973206e6f742061637469766560601b6044820152606490fd5b61012081019081106001600160401b0382111761036c57604052565b602081019081106001600160401b0382111761036c57604052565b90601f801991011681019081106001600160401b0382111761036c57604052565b81601f82011215610146578035906001600160401b03821161036c576040519261172f601f8401601f1916602001856116da565b8284526020838301011161014657816000926020809301838601378301015290565b6060600319820112610146576004359160243591604435906001600160401b03821161014657611783916004016116fb565b90565b919082519283825260005b8481106117b2575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611791565b9060058210156103ed5752565b90611783918051825260018060a01b036020820151166020830152604081015160408301526118576118456118176060840151610120806060880152860190611786565b6080840151608086015261183360a085015160a08701906117c6565b60c084015185820360c0870152611786565b60e083015184820360e0860152611786565b916101008092015191818403910152611786565b602080820190808352835180925260408301928160408460051b8301019501936000915b84831061189f5750505050505090565b90919293949584806118bd600193603f198682030187528a516117d3565b980193019301919493929061188f565b6040906003190112610146576004359060243590565b90600182811c92168015611913575b60208310146118fd57565b634e487b7160e01b600052602260045260246000fd5b91607f16916118f2565b9060405191826000825492611931846118e3565b9081845260019485811690816000146119a0575060011461195d575b505061195b925003836116da565b565b9093915060005260209081600020936000915b81831061198857505061195b9350820101388061194d565b85548884018501529485019487945091830191611970565b91505061195b94506020925060ff191682840152151560051b820101388061194d565b6000546001600160a01b031633036119d757565b60405163118cdaa760e01b8152336004820152602490fd5b156119f657565b60405162461bcd60e51b815260206004820152601c60248201527f43616c6c6572206973206e6f742074656e646572206f666669636572000000006044820152606490fd5b15611a4257565b60405162461bcd60e51b8152602060048201526012602482015271109a5908191bd95cc81b9bdd08195e1a5cdd60721b6044820152606490fd5b15611a8357565b60405162461bcd60e51b815260206004820152601860248201527f426964206e6f7420696e2070656e64696e6720737461746500000000000000006044820152606490fd5b6000198114610e285760010190565b60058210156103ed5752565b60405190611af0826116a3565b606061010083600081526000602082015260006040820152828082015260006080820152600060a08201528260c08201528260e08201520152565b6001600160401b03811161036c5760051b60200190565b90611b4c82611b2b565b611b5960405191826116da565b8281528092611b6a601f1991611b2b565b019060005b828110611b7b57505050565b602090611b86611ae3565b82828501015201611b6f565b8051821015611ba65760209160051b010190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212200e211a926359350eb6aa9110beafd276eae1ba0f9e157d15b9671f345d936d1664736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14C60BDD EQ PUSH2 0xFCE JUMPI DUP1 PUSH4 0x267B51B3 EQ PUSH2 0xF31 JUMPI DUP1 PUSH4 0x2E78B869 EQ PUSH2 0xD97 JUMPI DUP1 PUSH4 0x3FC898D2 EQ PUSH2 0xA86 JUMPI DUP1 PUSH4 0x465E1DEF EQ PUSH2 0xA39 JUMPI DUP1 PUSH4 0x582C7FFD EQ PUSH2 0x961 JUMPI DUP1 PUSH4 0x5B8C665C EQ PUSH2 0x770 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x717 JUMPI DUP1 PUSH4 0x7B3C4BAA EQ PUSH2 0x624 JUMPI DUP1 PUSH4 0x7C8ECD2F EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5CF JUMPI DUP1 PUSH4 0x928C1784 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x9F07D462 EQ PUSH2 0x14B JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND SWAP2 DUP3 SWAP1 SUB PUSH2 0x146 JUMPI PUSH2 0xE5 PUSH2 0x19C3 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12D JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x159 CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x3 DUP5 MSTORE PUSH2 0x17D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x19EF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH2 0x195 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP5 LT PUSH2 0x1A3B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x5 PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND DUP2 DUP2 LT ISZERO PUSH2 0x3ED JUMPI ISZERO DUP1 ISZERO PUSH2 0x3BF JUMPI JUMPDEST ISZERO PUSH2 0x382 JUMPI DUP4 PUSH1 0x0 MSTORE DUP6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x2 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE DUP6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP4 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH2 0x226 DUP4 SLOAD PUSH2 0x18E3 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP3 GT PUSH2 0x325 JUMPI JUMPDEST POP POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2A3 JUMPI DUP2 DUP1 SWAP2 PUSH32 0x7A9BC058A0636C74F09FBA8B41A836B2D26F59E8B63350B3B633DF61DEF6F1CF SWAP8 SWAP9 SWAP10 PUSH1 0x0 SWAP4 PUSH2 0x298 JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH2 0x293 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST DUP8 ADD MLOAD SWAP3 POP DUP11 PUSH2 0x26E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP2 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x310 JUMPI POP SWAP1 DUP3 PUSH32 0x7A9BC058A0636C74F09FBA8B41A836B2D26F59E8B63350B3B633DF61DEF6F1CF SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x2F7 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27F JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 PUSH2 0x2EB JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x2B6 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F DUP5 ADD DUP2 SHR DUP3 ADD SWAP3 DUP7 DUP6 LT PUSH2 0x362 JUMPI JUMPDEST PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x356 JUMPI POP PUSH2 0x230 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x349 JUMP JUMPDEST SWAP2 SWAP3 POP DUP3 SWAP2 PUSH2 0x33F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x109A5908185B1C9958591E481C1C9BD8D95CDCD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP4 PUSH1 0x0 MSTORE DUP6 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND DUP2 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x3 EQ PUSH2 0x1C7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x411 CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x3 DUP5 MSTORE PUSH2 0x435 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x19EF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH2 0x44D PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP5 LT PUSH2 0x1A3B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x481 SWAP1 ISZERO PUSH2 0x1A7C JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x6 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36C JUMPI PUSH2 0x4B5 DUP3 SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x586 JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x51E JUMPI DUP2 DUP1 SWAP2 PUSH32 0xD7ED299E5E685E22477FC439DF8043DF54D62F2B07ADA5AEDA8003A8B376014E SWAP8 SWAP9 SWAP10 PUSH1 0x0 SWAP4 PUSH2 0x298 JUMPI POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x293 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP2 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x571 JUMPI POP SWAP1 DUP3 PUSH32 0xD7ED299E5E685E22477FC439DF8043DF54D62F2B07ADA5AEDA8003A8B376014E SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x2F7 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27F JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x531 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x5C5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x5B9 JUMPI POP POP PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x5AB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x5A0 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x632 CALLDATASIZE PUSH2 0x18CD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x713 DUP2 SLOAD SWAP2 PUSH2 0x704 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x6F6 PUSH1 0x2 DUP3 ADD SLOAD PUSH2 0x679 PUSH1 0x3 DUP5 ADD PUSH2 0x191D JUMP JUMPDEST SWAP1 PUSH2 0x6E9 PUSH1 0x4 DUP6 ADD SLOAD SWAP3 PUSH2 0x6D9 PUSH1 0xFF PUSH1 0x5 DUP9 ADD SLOAD AND SWAP2 PUSH2 0x69B PUSH1 0x6 DUP10 ADD PUSH2 0x191D JUMP JUMPDEST SWAP5 PUSH2 0x6B4 PUSH1 0x8 PUSH2 0x6AD PUSH1 0x7 DUP13 ADD PUSH2 0x191D JUMP JUMPDEST SWAP11 ADD PUSH2 0x191D JUMP JUMPDEST SWAP11 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 SWAP1 DUP2 MSTORE ADD MSTORE PUSH1 0x40 DUP14 ADD MSTORE PUSH1 0x60 DUP13 PUSH2 0x120 SWAP2 DUP3 SWAP2 ADD MSTORE DUP13 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP4 PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD SWAP1 PUSH2 0x17C6 JUMP JUMPDEST DUP8 DUP3 SUB PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH2 0x100 DUP6 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH2 0x730 PUSH2 0x19C3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x77E CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x3 DUP5 MSTORE PUSH2 0x7A2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x19EF JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH2 0x7BA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP5 LT PUSH2 0x1A3B JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH2 0x7EE SWAP1 ISZERO PUSH2 0x1A7C JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x4 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 PUSH1 0x0 MSTORE DUP5 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE DUP2 MSTORE PUSH1 0x7 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36C JUMPI PUSH2 0x847 DUP3 SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x918 JUMPI JUMPDEST POP DUP3 SWAP7 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x8B0 JUMPI DUP2 DUP1 SWAP2 PUSH32 0x1131D9B33DACD5043302EBE5126DE7550C4CA8F01092E4A8F198E52E6BBDFCCE SWAP8 SWAP9 SWAP10 PUSH1 0x0 SWAP4 PUSH2 0x298 JUMPI POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x293 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP2 AND SWAP8 DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP9 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x903 JUMPI POP SWAP1 DUP3 PUSH32 0x1131D9B33DACD5043302EBE5126DE7550C4CA8F01092E4A8F198E52E6BBDFCCE SWAP9 SWAP10 SWAP11 SWAP3 LT PUSH2 0x2F7 JUMPI POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x27F JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP12 SSTORE SWAP10 DUP5 ADD SWAP10 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x8C3 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP6 DUP5 LT PUSH2 0x957 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP9 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x94B JUMPI POP POP PUSH2 0x850 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP9 SWAP1 PUSH2 0x93D JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x932 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0x96F CALLDATASIZE PUSH2 0x18CD JUMP JUMPDEST SWAP1 PUSH2 0x978 PUSH2 0x1AE3 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x713 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xA1F PUSH1 0x8 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x9A7 DUP5 PUSH2 0x16A3 JUMP JUMPDEST DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x9D4 PUSH1 0x3 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x9F7 PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0xA0 DUP7 ADD PUSH2 0x1AD7 JUMP JUMPDEST PUSH2 0xA03 PUSH1 0x6 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xA14 PUSH1 0x7 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE ADD PUSH2 0x191D JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x17D3 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD PUSH1 0xFF PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x146 JUMPI PUSH2 0xAC0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x16FB JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 PUSH1 0x2 DUP5 MSTORE PUSH2 0xADB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP8 LT PUSH2 0x1A3B JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND CALLER SUB PUSH2 0xD48 JUMPI DUP6 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0x4 SUB PUSH2 0xCF3 JUMPI DUP6 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE DUP4 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SSTORE DUP6 PUSH1 0x0 MSTORE DUP2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP6 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 DUP4 MLOAD SWAP1 DUP2 GT PUSH2 0x36C JUMPI PUSH2 0xB7E DUP3 SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCAA JUMPI JUMPDEST POP DUP6 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xC20 JUMPI SWAP2 DUP2 PUSH2 0x293 SWAP5 SWAP3 PUSH32 0xFF8032BDB7048063741D028837C6B1DC7BA91D1915100882519364C030A04418 SWAP9 SWAP8 SWAP7 SWAP5 PUSH1 0x0 SWAP2 PUSH2 0xC15 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP8 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST SWAP1 POP DUP5 ADD MLOAD DUP12 PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC95 JUMPI POP SWAP3 PUSH32 0xFF8032BDB7048063741D028837C6B1DC7BA91D1915100882519364C030A04418 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 DUP7 SWAP5 SWAP3 DUP3 PUSH2 0x293 SWAP9 SWAP5 LT PUSH2 0xC7C JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xBDB JUMP JUMPDEST DUP7 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0xC70 JUMP JUMPDEST DUP8 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP7 ADD SWAP3 SWAP2 DUP10 ADD SWAP2 DUP10 ADD PUSH2 0xC32 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP9 DUP5 LT PUSH2 0xCE9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP5 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xCDD JUMPI POP POP PUSH2 0xB87 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP5 SWAP1 PUSH2 0xCCF JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426964206E6F7420696E206D6F64696669636174696F6E207265717565737465 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x64207374617465 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420617574686F72697A656420746F206D6F646966792074686973206269 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x146 JUMPI PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 GT PUSH2 0xE3E JUMPI PUSH1 0x1 DUP6 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP3 ADD DUP3 DUP2 GT PUSH2 0xE28 JUMPI PUSH1 0x0 MSTORE DUP6 MSTORE DUP2 DUP5 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND EQ PUSH2 0xE13 JUMPI JUMPDEST PUSH2 0xE0E SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH2 0xDC5 JUMP JUMPDEST SWAP2 PUSH2 0xE20 PUSH2 0xE0E SWAP2 PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xE05 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xE49 DUP5 SWAP3 PUSH2 0x1B42 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP3 GT PUSH2 0xF23 JUMPI PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP4 ADD SWAP1 DUP4 DUP3 GT PUSH2 0xE28 JUMPI DUP2 PUSH1 0x0 MSTORE DUP8 MSTORE DUP4 DUP9 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND EQ PUSH2 0xEA3 JUMPI JUMPDEST POP POP PUSH2 0xE9E SWAP1 PUSH2 0x1AC8 JUMP JUMPDEST PUSH2 0xE50 JUMP JUMPDEST SWAP4 PUSH2 0xF1B SWAP2 PUSH2 0xE9E SWAP4 SWAP6 PUSH1 0x0 DUP1 MSTORE PUSH1 0x1 DUP10 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 MSTORE DUP9 MSTORE PUSH2 0xEFA PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xED7 DUP6 PUSH2 0x16A3 JUMP JUMPDEST DUP2 SLOAD DUP6 MSTORE DUP13 PUSH1 0x1 DUP4 ADD SLOAD AND DUP13 DUP7 ADD MSTORE DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x9D4 PUSH1 0x3 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xF0A DUP3 DUP9 PUSH2 0x1B92 JUMP JUMPDEST MSTORE PUSH2 0xF15 DUP2 DUP8 PUSH2 0x1B92 JUMP JUMPDEST POP PUSH2 0x1AC8 JUMP JUMPDEST SWAP3 SWAP1 DUP8 PUSH2 0xE93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x713 DUP8 DUP3 PUSH2 0x186B JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP4 MSTORE PUSH2 0xF5D PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B42 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xF23 JUMPI PUSH2 0xFC9 SWAP1 PUSH1 0x1 DUP1 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE DUP5 MSTORE PUSH2 0xEFA PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xFA0 DUP6 PUSH2 0x16A3 JUMP JUMPDEST DUP2 SLOAD DUP6 MSTORE DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 DUP6 ADD MSTORE DUP8 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x9D4 PUSH1 0x3 DUP3 ADD PUSH2 0x191D JUMP JUMPDEST PUSH2 0xF61 JUMP JUMPDEST CALLVALUE PUSH2 0x146 JUMPI PUSH2 0xFDC CALLDATASIZE PUSH2 0x1751 JUMP JUMPDEST DUP3 PUSH1 0x0 SWAP4 SWAP3 SWAP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1667 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT PUSH2 0x1629 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1029 DUP2 SLOAD PUSH2 0x1AC8 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 DUP2 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0xE28 JUMPI PUSH1 0x40 MLOAD PUSH2 0x1052 DUP2 PUSH2 0x16A3 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 CALLER DUP4 MSTORE PUSH1 0x40 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE TIMESTAMP PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1084 DUP2 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1099 DUP2 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x10AE DUP2 PUSH2 0x16BF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x100 DUP5 ADD MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 DUP4 MLOAD DUP6 SSTORE PUSH1 0x1 DUP6 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI DUP2 SWAP1 PUSH2 0x1127 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15D6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1564 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1559 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0x5 DUP3 ADD PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3ED JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI DUP2 SWAP1 PUSH2 0x11AC PUSH1 0x6 DUP7 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1506 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1494 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1489 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP4 ADD SSTORE JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH2 0x1207 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1442 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x13CE JUMPI PUSH2 0x100 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x13C3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP5 ADD SSTORE JUMPDEST ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH2 0x1266 PUSH1 0x8 DUP5 ADD SLOAD PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1378 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x12E5 JUMPI DUP3 PUSH32 0xB5CC2E6A75BA593196AE1600D90399014D2790179CEAE0B5D9A2303144028BAD SWAP6 SWAP4 PUSH1 0x40 SWAP6 SWAP4 PUSH1 0x8 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x12DA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST DUP2 MLOAD SWAP5 CALLER DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x0 NOT ADD SWAP4 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x12B1 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1360 JUMPI POP SWAP4 PUSH1 0x40 SWAP6 SWAP4 PUSH1 0x8 SWAP4 PUSH1 0x1 SWAP4 DUP4 PUSH32 0xB5CC2E6A75BA593196AE1600D90399014D2790179CEAE0B5D9A2303144028BAD SWAP11 SWAP9 LT PUSH2 0x1347 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH2 0x12C7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x1339 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x13B9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x13AD JUMPI POP PUSH2 0x126F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x13A0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1397 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x122E JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x142A JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x100 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1411 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP5 ADD SSTORE PUSH2 0x1246 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1401 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x13DF JUMP JUMPDEST PUSH1 0x7 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1482 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1476 JUMPI POP POP PUSH2 0x1210 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1460 JUMP JUMPDEST POP DUP1 PUSH2 0x1460 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x11CC JUMP JUMPDEST SWAP3 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x14EB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x14D2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 DUP4 ADD SSTORE PUSH2 0x11E4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x14C2 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x14A7 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1552 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1543 JUMPI POP POP PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x152D JUMP JUMPDEST POP DUP1 PUSH2 0x1527 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1147 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x15BB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x15A2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x115F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1592 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1577 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x1622 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1613 JUMPI POP POP PUSH2 0x1130 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x15FD JUMP JUMPDEST POP DUP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15195B99195C88191958591B1A5B99481C185CDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x54656E646572206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x36C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x36C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x36C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x146 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x36C JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x172F PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x16DA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x146 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD SWAP2 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x146 JUMPI PUSH2 0x1783 SWAP2 PUSH1 0x4 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x17B2 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1791 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3ED JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1783 SWAP2 DUP1 MLOAD DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1857 PUSH2 0x1845 PUSH2 0x1817 PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x120 DUP1 PUSH1 0x60 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x1833 PUSH1 0xA0 DUP6 ADD MLOAD PUSH1 0xA0 DUP8 ADD SWAP1 PUSH2 0x17C6 JUMP JUMPDEST PUSH1 0xC0 DUP5 ADD MLOAD DUP6 DUP3 SUB PUSH1 0xC0 DUP8 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST SWAP2 PUSH2 0x100 DUP1 SWAP3 ADD MLOAD SWAP2 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1786 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x189F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x18BD PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x17D3 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x146 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1913 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x18FD JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x18F2 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1931 DUP5 PUSH2 0x18E3 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x19A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x195D JUMPI JUMPDEST POP POP PUSH2 0x195B SWAP3 POP SUB DUP4 PUSH2 0x16DA JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1988 JUMPI POP POP PUSH2 0x195B SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x194D JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1970 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x195B SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x194D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x19D7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x19F6 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6572206973206E6F742074656E646572206F66666963657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A42 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109A5908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A83 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426964206E6F7420696E2070656E64696E672073746174650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xE28 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3ED JUMPI MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1AF0 DUP3 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x100 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x1B4C DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH2 0x1B59 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x16DA JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1B6A PUSH1 0x1F NOT SWAP2 PUSH2 0x1B2B JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1B7B JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1B86 PUSH2 0x1AE3 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x1B6F JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1BA6 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE 0x21 BYTE SWAP3 PUSH4 0x59350EB6 0xAA SWAP2 LT 0xBE 0xAF 0xD2 PUSH23 0xEAE1BA0F9E157D15B9671F345D936D1664736F6C634300 ADDMOD EQ STOP CALLER ","sourceMap":"163:6111:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;1500:62:0;;:::i;:::-;2627:22;;2623:91;;163:6111:8;;;;;;;;;;;;3052:40:0;163:6111:8;3052:40:0;;163:6111:8;2623:91:0;163:6111:8;;-1:-1:-1;;;2672:31:0;;163:6111:8;;2672:31:0;;163:6111:8;;;2672:31:0;163:6111:8;;;;;;;;;;;:::i;:::-;;;;;;;1777:7;163:6111;;1769:88;163:6111;;;;;;;;;;1814:10;1777:47;1769:88;:::i;:::-;163:6111;;;2007:9;163:6111;;1987:63;163:6111;;;;1995:32;;1987:63;:::i;:::-;163:6111;;;;;;;;;;;;;;;;4100:33;163:6111;;;;;4100:33;163:6111;;;;;;;;4100:54;:113;;;;163:6111;;;;;;;;;;;;;;;;;;;;;;4258:33;2007:9;163:6111;;;;;;;;;;;;;;;;;;;;;;4322:42;163:6111;;;4322:42;163:6111;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;4398:52;163:6111;;;;;;;;;;;;;;1777:7;163:6111;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4398:52;;;163:6111;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;;;;;;;;;;;;4398:52;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;1777:7;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;4100:113;163:6111;;;;;;;;;;;;;;;;;;;;4158:33;163:6111;;;;;;;;1777:7;4158:55;4100:113;;163:6111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1777:7;163:6111;;1769:88;163:6111;;;;;;;;;;1814:10;1777:47;1769:88;:::i;:::-;163:6111;;;2007:9;163:6111;;1987:63;163:6111;;;;1995:32;;1987:63;:::i;:::-;163:6111;;;;;;;;;;;;;;;;;2308:33;163:6111;;;2308:33;163:6111;;2308:33;163:6111;;;;;2300:91;2308:54;;2300:91;:::i;:::-;163:6111;;;;;;;;;;;;;;2410:35;163:6111;;;2410:35;163:6111;;-1:-1:-1;;;;;163:6111:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;2472:49;163:6111;;;;;;;;;;;;;1777:7;163:6111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2472:49;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2308:33;163:6111;;;;;;;;;;;;2308:33;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;;;1401:44;163:6111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1340:55;163:6111;;;;;;;;;;;;;;;;;;;;;;;;1340:55;;;163:6111;;1340:55;163:6111;1340:55;;;163:6111;1340:55;;;;;:::i;:::-;;163:6111;;1340:55;;163:6111;1340:55;163:6111;;1340:55;;;163:6111;;1340:55;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;1500:62:0;;:::i;:::-;163:6111:8;;;-1:-1:-1;;;;;;163:6111:8;;;;-1:-1:-1;;;;;163:6111:8;3052:40:0;163:6111:8;;3052:40:0;163:6111:8;;;;;;;;:::i;:::-;;;;;;;1777:7;163:6111;;1769:88;163:6111;;;;;;;;;;1814:10;1777:47;1769:88;:::i;:::-;163:6111;;;2007:9;163:6111;;1987:63;163:6111;;;;1995:32;;1987:63;:::i;:::-;163:6111;;;;;;;;;;;;;;;;;2782:33;163:6111;;;2782:33;163:6111;;2782:33;163:6111;;;;;2774:91;2782:54;;2774:91;:::i;:::-;163:6111;;;;;;;;;;;;;;2782:33;163:6111;;;2884:33;163:6111;;;;;;;;;;;;;;;;;;;;;;;2962:46;163:6111;;;2962:46;163:6111;;-1:-1:-1;;;;;163:6111:8;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3049:62;163:6111;;;;;;;;;;;;;1777:7;163:6111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3049:62;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2782:33;163:6111;;;;;;;;;;;;2782:33;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;5361:4;163:6111;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;163:6111:8;;;;;;;;;;;;;;;;;;1612:41;;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2007:9;163:6111;;1987:63;163:6111;;;;1995:32;;1987:63;:::i;:::-;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;3357:40;163:6111;;3401:10;3357:54;163:6111;;;;;;;;;;;;;;;;;3467:33;163:6111;;;3467:33;163:6111;;3467:33;163:6111;;;;;;3467:69;163:6111;;;;;;;;;;;;;;;;;2007:9;163:6111;;;3599:33;163:6111;;;;;;;;;;;;;;;;;;;3655:38;163:6111;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3799:62;163:6111;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;;;;;;;;;;;;;;;3467:33;163:6111;;;3721:33;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3799:62;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3467:33;163:6111;;;;;;;;;;;;3467:33;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:6111:8;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;;5813:13;163:6111;5847:3;163:6111;;;5833:9;163:6111;;;;;;5828:17;;;;163:6111;;;;;;-1:-1:-1;;163:6111:8;;;;;;;;;;;;;;;;;5870:26;163:6111;;5870:35;5866:81;;5847:3;;;;:::i;:::-;5813:13;;5866:81;5925:7;;5847:3;5925:7;;:::i;:::-;5866:81;;;;;163:6111;;;;;;;;;;;;5828:17;;5991:16;5828:17;;5991:16;:::i;:::-;6017:17;163:6111;6049:13;163:6111;6083:3;163:6111;;;5833:9;163:6111;;;;;;;6064:17;;;;163:6111;;;;;;-1:-1:-1;;163:6111:8;;;;;;;;;;;;;;;;;;;6106:26;163:6111;;6106:35;6102:129;;6083:3;;;;;;:::i;:::-;6049:13;;6102:129;163:6111;6209:7;163:6111;6083:3;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6161:30;;;;:::i;:::-;;;;;;:::i;:::-;;6209:7;:::i;:::-;6102:129;;;;;6064:17;163:6111;;;;6064:17;163:6111;;:::i;:::-;;;;;;;;;;;;;;;;;;5523:9;163:6111;;;5513:31;163:6111;;;;5513:31;:::i;:::-;5559:13;163:6111;5600:3;163:6111;;;;;;;;;;5574:24;;;;;5600:3;163:6111;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;;;;;;;;:::i;5600:3::-;5559:13;;163:6111;;;;;;;:::i;:::-;;;;;;;4623:7;163:6111;;;;;;;;;;;;;;;;4623:7;163:6111;;4712:27;163:6111;;;4712:27;163:6111;4693:15;:46;163:6111;;;;;4785:9;163:6111;;;;;4785:22;163:6111;;4785:22;:::i;:::-;163:6111;;;;;4785:9;163:6111;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4907:215;;4947:10;;163:6111;;;4907:215;;163:6111;;;4907:215;;;163:6111;;;4693:15;4907:215;;;163:6111;;;4907:215;;163:6111;;;;;;:::i;:::-;;;;4907:215;;;163:6111;;;;;;:::i;:::-;;;;;4907:215;;163:6111;;;;;;:::i;:::-;;;;4907:215;;;163:6111;;;;4712:27;163:6111;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;;;;;;;;;;;;;;;;;4785:9;163:6111;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;4623:7;163:6111;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;4623:7;163:6111;;;;;4623:7;163:6111;;;;4907:215;;;163:6111;;;;;;;;;4907:215;;163:6111;;;;;;;;;;;;;;;;;;4907:215;;;163:6111;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;4623:7;163:6111;;;;;;;;;;;4907:215;;163:6111;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4907:215;;163:6111;;;;;;;;;;;4712:27;163:6111;;;;;4623:7;163:6111;;;;;;;;;;4907:215;163:6111;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5146:54;163:6111;;;;;;;;;;;;;;;4712:27;163:6111;;;;;4623:7;163:6111;;;;;;;;;;;4947:10;;163:6111;;;;;;;;;5146:54;;163:6111;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;5146:54;163:6111;;;;;;;;;;;;;;;;;;;;;;;;4623:7;163:6111;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;;-1:-1:-1;163:6111:8;;;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;;;;;4712:27;163:6111;4907:215;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:7;163:6111;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;;;-1:-1:-1;163:6111:8;;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;4712:27;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4623:7;163:6111;;;;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4712:27:8;163:6111;;;;-1:-1:-1;163:6111:8;;;;;;;-1:-1:-1;163:6111:8;;;;;;;4623:7;163:6111;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;4712:27;163:6111;;;;;;;;;;;;;;;;;4623:7;163:6111;;;;;;;;;;;;4623:7;163:6111;;;;;;;;;;;;;;;;;;;;;;;;4712:27;163:6111;;;;;;;;;;;;;;4623:7;163:6111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4712:27:8;163:6111;;;;-1:-1:-1;163:6111:8;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;163:6111:8;;;;;;;;;;;;;;-1:-1:-1;;;;;163:6111:8;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:6111:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;163:6111:8;;;;-1:-1:-1;163:6111:8;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1796:162:0;1710:6;163:6111:8;-1:-1:-1;;;;;163:6111:8;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;163:6111:8;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;163:6111:8;;;1901:40:0;163:6111:8;;;;:::o;:::-;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;163:6111:8;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:6111:8;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;163:6111:8;;-1:-1:-1;163:6111:8;;;;-1:-1:-1;163:6111:8;;;;;;;;;-1:-1:-1;163:6111:8;;;;-1:-1:-1;163:6111:8;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;163:6111:8;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;163:6111:8;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;"},"methodIdentifiers":{"bidCounts(uint256)":"7c8ecd2f","bids(uint256,uint256)":"7b3c4baa","getBid(uint256,uint256)":"582c7ffd","getBidsForTender(uint256)":"267b51b3","getBidsForUser(address)":"2e78b869","giveBidFeedback(uint256,uint256,string)":"928c1784","modifyBid(uint256,uint256,uint256,string)":"3fc898d2","owner()":"8da5cb5b","rejectBid(uint256,uint256,string)":"9f07d462","renounceOwnership()":"715018a6","requestBidModification(uint256,uint256,string)":"5b8c665c","submitBid(uint256,uint256,string)":"14c60bdd","tenders(uint256)":"465e1def","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"}],\"name\":\"BidFeedbackGiven\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"modifications\",\"type\":\"string\"}],\"name\":\"BidModificationRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newDescription\",\"type\":\"string\"}],\"name\":\"BidModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"BidRejectedWithReason\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"bidIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bidCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum BidManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modificationRequest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rejectionReason\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIndex\",\"type\":\"uint256\"}],\"name\":\"getBid\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum BidManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modificationRequest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rejectionReason\",\"type\":\"string\"}],\"internalType\":\"struct BidManagement.Bid\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"}],\"name\":\"getBidsForTender\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum BidManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modificationRequest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rejectionReason\",\"type\":\"string\"}],\"internalType\":\"struct BidManagement.Bid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getBidsForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum BidManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"feedback\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modificationRequest\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"rejectionReason\",\"type\":\"string\"}],\"internalType\":\"struct BidManagement.Bid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_feedback\",\"type\":\"string\"}],\"name\":\"giveBidFeedback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newDescription\",\"type\":\"string\"}],\"name\":\"modifyBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"rejectBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidIndex\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_modifications\",\"type\":\"string\"}],\"name\":\"requestBidModification\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"submitBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tenders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/BidManagement.sol\":\"BidManagement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/contracts/BidManagement.sol\":{\"keccak256\":\"0x7bcabc1703d172a3a149abc52531f852cf2d0bf846e1e9ea7592bae0c384e2ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82e0a7dcaf1f2adf1a94377c48b7f9126453d9bc2141d3966e5c7aeaee38991f\",\"dweb:/ipfs/QmZvh6LZQ6vF88hX7uWmGZUGwPUXrtVGCqer6uKca9YaPa\"]}},\"version\":1}"}},"src/contracts/Database.sol":{"Database":{"abi":[{"inputs":[{"internalType":"address","name":"initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tenderId","type":"uint256"},{"indexed":true,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"BidSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"address","name":"officer","type":"address"}],"name":"TenderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"username","type":"string"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"UserApproved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"username","type":"string"},{"indexed":false,"internalType":"enum Database.UserRole","name":"role","type":"uint8"}],"name":"UserRegistered","type":"event"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"},{"internalType":"string","name":"_remark","type":"string"}],"name":"approveUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"bids","outputs":[{"internalType":"uint256","name":"tenderId","type":"uint256"},{"internalType":"address","name":"bidderAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"submittedAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint256","name":"_budget","type":"uint256"},{"internalType":"uint256","name":"_deadline","type":"uint256"}],"name":"createTender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getActiveTenders","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"budget","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"officerAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct Database.Tender[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"}],"name":"getBids","outputs":[{"components":[{"internalType":"uint256","name":"tenderId","type":"uint256"},{"internalType":"address","name":"bidderAddress","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"submittedAt","type":"uint256"}],"internalType":"struct Database.Bid[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"getTender","outputs":[{"components":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"budget","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"officerAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct Database.Tender","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUser","outputs":[{"components":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"enum Database.UserRole","name":"role","type":"uint8"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"string","name":"approvalRemark","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct Database.User","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_username","type":"string"},{"internalType":"string","name":"_email","type":"string"},{"internalType":"enum Database.UserRole","name":"_role","type":"uint8"}],"name":"registerUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tenderId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"string","name":"_description","type":"string"}],"name":"submitBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"tenderCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tenders","outputs":[{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"budget","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"address","name":"officerAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"usernames","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"enum Database.UserRole","name":"role","type":"uint8"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"string","name":"approvalRemark","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x1F PUSH2 0x20A5 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC0 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBB JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xBB JUMPI DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x1FCE SWAP1 DUP2 PUSH2 0xD7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x585C25E EQ PUSH2 0x1B3F JUMPI DUP1 PUSH4 0xF771417 EQ PUSH2 0x1425 JUMPI DUP1 PUSH4 0x131D9A27 EQ PUSH2 0x12D0 JUMPI DUP1 PUSH4 0x14C60BDD EQ PUSH2 0xF55 JUMPI DUP1 PUSH4 0x1F058776 EQ PUSH2 0xF37 JUMPI DUP1 PUSH4 0x2AC6C785 EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0x3A9361BD EQ PUSH2 0xAD6 JUMPI DUP1 PUSH4 0x465E1DEF EQ PUSH2 0xA18 JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x7B3C4BAA EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xAAEE301F EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xD927EE88 EQ PUSH2 0x15F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0xE5 PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0xED PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x18F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x1 SUB PUSH2 0x54F JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1F7 PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x5 SLOAD PUSH2 0x1F08 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x214 DUP5 PUSH2 0x1CBD JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 DUP4 DUP4 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD DUP3 SSTORE MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x278 PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x508 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x499 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x48E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x478 JUMPI PUSH2 0x2D7 PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x431 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3BC JUMPI SWAP2 DUP1 PUSH1 0x6 SWAP5 SWAP3 PUSH1 0xE0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3B1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0x5 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH32 0x288C2EB47AA865E9DAA5C117CCF7AF2111AFEE680CC033A9F537AAFDC6B7908A PUSH2 0x3A6 PUSH1 0x5 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST CALLER PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x300 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x419 JUMPI POP SWAP3 PUSH1 0x6 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xE0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x400 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x318 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x3F0 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x471 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x465 JUMPI POP POP PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x44F JUMP JUMPDEST POP DUP1 PUSH2 0x44F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x4F0 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x4D7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x2B4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x548 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x53C JUMPI POP POP PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x526 JUMP JUMPDEST POP DUP1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F666669636572732063616E206372656174652074656E64657273 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH1 0xFF PUSH2 0x5F4 PUSH1 0x20 PUSH2 0x5E1 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1C04 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0x6CD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x62F PUSH2 0x1D6B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x71B PUSH1 0x40 MLOAD SWAP3 PUSH2 0x659 DUP5 PUSH2 0x652 DUP2 DUP7 PUSH2 0x1DBB JUMP JUMPDEST SUB DUP6 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x66E DUP5 PUSH2 0x652 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD PUSH2 0x68B DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP8 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP3 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x6E9 PUSH1 0x3 DUP5 ADD SLOAD SWAP2 PUSH2 0x6DB PUSH1 0x5 PUSH1 0x40 MLOAD SWAP7 PUSH2 0x6B5 DUP9 PUSH2 0x6AE DUP2 PUSH1 0x4 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP10 PUSH2 0x1CF4 JUMP JUMPDEST ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x100 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP4 DUP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x703 PUSH1 0x80 DUP9 ADD DUP4 DUP4 PUSH1 0xA0 SHR AND PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH2 0x785 SWAP2 PUSH2 0x1E5E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x7E3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x7BD DUP4 PUSH2 0x7B6 DUP2 PUSH1 0x3 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP5 PUSH2 0x1CF4 JUMP JUMPDEST ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0x806 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15A JUMPI PUSH2 0x860 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86C DUP2 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x60 SWAP1 DUP2 DUP2 MSTORE DUP2 DUP5 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE DUP2 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x8C7 DUP5 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x8D5 DUP2 DUP9 PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x8E0 SWAP1 DUP3 PUSH2 0x1CF4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x8F4 DUP2 PUSH1 0x1 DUP10 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x8FF SWAP1 DUP4 PUSH2 0x1CF4 JUMP JUMPDEST DUP5 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x917 DUP2 PUSH1 0x2 DUP5 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x922 SWAP1 DUP9 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD SWAP7 DUP8 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 DUP8 ADD SWAP3 DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 DUP3 PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH2 0x94D SWAP1 DUP4 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD SWAP3 PUSH1 0xA8 SHR PUSH1 0xFF AND ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 PUSH1 0x4 DUP4 ADD SWAP1 PUSH2 0x970 SWAP2 PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x97B SWAP1 DUP7 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD SWAP5 DUP6 MSTORE PUSH1 0x5 ADD SLOAD SWAP8 PUSH1 0xE0 DUP11 ADD SWAP9 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP10 DUP13 MSTORE MLOAD PUSH2 0x100 DUP1 SWAP11 DUP14 ADD MSTORE PUSH2 0x120 DUP13 ADD PUSH2 0x9AE SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP8 MLOAD PUSH1 0x1F NOT DUP13 DUP11 SUB DUP2 ADD PUSH1 0x40 DUP15 ADD MSTORE SWAP9 PUSH2 0x9C7 SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP9 DUP13 DUP4 SUB ADD SWAP1 DUP13 ADD MSTORE PUSH2 0x9DC SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x80 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 DUP9 ADD PUSH2 0x9F2 SWAP2 PUSH2 0x1E51 JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP6 DUP3 SUB ADD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0xA0E SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA50 DUP4 PUSH2 0x7B6 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA64 DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD SWAP3 PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0xAA9 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP5 PUSH2 0xA9B PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP11 MSTORE PUSH2 0x100 DUP1 PUSH1 0x20 DUP13 ADD MSTORE DUP11 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0xAEF PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x15A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x15A JUMPI PUSH2 0xB1F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0xB27 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP3 PUSH1 0x20 SWAP5 DUP5 DUP7 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE DUP5 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP3 ISZERO ISZERO PUSH1 0xA8 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 ADD SWAP2 DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x478 JUMPI PUSH2 0xB91 DUP4 SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCB2 JUMPI JUMPDEST POP DUP5 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC26 JUMPI SWAP2 DUP1 PUSH2 0xC12 SWAP7 SWAP5 SWAP3 PUSH32 0xB81B5BF45193A7A76F3526DAD1B835E00D4B4FE251E28DEB91B938AD89979568 SWAP9 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xC1B JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0xBDC JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC9D JUMPI POP SWAP3 DUP7 SWAP5 SWAP2 SWAP3 PUSH32 0xB81B5BF45193A7A76F3526DAD1B835E00D4B4FE251E28DEB91B938AD89979568 SWAP10 SWAP8 SWAP4 DUP4 PUSH2 0xC12 SWAP11 SWAP9 SWAP7 LT PUSH2 0xC84 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xBF0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xC77 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP8 ADD SWAP4 SWAP3 DUP9 ADD SWAP3 DUP9 ADD PUSH2 0xC39 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP6 LT PUSH2 0xCF1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xCE5 JUMPI POP POP PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0xCD7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI POP PUSH2 0xD63 DUP3 PUSH2 0x1F6D JUMP JUMPDEST SWAP2 PUSH2 0xD71 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0xD80 PUSH1 0x1F NOT SWAP2 PUSH2 0x1F6D JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEE1 JUMPI POP POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xDFA JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP3 DUP2 DUP8 ADD SWAP8 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0xDCE JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0xDEA PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1C4C JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xDC1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP8 DUP3 ADD SLOAD PUSH1 0xA0 SWAP1 PUSH1 0xFF DUP2 DUP4 SHR AND SWAP3 DUP4 PUSH2 0xE34 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0xE2F SWAP1 PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST SWAP3 PUSH1 0x6 SWAP3 PUSH2 0xE2F SWAP8 SWAP9 SWAP6 SWAP3 PUSH2 0xED5 SWAP8 SWAP6 PUSH1 0x40 MLOAD SWAP7 PUSH2 0xE51 DUP9 PUSH2 0x1CBD JUMP JUMPDEST DUP6 SLOAD DUP9 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xE71 DUP3 PUSH2 0xE6A DUP2 PUSH1 0x1 DUP12 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP4 PUSH2 0x1CF4 JUMP JUMPDEST DUP9 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xE88 DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP11 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE DUP5 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xEC4 DUP3 DUP9 PUSH2 0x1F84 JUMP JUMPDEST MSTORE PUSH2 0xECF DUP2 DUP8 PUSH2 0x1F84 JUMP JUMPDEST POP PUSH2 0x1F08 JUMP JUMPDEST SWAP2 SWAP1 DUP7 DUP1 DUP1 DUP1 DUP1 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xEEC PUSH2 0x1F2D JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0xD84 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0xF22 JUMPI JUMPDEST PUSH2 0xF1D SWAP1 PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST SWAP2 PUSH2 0xF2F PUSH2 0xF1D SWAP2 PUSH2 0x1F08 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xF14 JUMP JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15A JUMPI PUSH2 0xF86 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1294 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT PUSH2 0x1256 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x2 SUB PUSH2 0x1211 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1007 PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1025 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 CALLER DUP6 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 DUP4 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH2 0x106B SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1E5E JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x11FB JUMPI DUP5 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x478 JUMPI PUSH2 0x10B6 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x11B0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x113B JUMPI SWAP2 DUP1 PUSH1 0x4 SWAP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1130 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE CALLER SWAP1 PUSH32 0x177554F051F4AA1F0D0310334854B429BAEECDB5A96BC329A26FD0CB7C8A7BE3 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x1198 JUMPI POP SWAP3 PUSH1 0x4 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x80 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x117F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x10F7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x116F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x114C JUMP JUMPDEST PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x11F1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x11E5 JUMPI POP PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626964646572732063616E207375626D6974206269647300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15195B99195C88191958591B1A5B99481C185CDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x54656E646572206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH2 0x12FE DUP4 PUSH2 0x1F6D JUMP JUMPDEST SWAP3 PUSH2 0x130C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP3 DUP5 ADD DUP1 SWAP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x13BF JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x135A JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP4 DUP4 ADD MLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x13A5 PUSH1 0x60 DUP1 DUP5 ADD MLOAD SWAP1 PUSH1 0xA0 DUP1 SWAP2 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x13D4 DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP6 DUP8 ADD SLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1405 DUP2 PUSH2 0x684 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x131F JUMP JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1455 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1474 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1494 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x64 CALLDATALOAD LT ISZERO PUSH2 0x15A JUMPI PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x14B6 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x1C04 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH2 0x1AFA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AB5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x14F3 DUP4 PUSH2 0x1CBD JUMP JUMPDEST DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1515 PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP4 ADD PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x20 DUP4 ADD GT OR PUSH2 0x478 JUMPI PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP3 ADD MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x1579 DUP5 SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A71 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A08 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x19FD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x15D5 PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19B6 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1947 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x193C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x1634 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18F5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1886 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x187B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND SWAP1 DUP1 SLOAD PUSH1 0x80 DUP5 ADD MLOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0xA0 DUP6 DUP2 ADD MLOAD PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 ISZERO ISZERO PUSH1 0xA8 SHL AND PUSH1 0xFF PUSH1 0xA0 SHL SWAP6 SWAP1 SWAP2 SHL SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP2 SWAP1 SWAP2 AND OR OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x478 JUMPI PUSH2 0x16F4 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1830 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x17BD JUMPI SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xE0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x17B2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x174F DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x1C04 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xC2E5D5DA58BD71D1A2D14CDEF02A4256D971B728088F8190D067CCFBAE3BD73E PUSH2 0x179A PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP2 PUSH2 0x17AA PUSH1 0x20 DUP3 ADD PUSH1 0x64 CALLDATALOAD PUSH2 0x1E51 JUMP JUMPDEST DUP1 CALLER SWAP4 SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x171D JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x4 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1818 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0xE0 SWAP7 PUSH1 0x5 SWAP9 SWAP7 LT PUSH2 0x17FF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x1735 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x17EF JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1871 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1865 JUMPI POP PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x18DD JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x18C4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x1670 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1935 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1929 JUMPI POP POP PUSH2 0x163D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1913 JUMP JUMPDEST POP DUP1 PUSH2 0x1913 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x199E JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1985 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x1611 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1975 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x19F6 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x19EA JUMPI POP POP PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19D4 JUMP JUMPDEST POP DUP1 PUSH2 0x19D4 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x159D JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1A59 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1A40 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH2 0x15B2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1A15 JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1AAE JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1AA2 JUMPI POP POP PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A8C JUMP JUMPDEST POP DUP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365726E616D6520616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0x1B58 PUSH2 0x1F2D JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1C00 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x6 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1B7B DUP4 PUSH2 0x1CBD JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1B93 DUP2 PUSH2 0x684 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1BAC DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C17 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C07 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C40 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0xE0 DUP1 PUSH2 0x1C82 PUSH2 0x1C70 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x100 DUP1 PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x478 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x478 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x478 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x15A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1D49 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1CF4 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x15A JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1DB1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1D9B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x1DCC DUP4 PUSH2 0x1D81 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1E2E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DEE JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x1E1A JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1DE8 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x593 JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1E7A JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1EA4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x593 JUMPI MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1ECF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155CD95C881B9BDD08185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1F17 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F3A DUP3 PUSH2 0x1CBD JUMP JUMPDEST DUP2 PUSH1 0xE0 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1E7A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 CREATE2 OR 0xDC DUP5 INVALID PUSH23 0xCEC91E96C00148B45DDAE1595C9D5CF1CA6D78DFF50B57 0xEE RETURN PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"163:4771:9:-:0;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;163:4771:9;;-1:-1:-1;;;;;;163:4771:9;;;;;;;;;;;3052:40:0;;-1:-1:-1;3052:40:0;163:4771:9;;;;;;;1269:95:0;163:4771:9;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;163:4771:9;;;1322:31:0;163:4771:9;-1:-1:-1;163:4771:9;;;;;;-1:-1:-1;163:4771:9;;;;;-1:-1:-1;163:4771:9"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":7531,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":7445,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_UserRole":{"entryPoint":7761,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":7207,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":7611,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_struct_Tender":{"entryPoint":7244,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Tender":{"entryPoint":7981,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_struct_Bid_dyn":{"entryPoint":8045,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7172,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7553,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7412,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_26791":{"entryPoint":7357,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_26794":{"entryPoint":7385,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":7824,"id":84,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":7944,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_struct_Tender_dyn":{"entryPoint":8068,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_ed2f":{"entryPoint":7880,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_Bid_dyn":{"entryPoint":7774,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_UserRole":{"entryPoint":7868,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c80630585c25e14611b3f5780630f77141714611425578063131d9a27146112d057806314c60bdd14610f555780631f05877614610f375780632ac6c78514610d365780633a9361bd14610ad6578063465e1def14610a185780636f77926b14610846578063715018a6146107ed5780637b3c4baa1461074e5780638da5cb5b14610725578063a87430ba1461060a578063aaee301f146105a9578063d927ee881461015f5763f2fde38b146100cc57600080fd5b3461015a57602036600319011261015a576100e5611d6b565b6100ed611e90565b6001600160a01b0390811690811561014157600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b3461015a57608036600319011261015a576004356001600160401b03811161015a5761018f903690600401611d15565b6024356001600160401b03811161015a576101ae903690600401611d15565b9033600052600160205260ff60036040600020015460a01c1660038110156105935760010361054f573360005260016020526101f760ff60036040600020015460a81c16611ec8565b610202600554611f08565b91826005556040519261021484611cbd565b80845260208401918383526040850152604435606085015260643560808501523360a0850152600160c08501524260e0850152600052600360205260406000209083518255519283516001600160401b038111610478576102786001840154611d81565b601f8111610508575b506020601f821160011461049957819293949560009261048e575b50508160011b916000199060031b1c19161760018301555b60408101518051906001600160401b038211610478576102d76002850154611d81565b601f8111610431575b50602090601f83116001146103bc5791806006949260e0946000926103b1575b50508160011b916000199060031b1c19161760028501555b60608101516003850155608081015160048501556005840160018060a01b0360a08301511681549060ff60a01b60c0850151151560a01b16916affffffffffffffffffffff60a81b161717905501519101557f288c2eb47aa865e9daa5c117ccf7af2111afee680cc033a9f537aafdc6b7908a6103a660055492604051918291604083526040830190611c27565b3360208301520390a2005b015190508780610300565b906002850160005260206000209160005b601f19851681106104195750926006949260019260e09583601f19811610610400575b505050811b016002850155610318565b015160001960f88460031b161c191690558780806103f0565b919260206001819286850151815501940192016103cd565b600285016000526020600020601f840160051c810160208510610471575b601f830160051c820181106104655750506102e0565b6000815560010161044f565b508061044f565b634e487b7160e01b600052604160045260246000fd5b01519050858061029c565b6001840160005260206000209060005b601f19841681106104f0575060019394959683601f198116106104d7575b505050811b0160018301556102b4565b015160001960f88460031b161c191690558580806104c7565b9091602060018192858b0151815501930191016104a9565b600184016000526020600020601f830160051c810160208410610548575b601f830160051c8201811061053c575050610281565b60008155600101610526565b5080610526565b606460405162461bcd60e51b815260206004820152602060248201527f4f6e6c79206f666669636572732063616e206372656174652074656e646572736044820152fd5b634e487b7160e01b600052602160045260246000fd5b3461015a57602036600319011261015a576004356001600160401b03811161015a5760ff6105f460206105e181943690600401611d15565b8160405193828580945193849201611c04565b8101600281520301902054166040519015158152f35b3461015a57602036600319011261015a576106cd6001600160a01b038061062f611d6b565b166000526001602052604060002061071b60405192610659846106528186611dbb565b0385611cf4565b6040519261066e846106528160018501611dbb565b60ff60405161068b816106848160028701611dbb565b0382611cf4565b6106e96003840154916106db6005604051966106b5886106ae8160048501611dbb565b0389611cf4565b0154986040519b8c9b8c6101008091528d0190611c27565b908b820360208d0152611c27565b9089820360408b0152611c27565b938116606088015261070360808801838360a01c16611e51565b60a81c16151560a086015284820360c0860152611c27565b9060e08301520390f35b3461015a57600036600319011261015a576000546040516001600160a01b039091168152602090f35b3461015a57604036600319011261015a576024356004356000526004602052604060002090815481101561015a5761078591611e5e565b50805460018060a01b03600183015416916107e36002820154916004604051916107bd836107b68160038501611dbb565b0384611cf4565b01549260405195869586526020860152604085015260a0606085015260a0840190611c27565b9060808301520390f35b3461015a57600036600319011261015a57610806611e90565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461015a5760208060031936011261015a57610860611d6b565b60405161086c81611cbd565b606090818152818482015281604082015281810160009052608081016000905260a08101600090528160c082015260e00160009052600160a01b6001900380921660005260018352604060002092604051926108c784611cbd565b604051806108d58188611dbb565b036108e09082611cf4565b845260405190816108f48160018901611dbb565b036108ff9083611cf4565b84830191825260405195866109178160028401611dbb565b036109229088611cf4565b60408601968752600381015485870192808216845260808801908260a01c60ff1661094d9083611ebc565b60a089019260a81c60ff1615158352604051938480600483019061097091611dbb565b0361097b9086611cf4565b60c08a01948552600501549760e08a019889526040519a8b9a898c5251610100809a8d01526101208c016109ae91611c27565b9751601f198c8a03810160408e0152986109c791611c27565b905191888c830301908c01526109dc91611c27565b94511660808901525160a088016109f291611e51565b51151560c087015251918582030160e0860152610a0e91611c27565b9151908301520390f35b3461015a57602036600319011261015a5760043560005260036020526040600020805460405191610a50836107b68160018501611dbb565b604051610a64816106848160028601611dbb565b60ff6003830154926004810154610aa96006600584015493015494610a9b604051998a998a526101008060208c01528a0190611c27565b9088820360408a0152611c27565b946060870152608086015260018060a01b03811660a086015260a01c16151560c084015260e08301520390f35b3461015a57606036600319011261015a57610aef611d6b565b602435908115159081830361015a576001600160401b039260443584811161015a57610b1f903690600401611d15565b610b27611e90565b60018060a01b0380931694856000526001926020948486526003604060002001541615610cfb5760008781528486526040902060038101805460ff60a81b191692151560a81b60ff60a81b169290921790915560040191805191821161047857610b918354611d81565b601f8111610cb2575b508490601f8311600114610c26579180610c129694927fb81b5bf45193a7a76f3526dad1b835e00d4b4fe251e28deb91b938ad89979568989694600092610c1b575b5050600019600383901b1c191690831b1790555b8560005280825260406000200191604051938493604085526040850190611dbb565b918301520390a2005b015190508980610bdc565b90601f1983169184600052866000209260005b818110610c9d575092869491927fb81b5bf45193a7a76f3526dad1b835e00d4b4fe251e28deb91b938ad8997956899979383610c129a989610610c84575b505050811b019055610bf0565b015160001960f88460031b161c19169055898080610c77565b82840151855593870193928801928801610c39565b8360005285600020601f840160051c810191878510610cf1575b601f0160051c019085905b828110610ce5575050610b9a565b60008155018590610cd7565b9091508190610ccc565b60405162461bcd60e51b8152600481018690526013602482015272155cd95c881b9bdd081c9959da5cdd195c9959606a1b6044820152606490fd5b3461015a57600036600319011261015a576005805460009060015b81811115610ef85750610d6382611f6d565b91610d716040519384611cf4565b808352610d80601f1991611f6d565b0160005b818110610ee1575050600060015b82811115610dfa57505050604051906020808301818452825180915281604082818701971b8601019301916000955b828710610dce5785850386f35b909192938280610dea600193603f198a82030186528851611c4c565b9601920196019592919092610dc1565b8060005260036020908082526040600020908782015460a09060ff81831c169283610e34575b505050505050610e2f90611f08565b610d92565b92600692610e2f97989592610ed5979560405196610e5188611cbd565b8554885260405190610e7182610e6a8160018b01611dbb565b0383611cf4565b880152604051610e88816106848160028a01611dbb565b60408801528401546060870152600484015460808701526001600160a01b031690850152151560c0840152015460e0820152610ec48288611f84565b52610ecf8187611f84565b50611f08565b91908680808080610e20565b602090610eec611f2d565b82828701015201610d84565b80600052600360205260ff846040600020015460a01c16610f22575b610f1d90611f08565b610d51565b91610f2f610f1d91611f08565b929050610f14565b3461015a57600036600319011261015a576020600554604051908152f35b3461015a57606036600319011261015a576001600160401b0360443581811161015a57610f86903690600401611d15565b600435600052600360205260ff60056040600020015460a01c161561129457600435600052600360205260046040600020015442116112565733600052600160205260ff60036040600020015460a01c166003811015610593576002036112115733600052600160205261100760ff60036040600020015460a81c16611ec8565b60043560005260046020526040600020916040519161102583611cd9565b6004358352602083019333855260408401906024358252606085019283524260808601528054680100000000000000008110156104785761106b91600182018155611e5e565b9590956111fb5784518655516001860180546001600160a01b0319166001600160a01b0392909216919091179055516002850155518051918211610478576110b66003850154611d81565b601f81116111b0575b50602090601f831160011461113b57918060049492608094600092611130575b50508160011b916000199060031b1c19161760038501555b0151910155604051602435815233907f177554f051f4aa1f0d0310334854b429baeecdb5a96bc329a26fd0cb7c8a7be3602060043592a3005b0151905086806110df565b906003850160005260206000209160005b601f19851681106111985750926004949260019260809583601f1981161061117f575b505050811b0160038501556110f7565b015160001960f88460031b161c1916905586808061116f565b9192602060018192868501518155019401920161114c565b600385016000526020600020601f840160051c810191602085106111f1575b601f0160051c01905b8181106111e557506110bf565b600081556001016111d8565b90915081906111cf565b634e487b7160e01b600052600060045260246000fd5b60405162461bcd60e51b815260206004820152601c60248201527f4f6e6c7920626964646572732063616e207375626d69742062696473000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527515195b99195c88191958591b1a5b99481c185cdcd95960521b6044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527354656e646572206973206e6f742061637469766560601b6044820152606490fd5b3461015a5760208060031936011261015a57600435600052600481526040600020908154916112fe83611f6d565b9261130c6040519485611cf4565b8084528284018092600052836000206000915b8383106113bf5750505050604051918083019381845251809452604083019360408160051b85010192916000955b82871061135a5785850386f35b909192938280600192603f1989820301855287519081518152848060a01b03838301511683820152604082015160408201526113a56060808401519060a08091850152830190611c27565b91608080910151910152960192019601959291909261134d565b6005866001926040999899516113d481611cd9565b85548152848060a01b0385870154168382015260028601546040820152604051611405816106848160038b01611dbb565b60608201526004860154608082015281520192019201919095949561131f565b3461015a57608036600319011261015a576004356001600160401b03811161015a57611455903690600401611d15565b6024356001600160401b03811161015a57611474903690600401611d15565b906044356001600160401b03811161015a57611494903690600401611d15565b6003606435101561015a5760ff60405160208186516114b68183858b01611c04565b810160028152030190205416611afa57336000908152600160205260409020600301546001600160a01b0316611ab557604051916114f383611cbd565b8252826020830152604082015233606082015261151560643560808301611ebc565b600060a08201526040518060208101106001600160401b0360208301111761047857602081016040526000815260c08201524260e082015233600052600160205260406000209080519283516001600160401b038111610478576115798454611d81565b601f8111611a71575b506020601f8211600114611a085781929394956000926119fd575b50508160011b916000199060031b1c19161783555b60208201519283516001600160401b038111610478576115d56001830154611d81565b601f81116119b6575b506020601f821160011461194757819293949560009261193c575b50508160011b916000199060031b1c19161760018201555b60408301519283516001600160401b038111610478576116346002840154611d81565b601f81116118f5575b506020601f821160011461188657819293949560009261187b575b50508160011b916000199060031b1c19161760028301555b6003820160018060a01b0360608301511690805460808401519260038410156105935760a08581015160ff60a81b90151560a81b1660ff60a01b9590911b949094166001600160b01b03199290921660ff60a81b1991909116171791909117905560c08101518051906001600160401b038211610478576116f46004850154611d81565b601f8111611830575b50602090601f83116001146117bd5791806005949260e0946000926117b2575b50508160011b916000199060031b1c19161760048501555b0151910155604051602081835161174f8183858801611c04565b81016002815203019020600160ff198254161790557fc2e5d5da58bd71d1a2d14cdef02a4256d971b728088f8190d067ccfbae3bd73e61179a60405192604084526040840190611c27565b916117aa60208201606435611e51565b8033930390a2005b01519050878061171d565b90601f198316916004860160005260206000209260005b818110611818575092600192859260e09660059896106117ff575b505050811b016004850155611735565b015160001960f88460031b161c191690558780806117ef565b929360206001819287860151815501950193016117d4565b600485016000526020600020601f840160051c81019160208510611871575b601f0160051c01905b81811061186557506116fd565b60008155600101611858565b909150819061184f565b015190508580611658565b6002840160005260206000209060005b601f19841681106118dd575060019394959683601f198116106118c4575b505050811b016002830155611670565b015160001960f88460031b161c191690558580806118b4565b9091602060018192858b015181550193019101611896565b600284016000526020600020601f830160051c810160208410611935575b601f830160051c8201811061192957505061163d565b60008155600101611913565b5080611913565b0151905085806115f9565b6001830160005260206000209060005b601f198416811061199e575060019394959683601f19811610611985575b505050811b016001820155611611565b015160001960f88460031b161c19169055858080611975565b9091602060018192858b015181550193019101611957565b600183016000526020600020601f830160051c8101602084106119f6575b601f830160051c820181106119ea5750506115de565b600081556001016119d4565b50806119d4565b01519050858061159d565b8460005260206000209060005b601f1984168110611a59575060019394959683601f19811610611a40575b505050811b0183556115b2565b015160001960f88460031b161c19169055858080611a33565b9091602060018192858b015181550193019101611a15565b846000526020600020601f830160051c810160208410611aae575b601f830160051c82018110611aa2575050611582565b60008155600101611a8c565b5080611a8c565b60405162461bcd60e51b815260206004820152601760248201527f5573657220616c726561647920726567697374657265640000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f557365726e616d6520616c7265616479206578697374730000000000000000006044820152606490fd5b3461015a57602036600319011261015a57611b58611f2d565b506004356000526003602052611c006040600020600660405191611b7b83611cbd565b80548352604051611b93816106848160018601611dbb565b6020840152604051611bac816106848160028601611dbb565b6040840152600381015460608401526004810154608084015260ff600582015460018060a01b03811660a086015260a01c16151560c0840152015460e0820152604051918291602083526020830190611c4c565b0390f35b60005b838110611c175750506000910152565b8181015183820152602001611c07565b90602091611c4081518092818552858086019101611c04565b601f01601f1916010190565b908151815260e080611c82611c706020860151610100806020880152860190611c27565b60408601518582036040870152611c27565b93606081015160608501526080810151608085015260018060a01b0360a08201511660a085015260c0810151151560c0850152015191015290565b61010081019081106001600160401b0382111761047857604052565b60a081019081106001600160401b0382111761047857604052565b90601f801991011681019081106001600160401b0382111761047857604052565b81601f8201121561015a578035906001600160401b0382116104785760405192611d49601f8401601f191660200185611cf4565b8284526020838301011161015a57816000926020809301838601378301015290565b600435906001600160a01b038216820361015a57565b90600182811c92168015611db1575b6020831014611d9b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611d90565b9060009291805491611dcc83611d81565b918282526001938481169081600014611e2e5750600114611dee575b50505050565b90919394506000526020928360002092846000945b838610611e1a575050505001019038808080611de8565b805485870183015294019385908201611e03565b9294505050602093945060ff191683830152151560051b01019038808080611de8565b9060038210156105935752565b8054821015611e7a576000526005602060002091020190600090565b634e487b7160e01b600052603260045260246000fd5b6000546001600160a01b03163303611ea457565b60405163118cdaa760e01b8152336004820152602490fd5b60038210156105935752565b15611ecf57565b60405162461bcd60e51b8152602060048201526011602482015270155cd95c881b9bdd08185c1c1c9bdd9959607a1b6044820152606490fd5b6000198114611f175760010190565b634e487b7160e01b600052601160045260246000fd5b60405190611f3a82611cbd565b8160e060009182815260606020820152606060408201528260608201528260808201528260a08201528260c08201520152565b6001600160401b0381116104785760051b60200190565b8051821015611e7a5760209160051b01019056fea2646970667358221220c1f517dc84fe76cec91e96c00148b45ddae1595c9d5cf1ca6d78dff50b57eef364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x585C25E EQ PUSH2 0x1B3F JUMPI DUP1 PUSH4 0xF771417 EQ PUSH2 0x1425 JUMPI DUP1 PUSH4 0x131D9A27 EQ PUSH2 0x12D0 JUMPI DUP1 PUSH4 0x14C60BDD EQ PUSH2 0xF55 JUMPI DUP1 PUSH4 0x1F058776 EQ PUSH2 0xF37 JUMPI DUP1 PUSH4 0x2AC6C785 EQ PUSH2 0xD36 JUMPI DUP1 PUSH4 0x3A9361BD EQ PUSH2 0xAD6 JUMPI DUP1 PUSH4 0x465E1DEF EQ PUSH2 0xA18 JUMPI DUP1 PUSH4 0x6F77926B EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7ED JUMPI DUP1 PUSH4 0x7B3C4BAA EQ PUSH2 0x74E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x725 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x60A JUMPI DUP1 PUSH4 0xAAEE301F EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0xD927EE88 EQ PUSH2 0x15F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0xE5 PUSH2 0x1D6B JUMP JUMPDEST PUSH2 0xED PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x18F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1AE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x1 SUB PUSH2 0x54F JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1F7 PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH2 0x1EC8 JUMP JUMPDEST PUSH2 0x202 PUSH1 0x5 SLOAD PUSH2 0x1F08 JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x214 DUP5 PUSH2 0x1CBD JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP2 DUP4 DUP4 MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP4 MLOAD DUP3 SSTORE MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x278 PUSH1 0x1 DUP5 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x508 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x499 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x48E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x478 JUMPI PUSH2 0x2D7 PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x431 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3BC JUMPI SWAP2 DUP1 PUSH1 0x6 SWAP5 SWAP3 PUSH1 0xE0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x3B1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP6 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0x5 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0xC0 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR SWAP1 SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH32 0x288C2EB47AA865E9DAA5C117CCF7AF2111AFEE680CC033A9F537AAFDC6B7908A PUSH2 0x3A6 PUSH1 0x5 SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x40 DUP4 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST CALLER PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x300 JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x419 JUMPI POP SWAP3 PUSH1 0x6 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xE0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x400 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x318 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x3F0 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x3CD JUMP JUMPDEST PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x471 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x465 JUMPI POP POP PUSH2 0x2E0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x44F JUMP JUMPDEST POP DUP1 PUSH2 0x44F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x4F0 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x4D7 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x2B4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x4C7 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x548 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x53C JUMPI POP POP PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x526 JUMP JUMPDEST POP DUP1 PUSH2 0x526 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F666669636572732063616E206372656174652074656E64657273 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH1 0xFF PUSH2 0x5F4 PUSH1 0x20 PUSH2 0x5E1 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1C04 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0x6CD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x62F PUSH2 0x1D6B JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x71B PUSH1 0x40 MLOAD SWAP3 PUSH2 0x659 DUP5 PUSH2 0x652 DUP2 DUP7 PUSH2 0x1DBB JUMP JUMPDEST SUB DUP6 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 PUSH2 0x66E DUP5 PUSH2 0x652 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x40 MLOAD PUSH2 0x68B DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP8 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP3 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x6E9 PUSH1 0x3 DUP5 ADD SLOAD SWAP2 PUSH2 0x6DB PUSH1 0x5 PUSH1 0x40 MLOAD SWAP7 PUSH2 0x6B5 DUP9 PUSH2 0x6AE DUP2 PUSH1 0x4 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP10 PUSH2 0x1CF4 JUMP JUMPDEST ADD SLOAD SWAP9 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 PUSH2 0x100 DUP1 SWAP2 MSTORE DUP14 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x20 DUP14 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x40 DUP12 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP4 DUP2 AND PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x703 PUSH1 0x80 DUP9 ADD DUP4 DUP4 PUSH1 0xA0 SHR AND PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP7 ADD MSTORE DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x15A JUMPI PUSH2 0x785 SWAP2 PUSH2 0x1E5E JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0x7E3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x7BD DUP4 PUSH2 0x7B6 DUP2 PUSH1 0x3 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP5 PUSH2 0x1CF4 JUMP JUMPDEST ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0x806 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15A JUMPI PUSH2 0x860 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x86C DUP2 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x60 SWAP1 DUP2 DUP2 MSTORE DUP2 DUP5 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE DUP2 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD PUSH1 0x0 SWAP1 MSTORE DUP2 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD PUSH1 0x0 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB DUP1 SWAP3 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x8C7 DUP5 PUSH2 0x1CBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x8D5 DUP2 DUP9 PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x8E0 SWAP1 DUP3 PUSH2 0x1CF4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x8F4 DUP2 PUSH1 0x1 DUP10 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x8FF SWAP1 DUP4 PUSH2 0x1CF4 JUMP JUMPDEST DUP5 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x917 DUP2 PUSH1 0x2 DUP5 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x922 SWAP1 DUP9 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD SWAP7 DUP8 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP6 DUP8 ADD SWAP3 DUP1 DUP3 AND DUP5 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 DUP3 PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH2 0x94D SWAP1 DUP4 PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0xA0 DUP10 ADD SWAP3 PUSH1 0xA8 SHR PUSH1 0xFF AND ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 PUSH1 0x4 DUP4 ADD SWAP1 PUSH2 0x970 SWAP2 PUSH2 0x1DBB JUMP JUMPDEST SUB PUSH2 0x97B SWAP1 DUP7 PUSH2 0x1CF4 JUMP JUMPDEST PUSH1 0xC0 DUP11 ADD SWAP5 DUP6 MSTORE PUSH1 0x5 ADD SLOAD SWAP8 PUSH1 0xE0 DUP11 ADD SWAP9 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP10 DUP13 MSTORE MLOAD PUSH2 0x100 DUP1 SWAP11 DUP14 ADD MSTORE PUSH2 0x120 DUP13 ADD PUSH2 0x9AE SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP8 MLOAD PUSH1 0x1F NOT DUP13 DUP11 SUB DUP2 ADD PUSH1 0x40 DUP15 ADD MSTORE SWAP9 PUSH2 0x9C7 SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 MLOAD SWAP2 DUP9 DUP13 DUP4 SUB ADD SWAP1 DUP13 ADD MSTORE PUSH2 0x9DC SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP5 MLOAD AND PUSH1 0x80 DUP10 ADD MSTORE MLOAD PUSH1 0xA0 DUP9 ADD PUSH2 0x9F2 SWAP2 PUSH2 0x1E51 JUMP JUMPDEST MLOAD ISZERO ISZERO PUSH1 0xC0 DUP8 ADD MSTORE MLOAD SWAP2 DUP6 DUP3 SUB ADD PUSH1 0xE0 DUP7 ADD MSTORE PUSH2 0xA0E SWAP2 PUSH2 0x1C27 JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH2 0xA50 DUP4 PUSH2 0x7B6 DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA64 DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 DUP4 ADD SLOAD SWAP3 PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0xAA9 PUSH1 0x6 PUSH1 0x5 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP5 PUSH2 0xA9B PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP11 MSTORE PUSH2 0x100 DUP1 PUSH1 0x20 DUP13 ADD MSTORE DUP11 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP1 DUP9 DUP3 SUB PUSH1 0x40 DUP11 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0xAEF PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0x15A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH1 0x44 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x15A JUMPI PUSH2 0xB1F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH2 0xB27 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP3 PUSH1 0x20 SWAP5 DUP5 DUP7 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD AND ISZERO PUSH2 0xCFB JUMPI PUSH1 0x0 DUP8 DUP2 MSTORE DUP5 DUP7 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA8 SHL NOT AND SWAP3 ISZERO ISZERO PUSH1 0xA8 SHL PUSH1 0xFF PUSH1 0xA8 SHL AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 ADD SWAP2 DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x478 JUMPI PUSH2 0xB91 DUP4 SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCB2 JUMPI JUMPDEST POP DUP5 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC26 JUMPI SWAP2 DUP1 PUSH2 0xC12 SWAP7 SWAP5 SWAP3 PUSH32 0xB81B5BF45193A7A76F3526DAD1B835E00D4B4FE251E28DEB91B938AD89979568 SWAP9 SWAP7 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xC1B JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x1DBB JUMP JUMPDEST SWAP2 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0xBDC JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xC9D JUMPI POP SWAP3 DUP7 SWAP5 SWAP2 SWAP3 PUSH32 0xB81B5BF45193A7A76F3526DAD1B835E00D4B4FE251E28DEB91B938AD89979568 SWAP10 SWAP8 SWAP4 DUP4 PUSH2 0xC12 SWAP11 SWAP9 SWAP7 LT PUSH2 0xC84 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0xBF0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xC77 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP8 ADD SWAP4 SWAP3 DUP9 ADD SWAP3 DUP9 ADD PUSH2 0xC39 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP8 DUP6 LT PUSH2 0xCF1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0xCE5 JUMPI POP POP PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0xCD7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xCCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C881B9BDD081C9959DA5CDD195C9959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x5 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI POP PUSH2 0xD63 DUP3 PUSH2 0x1F6D JUMP JUMPDEST SWAP2 PUSH2 0xD71 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0xD80 PUSH1 0x1F NOT SWAP2 PUSH2 0x1F6D JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xEE1 JUMPI POP POP PUSH1 0x0 PUSH1 0x1 JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xDFA JUMPI POP POP POP PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE DUP2 PUSH1 0x40 DUP3 DUP2 DUP8 ADD SWAP8 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0xDCE JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH2 0xDEA PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x1C4C JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0xDC1 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP8 DUP3 ADD SLOAD PUSH1 0xA0 SWAP1 PUSH1 0xFF DUP2 DUP4 SHR AND SWAP3 DUP4 PUSH2 0xE34 JUMPI JUMPDEST POP POP POP POP POP POP PUSH2 0xE2F SWAP1 PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0xD92 JUMP JUMPDEST SWAP3 PUSH1 0x6 SWAP3 PUSH2 0xE2F SWAP8 SWAP9 SWAP6 SWAP3 PUSH2 0xED5 SWAP8 SWAP6 PUSH1 0x40 MLOAD SWAP7 PUSH2 0xE51 DUP9 PUSH2 0x1CBD JUMP JUMPDEST DUP6 SLOAD DUP9 MSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xE71 DUP3 PUSH2 0xE6A DUP2 PUSH1 0x1 DUP12 ADD PUSH2 0x1DBB JUMP JUMPDEST SUB DUP4 PUSH2 0x1CF4 JUMP JUMPDEST DUP9 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xE88 DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP11 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 DUP9 ADD MSTORE DUP5 ADD SLOAD PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP6 ADD MSTORE ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0xEC4 DUP3 DUP9 PUSH2 0x1F84 JUMP JUMPDEST MSTORE PUSH2 0xECF DUP2 DUP8 PUSH2 0x1F84 JUMP JUMPDEST POP PUSH2 0x1F08 JUMP JUMPDEST SWAP2 SWAP1 DUP7 DUP1 DUP1 DUP1 DUP1 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0xEEC PUSH2 0x1F2D JUMP JUMPDEST DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0xD84 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF DUP5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0xF22 JUMPI JUMPDEST PUSH2 0xF1D SWAP1 PUSH2 0x1F08 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST SWAP2 PUSH2 0xF2F PUSH2 0xF1D SWAP2 PUSH2 0x1F08 JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0xF14 JUMP JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x15A JUMPI PUSH2 0xF86 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x1294 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD TIMESTAMP GT PUSH2 0x1256 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0x2 SUB PUSH2 0x1211 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x1007 PUSH1 0xFF PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA8 SHR AND PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1025 DUP4 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP4 CALLER DUP6 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 DUP4 MSTORE TIMESTAMP PUSH1 0x80 DUP7 ADD MSTORE DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH2 0x106B SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1E5E JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0x11FB JUMPI DUP5 MLOAD DUP7 SSTORE MLOAD PUSH1 0x1 DUP7 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD DUP1 MLOAD SWAP2 DUP3 GT PUSH2 0x478 JUMPI PUSH2 0x10B6 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x11B0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x113B JUMPI SWAP2 DUP1 PUSH1 0x4 SWAP5 SWAP3 PUSH1 0x80 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1130 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x24 CALLDATALOAD DUP2 MSTORE CALLER SWAP1 PUSH32 0x177554F051F4AA1F0D0310334854B429BAEECDB5A96BC329A26FD0CB7C8A7BE3 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x10DF JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x1198 JUMPI POP SWAP3 PUSH1 0x4 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0x80 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x117F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x10F7 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x116F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x114C JUMP JUMPDEST PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x11F1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x11E5 JUMPI POP PUSH2 0x10BF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x11CF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920626964646572732063616E207375626D6974206269647300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x15195B99195C88191958591B1A5B99481C185CDCD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x54656E646572206973206E6F7420616374697665 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP2 PUSH2 0x12FE DUP4 PUSH2 0x1F6D JUMP JUMPDEST SWAP3 PUSH2 0x130C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1CF4 JUMP JUMPDEST DUP1 DUP5 MSTORE DUP3 DUP5 ADD DUP1 SWAP3 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x13BF JUMPI POP POP POP POP PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 ADD SWAP4 DUP2 DUP5 MSTORE MLOAD DUP1 SWAP5 MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x40 DUP2 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 SWAP2 PUSH1 0x0 SWAP6 JUMPDEST DUP3 DUP8 LT PUSH2 0x135A JUMPI DUP6 DUP6 SUB DUP7 RETURN JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 DUP1 PUSH1 0x1 SWAP3 PUSH1 0x3F NOT DUP10 DUP3 SUB ADD DUP6 MSTORE DUP8 MLOAD SWAP1 DUP2 MLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP4 DUP4 ADD MLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x13A5 PUSH1 0x60 DUP1 DUP5 ADD MLOAD SWAP1 PUSH1 0xA0 DUP1 SWAP2 DUP6 ADD MSTORE DUP4 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE SWAP7 ADD SWAP3 ADD SWAP7 ADD SWAP6 SWAP3 SWAP2 SWAP1 SWAP3 PUSH2 0x134D JUMP JUMPDEST PUSH1 0x5 DUP7 PUSH1 0x1 SWAP3 PUSH1 0x40 SWAP10 SWAP9 SWAP10 MLOAD PUSH2 0x13D4 DUP2 PUSH2 0x1CD9 JUMP JUMPDEST DUP6 SLOAD DUP2 MSTORE DUP5 DUP1 PUSH1 0xA0 SHL SUB DUP6 DUP8 ADD SLOAD AND DUP4 DUP3 ADD MSTORE PUSH1 0x2 DUP7 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1405 DUP2 PUSH2 0x684 DUP2 PUSH1 0x3 DUP12 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP7 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP6 SWAP5 SWAP6 PUSH2 0x131F JUMP JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1455 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1474 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x15A JUMPI PUSH2 0x1494 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1D15 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x64 CALLDATALOAD LT ISZERO PUSH2 0x15A JUMPI PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP7 MLOAD PUSH2 0x14B6 DUP2 DUP4 DUP6 DUP12 ADD PUSH2 0x1C04 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH2 0x1AFA JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1AB5 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x14F3 DUP4 PUSH2 0x1CBD JUMP JUMPDEST DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE CALLER PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1515 PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP4 ADD PUSH2 0x1EBC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP2 ADD LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x20 DUP4 ADD GT OR PUSH2 0x478 JUMPI PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP3 ADD MSTORE CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x1579 DUP5 SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A71 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A08 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x19FD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP4 SSTORE JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x15D5 PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19B6 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1947 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x193C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH2 0x1634 PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18F5 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1886 JUMPI DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x187B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND SWAP1 DUP1 SLOAD PUSH1 0x80 DUP5 ADD MLOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x593 JUMPI PUSH1 0xA0 DUP6 DUP2 ADD MLOAD PUSH1 0xFF PUSH1 0xA8 SHL SWAP1 ISZERO ISZERO PUSH1 0xA8 SHL AND PUSH1 0xFF PUSH1 0xA0 SHL SWAP6 SWAP1 SWAP2 SHL SWAP5 SWAP1 SWAP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP3 SWAP1 SWAP3 AND PUSH1 0xFF PUSH1 0xA8 SHL NOT SWAP2 SWAP1 SWAP2 AND OR OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x478 JUMPI PUSH2 0x16F4 PUSH1 0x4 DUP6 ADD SLOAD PUSH2 0x1D81 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1830 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x17BD JUMPI SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xE0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x17B2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x174F DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x1C04 JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xC2E5D5DA58BD71D1A2D14CDEF02A4256D971B728088F8190D067CCFBAE3BD73E PUSH2 0x179A PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST SWAP2 PUSH2 0x17AA PUSH1 0x20 DUP3 ADD PUSH1 0x64 CALLDATALOAD PUSH2 0x1E51 JUMP JUMPDEST DUP1 CALLER SWAP4 SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x171D JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x4 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1818 JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0xE0 SWAP7 PUSH1 0x5 SWAP9 SWAP7 LT PUSH2 0x17FF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP6 ADD SSTORE PUSH2 0x1735 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x17EF JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1871 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1865 JUMPI POP PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1858 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x184F JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x1658 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x18DD JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x18C4 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x1670 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1896 JUMP JUMPDEST PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1935 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1929 JUMPI POP POP PUSH2 0x163D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1913 JUMP JUMPDEST POP DUP1 PUSH2 0x1913 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x15F9 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x199E JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1985 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x1611 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1975 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x19F6 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x19EA JUMPI POP POP PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19D4 JUMP JUMPDEST POP DUP1 PUSH2 0x19D4 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP6 DUP1 PUSH2 0x159D JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP2 LT PUSH2 0x1A59 JUMPI POP PUSH1 0x1 SWAP4 SWAP5 SWAP6 SWAP7 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1A40 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP4 SSTORE PUSH2 0x15B2 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP6 DUP1 DUP1 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP6 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP4 ADD SWAP2 ADD PUSH2 0x1A15 JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP5 LT PUSH2 0x1AAE JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x1AA2 JUMPI POP POP PUSH2 0x1582 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A8C JUMP JUMPDEST POP DUP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792072656769737465726564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365726E616D6520616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x15A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x15A JUMPI PUSH2 0x1B58 PUSH2 0x1F2D JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x1C00 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x6 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1B7B DUP4 PUSH2 0x1CBD JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1B93 DUP2 PUSH2 0x684 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0x1BAC DUP2 PUSH2 0x684 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1C4C JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1C17 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1C07 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1C40 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0xE0 DUP1 PUSH2 0x1C82 PUSH2 0x1C70 PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x100 DUP1 PUSH1 0x20 DUP9 ADD MSTORE DUP7 ADD SWAP1 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1C27 JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP3 ADD MLOAD AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x478 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x478 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x478 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x15A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1D49 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1CF4 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x15A JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x15A JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1DB1 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1D9B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1D90 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x1DCC DUP4 PUSH2 0x1D81 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1E2E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DEE JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x1E1A JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1DE8 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1DE8 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x593 JUMPI MSTORE JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1E7A JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1EA4 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x593 JUMPI MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1ECF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155CD95C881B9BDD08185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1F17 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F3A DUP3 PUSH2 0x1CBD JUMP JUMPDEST DUP2 PUSH1 0xE0 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x478 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1E7A JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC1 CREATE2 OR 0xDC DUP5 INVALID PUSH23 0xCEC91E96C00148B45DDAE1595C9D5CF1CA6D78DFF50B57 0xEE RETURN PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"163:4771:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;163:4771:9;;;;2627:22:0;;2623:91;;163:4771:9;;;;;;;;;;;;3052:40:0;163:4771:9;3052:40:0;;163:4771:9;2623:91:0;163:4771:9;;-1:-1:-1;;;2672:31:0;;163:4771:9;;2672:31:0;;163:4771:9;;;2672:31:0;163:4771:9;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;:::i;:::-;2866:10;;163:4771;;;;;;;;;;2860:22;163:4771;;;;;;;;;;;2860:42;163:4771;;2866:10;163:4771;;;;;2949:58;163:4771;;;;;2957:28;163:4771;;;;2949:58;:::i;:::-;3018:13;;163:4771;3018:13;:::i;:::-;163:4771;;3018:13;163:4771;;;;;;;:::i;:::-;;;;;3064:202;;163:4771;;;;;3064:202;;163:4771;;;;3064:202;;163:4771;;;;3064:202;;163:4771;2866:10;163:4771;3064:202;;163:4771;;3064:202;;;163:4771;3241:15;163:4771;3064:202;;163:4771;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:202;;163:4771;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3064:202;;163:4771;;;;;;3064:202;;163:4771;;;;;3018:13;163:4771;;;;;;;;3064:202;;163:4771;;;;;;;;3064:202;;;163:4771;;;;;;;;;;;;;;;3064:202;163:4771;;;;3282:46;163:4771;3018:13;163:4771;;;;;;;;;;;;;;;:::i;:::-;2866:10;163:4771;;;;3282:46;;;163:4771;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:13;163:4771;;;;;;;;;;;;3018:13;163:4771;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3018:13;163:4771;;;;;;;;;;;;3018:13;163:4771;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;1143:40;163:4771;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;-1:-1:-1;;;;;163:4771:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;1100:37;163:4771;1100:37;163:4771;1100:37;163:4771;1100:37;;163:4771;:::i;:::-;;;;;1100:37;163:4771;1100:37;;;;163:4771;:::i;:::-;;;;:::i;:::-;;;1100:37;;163:4771;;;1100:37;163:4771;;1100:37;163:4771;1100:37;163:4771;1100:37;163:4771;1100:37;;163:4771;:::i;:::-;;;;:::i;:::-;1100:37;163:4771;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;;;;;;;;;;;;;1236:37;;;;;;;;:::i;:::-;163:4771;;;;;;;;;1236:37;;163:4771;;1236:37;163:4771;1236:37;;;163:4771;;;;;1236:37;163:4771;1236:37;163:4771;1236:37;163:4771;1236:37;;163:4771;:::i;:::-;;;;:::i;:::-;1236:37;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;1500:62:0;;:::i;:::-;163:4771:9;;;-1:-1:-1;;;;;;163:4771:9;;;;-1:-1:-1;;;;;163:4771:9;3052:40:0;163:4771:9;;3052:40:0;163:4771:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;163:4771:9;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;;;;;;;;;;;;1189:41;163:4771;1189:41;163:4771;1189:41;163:4771;1189:41;;163:4771;:::i;:::-;;;;1189:41;163:4771;1189:41;;;;163:4771;:::i;:::-;;;1189:41;;163:4771;1189:41;163:4771;1189:41;;163:4771;;1189:41;;;;163:4771;1189:41;;163:4771;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;2417:26;163:4771;;2417:40;163:4771;;;;;;;;;;;;;2500:23;;163:4771;;-1:-1:-1;;;;163:4771:9;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;2545:27;163:4771;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2598:53;163:4771;;;;;;;;-1:-1:-1;;;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;2618:21;163:4771;;;;;;;;;;;;;;:::i;:::-;;;;;2598:53;;;163:4771;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2598:53;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:4771:9;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;4508:11;163:4771;;;;4500:1;4503:16;;;;;;;163:4771;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;4686:17;;163:4771;4500:1;4733:16;;;;;;;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4500:1;163:4771;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4751:3;163:4771;;;;;;;;;;;;4774:19;;;;163:4771;;;;;;;;4770:116;;;;4751:3;;;;;;;;;;:::i;:::-;4718:13;;4770:116;163:4771;;;4751:3;163:4771;;;;4864:7;163:4771;;;;;;;;:::i;:::-;;;;;;;;;;;;4500:1;163:4771;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;;;;;;;4813:33;;;;:::i;:::-;;;;;;:::i;:::-;;4864:7;:::i;:::-;4770:116;;;;;;;;;163:4771;;;;;:::i;:::-;;;;;;;;;;4521:3;163:4771;;;;;;;;;;;4544:19;163:4771;;;;4540:65;;4521:3;;;;:::i;:::-;4488:13;;4540:65;4583:7;;4521:3;4583:7;;:::i;:::-;4540:65;;;;;163:4771;;;;;;-1:-1:-1;;163:4771:9;;;;;1279:26;163:4771;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;3479:27;163:4771;;;3479:27;163:4771;;;;;;;;;;;;;;;;;;3568:27;163:4771;3549:15;:46;163:4771;;3646:10;163:4771;;;;;;;;;;3640:22;163:4771;;;;;;;;;;3666:15;3640:41;163:4771;;3646:10;163:4771;;;;;3724:58;163:4771;;;;;3732:28;163:4771;;;;3724:58;:::i;:::-;163:4771;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;3814:136;;3646:10;;163:4771;;;3814:136;;163:4771;;;;;;3814:136;;163:4771;;;3549:15;3814:136;;;163:4771;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;163:4771:9;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;3666:15;163:4771;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3814:136;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;3814:136;163:4771;;;;;;;;;;3646:10;163:4771;3967:44;163:4771;;;3967:44;;163:4771;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;;;;;;;3814:136;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3479:27;163:4771;;;;;;;;;;;;3479:27;163:4771;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1844:9;163:4771;;;;;;;;;;1916:10;163:4771;;;;1910:5;163:4771;;;;;;1910:31;163:4771;-1:-1:-1;;;;;163:4771:9;;;;;;;;;:::i;:::-;;;2014:183;163:4771;2014:183;;163:4771;;2014:183;;163:4771;1916:10;163:4771;2014:183;;163:4771;2014:183;163:4771;;;2014:183;;;:::i;:::-;163:4771;;2014:183;;163:4771;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;;;;;2014:183;;;163:4771;2172:15;163:4771;2014:183;;163:4771;1916:10;163:4771;;1910:5;163:4771;;;;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;2014:183;;163:4771;;;;-1:-1:-1;;;;;163:4771:9;;;;;1910:5;163:4771;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;1910:5;163:4771;;;;;2014:183;;163:4771;;;;-1:-1:-1;;;;;163:4771:9;;;;;1844:9;163:4771;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;1844:9;163:4771;;;;;;;;;;;;;2014:183;;163:4771;;;;;;2014:183;;163:4771;;;;;;;;;2014:183;;;163:4771;-1:-1:-1;;;163:4771:9;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;-1:-1:-1;;;;;;163:4771:9;;;;-1:-1:-1;;;;163:4771:9;;;;;;;;;;;;2014:183;;;163:4771;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;2014:183;163:4771;;;;;;;;;;;;;;;;;:::i;:::-;;;1844:9;163:4771;;;;;;1910:5;163:4771;;;;;;;;2250:44;163:4771;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;1916:10;;2250:44;;;;163:4771;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;-1:-1:-1;163:4771:9;;;;;;;;-1:-1:-1;163:4771:9;;;;;1844:9;163:4771;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;1844:9;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;1844:9;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;-1:-1:-1;163:4771:9;;;;;;;-1:-1:-1;163:4771:9;;;;;1910:5;163:4771;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;-1:-1:-1;163:4771:9;;;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1910:5;163:4771;;;;-1:-1:-1;163:4771:9;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;163:4771:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;163:4771:9;;;;;;;;;;;-1:-1:-1;;163:4771:9;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;163:4771:9;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;163:4771:9;;;;-1:-1:-1;163:4771:9;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;163:4771:9;;;-1:-1:-1;163:4771:9;;;;;-1:-1:-1;163:4771:9;:::o;:::-;;;;;;;;;;;;1796:162:0;1710:6;163:4771:9;-1:-1:-1;;;;;163:4771:9;735:10:1;1855:23:0;1851:101;;1796:162::o;1851:101::-;163:4771:9;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;163:4771:9;;;1901:40:0;163:4771:9;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;163:4771:9;;;;;;;;;;;;-1:-1:-1;;;163:4771:9;;;;;;;;-1:-1:-1;;163:4771:9;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;163:4771:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;163:4771:9;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"approveUser(address,bool,string)":"3a9361bd","bids(uint256,uint256)":"7b3c4baa","createTender(string,string,uint256,uint256)":"d927ee88","getActiveTenders()":"2ac6c785","getBids(uint256)":"131d9a27","getTender(uint256)":"0585c25e","getUser(address)":"6f77926b","owner()":"8da5cb5b","registerUser(string,string,string,uint8)":"0f771417","renounceOwnership()":"715018a6","submitBid(uint256,uint256,string)":"14c60bdd","tenderCount()":"1f058776","tenders(uint256)":"465e1def","transferOwnership(address)":"f2fde38b","usernames(string)":"aaee301f","users(address)":"a87430ba"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BidSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"officer\",\"type\":\"address\"}],\"name\":\"TenderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"UserApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum Database.UserRole\",\"name\":\"role\",\"type\":\"uint8\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"_remark\",\"type\":\"string\"}],\"name\":\"approveUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createTender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActiveTenders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Database.Tender[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"}],\"name\":\"getBids\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tenderId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bidderAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Database.Bid[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"getTender\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Database.Tender\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"enum Database.UserRole\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"approvalRemark\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Database.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"enum Database.UserRole\",\"name\":\"_role\",\"type\":\"uint8\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tenderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"submitBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tenderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tenders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"budget\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"officerAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"usernames\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"enum Database.UserRole\",\"name\":\"role\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"approvalRemark\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/Database.sol\":\"Database\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/contracts/Database.sol\":{\"keccak256\":\"0x1a2f63f7dad67329e10c4244370ce5e694d61125beedc8361f0e0cca6827a366\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7613a4e4bf4148f2c069914329997ae92c69eff63a3241b1cc0c15b509a5fcb1\",\"dweb:/ipfs/QmWEymhLGz82z4PCy2r3kH1ZNR6gQq1ZcMNCDSYyAUbZZV\"]}},\"version\":1}"}},"src/contracts/OfficerManagement.sol":{"OfficerManagement":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"string","name":"id","type":"string"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"username","type":"string"}],"name":"OfficerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"string","name":"id","type":"string"}],"name":"OfficerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"OfficerStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"string","name":"name","type":"string"},{"indexed":false,"internalType":"string","name":"username","type":"string"}],"name":"OfficerUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"}],"name":"addOfficer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllOfficerAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"getOfficer","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getOfficerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"isOfficer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"officerAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"officers","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"removeOfficer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"}],"name":"setOfficerStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"transferAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"}],"name":"updateOfficer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"usernameExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x28 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x16C1 SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E82D29 EQ PUSH2 0x128A JUMPI DUP1 PUSH4 0x6296328 EQ PUSH2 0x11C2 JUMPI DUP1 PUSH4 0x84866DD EQ PUSH2 0x1147 JUMPI DUP1 PUSH4 0x1E572C0F EQ PUSH2 0x1093 JUMPI DUP1 PUSH4 0x6816442D EQ PUSH2 0x104F JUMPI DUP1 PUSH4 0x719A0F8C EQ PUSH2 0xE29 JUMPI DUP1 PUSH4 0x728576D1 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x9E8D7F54 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xBF9CF4CF EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xE935A2F5 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF309E3F9 EQ PUSH2 0xD9 JUMPI PUSH4 0xF851A440 EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH1 0xFF PUSH2 0x124 PUSH1 0x20 PUSH2 0x111 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x171 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0xD4 JUMPI PUSH32 0x8A40EF3E42980AA96509D3E2E04B0C037F32D7251181D8843C0CB9B3378C99DF SWAP2 PUSH2 0x202 PUSH1 0x20 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1BF DUP3 PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH2 0x1E1 PUSH2 0x1DA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST ISZERO ISZERO PUSH2 0x15FD JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x224 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x244 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x25D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x275 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x290 SWAP1 DUP4 AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH2 0x2B0 PUSH2 0x1DA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP1 DUP6 MSTORE PUSH2 0x2C7 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x13A5 JUMP JUMPDEST DUP2 DUP2 MLOAD DUP8 DUP1 DUP5 ADD SWAP2 DUP3 KECCAK256 SWAP4 DUP9 MLOAD DUP3 DUP11 ADD SWAP6 DUP2 DUP8 KECCAK256 SUB PUSH2 0x658 JUMPI JUMPDEST POP POP POP POP POP POP DUP7 PUSH1 0x0 MSTORE DUP1 DUP6 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP7 MLOAD SWAP1 DUP4 DUP3 GT PUSH2 0x50B JUMPI PUSH2 0x309 DUP2 SLOAD PUSH2 0x132F JUMP JUMPDEST SWAP2 PUSH1 0x1F SWAP3 DUP4 DUP2 GT PUSH2 0x62A JUMPI JUMPDEST POP DUP1 DUP9 DUP5 DUP3 GT PUSH1 0x1 EQ PUSH2 0x5C7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x5BC JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 DUP7 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP6 MLOAD DUP5 DUP2 GT PUSH2 0x50B JUMPI PUSH2 0x35F DUP3 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x58E JUMPI JUMPDEST POP DUP1 DUP9 DUP5 DUP3 GT PUSH1 0x1 EQ PUSH2 0x52C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x521 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 DUP7 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP4 DUP1 MLOAD SWAP4 DUP5 GT PUSH2 0x50B JUMPI PUSH2 0x3B2 DUP6 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0x4D3 JUMPI JUMPDEST POP DUP7 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH2 0x442 JUMPI SWAP3 DUP1 DUP1 PUSH32 0x2BA41E3E50DD5D36D00A4B9BAB6324EF9FAE734DC40398301B8503405FFF600C SWAP10 SWAP8 SWAP5 PUSH2 0x432 SWAP8 SWAP5 PUSH2 0x425 SWAP11 SWAP8 PUSH1 0x0 SWAP5 PUSH2 0x437 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB SWAP1 DUP6 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP3 POP DUP13 DUP1 PUSH2 0x3FF JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4BE JUMPI POP SWAP3 PUSH2 0x425 SWAP9 SWAP6 SWAP3 DUP6 SWAP3 PUSH32 0x2BA41E3E50DD5D36D00A4B9BAB6324EF9FAE734DC40398301B8503405FFF600C SWAP12 SWAP10 SWAP7 PUSH2 0x432 SWAP10 SWAP7 LT PUSH2 0x4A5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x411 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x498 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 SWAP3 DUP10 ADD SWAP3 DUP10 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x4FC SWAP1 DUP7 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP10 LT PUSH2 0x502 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP10 PUSH2 0x3BA JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x4F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP12 PUSH2 0x37C JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x1F NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP13 DUP13 DUP4 DUP4 LT PUSH2 0x579 JUMPI POP POP POP DUP4 GT PUSH2 0x560 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x38F JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x554 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x541 JUMP JUMPDEST PUSH2 0x5B6 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH2 0x502 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP DUP10 ADD MLOAD DUP12 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE DUP11 DUP2 KECCAK256 DUP8 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP1 DUP13 DUP15 JUMPDEST DUP4 DUP4 LT PUSH2 0x613 JUMPI POP POP POP DUP4 GT PUSH2 0x5FA JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x33D JUMP JUMPDEST DUP12 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x5EE JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD DUP13 DUP15 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x652 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH2 0x502 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x6C2 SWAP4 PUSH2 0x69C SWAP3 PUSH2 0x68B PUSH1 0xFF DUP5 DUP8 DUP12 DUP2 SWAP8 PUSH2 0x679 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH1 0xFF NOT SWAP5 DUP6 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP12 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 DUP2 DUP2 DUP8 DUP2 DUP1 PUSH2 0x2E1 JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x6F7 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x711 CALLER DUP4 DUP6 AND EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x729 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x779 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x798 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x7B8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x7D8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x7F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP2 SWAP1 PUSH2 0x813 SWAP1 DUP7 AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x82C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH2 0xDD4 JUMPI PUSH2 0x860 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0x84C DUP13 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST PUSH1 0x3 DUP2 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x86D DUP3 PUSH2 0x1369 JUMP JUMPDEST DUP4 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE DUP7 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI DUP2 SWAP1 PUSH2 0x8BE DUP6 SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDA2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD36 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xD2B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI DUP2 SWAP1 PUSH2 0x918 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCF6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC84 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xC79 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI DUP2 SWAP1 PUSH2 0x975 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC44 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBD2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xBC7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI PUSH2 0x9D0 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB87 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB12 JUMPI SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xB07 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH2 0xA30 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x2 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x50B JUMPI PUSH32 0xC5D1941EAE357372BC3EACC7D6F759F515B8152B4D592A813C31368E8737E52F SWAP5 PUSH2 0xAF7 PUSH2 0x432 SWAP4 PUSH2 0xAA9 DUP5 PUSH2 0xA8A DUP10 PUSH1 0x1 PUSH2 0xAE9 SWAP12 ADD PUSH1 0x2 SSTORE PUSH2 0x12CC JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0xAC0 DUP14 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB PUSH1 0x40 DUP7 ADD MSTORE AND SWAP6 PUSH2 0x146E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xB6F JUMPI POP SWAP3 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB56 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xA11 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xB46 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xBB7 SWAP1 PUSH1 0x3 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP10 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBAA JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x995 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xC29 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xC10 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x9AD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xC00 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xC73 SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x97E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x938 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xCDB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xCC2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x950 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xCB2 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xC97 JUMP JUMPDEST PUSH2 0xD25 SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x921 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xD87 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD6E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x8F3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xD61 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xDCE SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F66666963657220616C72656164792065786973747320666F72207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD4 JUMPI PUSH2 0xE43 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 PUSH2 0xE5E SWAP1 DUP4 AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP3 DUP4 DUP2 MSTORE PUSH2 0xE7B PUSH2 0x1DA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 DUP2 MSTORE PUSH1 0x2 PUSH2 0xE93 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP4 MSTORE DUP6 PUSH2 0xEA9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x13A5 JUMP JUMPDEST SWAP5 DUP5 PUSH2 0xEBE PUSH1 0x40 MLOAD SWAP6 DUP7 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST DUP5 ADD SWAP4 DUP6 DUP2 PUSH1 0x3 SWAP7 DUP8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 SWAP2 JUMPDEST PUSH2 0xF57 JUMPI JUMPDEST POP POP DUP5 SWAP6 PUSH2 0xF3B PUSH1 0x0 SWAP4 PUSH2 0xF34 PUSH1 0x5 SWAP5 PUSH32 0x814BF979C9F7F89608EC350A486866636EC790BBDA23EDA1AD00DA146CD62ECB SWAP10 DUP8 MSTORE DUP5 DUP9 MSTORE PUSH2 0xF2D PUSH1 0x40 DUP9 KECCAK256 SWAP6 PUSH2 0xF26 DUP8 PUSH2 0x1642 JUMP JUMPDEST DUP7 ADD PUSH2 0x1642 JUMP JUMPDEST DUP5 ADD PUSH2 0x1642 JUMP JUMPDEST DUP3 ADD PUSH2 0x1642 JUMP JUMPDEST DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE PUSH2 0x432 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST DUP3 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x1049 JUMPI DUP8 DUP3 PUSH2 0xF6C DUP6 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP9 SHL SHR AND EQ PUSH2 0xFA2 JUMPI POP PUSH1 0x0 NOT DUP3 EQ PUSH2 0xF8C JUMPI DUP8 DUP1 SWAP3 ADD SWAP2 PUSH2 0xED9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP9 SWAP3 SWAP2 SWAP4 SWAP5 SWAP8 SWAP9 NOT SWAP2 DUP3 DUP3 ADD SWAP2 DUP3 GT PUSH2 0xF8C JUMPI PUSH2 0xA8A DUP6 PUSH2 0xFC7 PUSH2 0xFD4 SWAP5 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP13 SHL SHR AND SWAP2 PUSH2 0x12CC JUMP JUMPDEST DUP4 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x1033 JUMPI PUSH2 0xF34 PUSH1 0x0 SWAP6 PUSH1 0x5 SWAP6 PUSH2 0xF3B SWAP5 PUSH32 0x814BF979C9F7F89608EC350A486866636EC790BBDA23EDA1AD00DA146CD62ECB SWAP12 ADD SWAP1 PUSH2 0x1017 DUP3 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 DUP8 SHL SHL NOT AND SWAP1 SSTORE DUP2 SSTORE SWAP5 POP POP SWAP4 POP DUP2 SWAP8 SWAP7 POP PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xEDE JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1070 PUSH2 0x1319 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x1089 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10B4 PUSH2 0x1319 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x10CE DUP2 PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x10D7 DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1143 PUSH2 0x10E8 PUSH1 0x1 DUP5 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH2 0x10FC PUSH1 0x2 DUP6 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD SWAP5 DUP6 MSTORE PUSH2 0x1110 PUSH1 0x3 DUP3 ADD PUSH2 0x13A5 JUMP JUMPDEST DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND ISZERO ISZERO SWAP3 DUP4 PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD SWAP3 DUP4 PUSH1 0xA0 DUP3 ADD MSTORE MLOAD SWAP5 MLOAD SWAP6 MLOAD PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1493 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1168 PUSH2 0x1319 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x117F DUP2 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x1143 PUSH2 0x118E PUSH1 0x1 DUP5 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP3 PUSH2 0x119B PUSH1 0x2 DUP3 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP1 PUSH2 0x11A8 PUSH1 0x3 DUP3 ADD PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1493 JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x2 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x126D JUMPI DUP7 DUP7 PUSH2 0x1224 DUP3 DUP9 SUB DUP4 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x124D JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x123E JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x120E JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD4 JUMPI PUSH2 0x12B3 PUSH1 0x20 SWAP2 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD4 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x135F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1349 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x133E JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x13B9 DUP5 PUSH2 0x132F JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1428 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13E5 JUMPI JUMPDEST POP POP PUSH2 0x13E3 SWAP3 POP SUB DUP4 PUSH2 0x1384 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1410 JUMPI POP POP PUSH2 0x13E3 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13D5 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x13F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13E3 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x145E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x144E JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1487 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x144B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x14D4 SWAP1 PUSH2 0x14C6 PUSH2 0x14E2 SWAP5 PUSH2 0x14B8 PUSH1 0xA0 SWAP9 SWAP6 SWAP12 SWAP11 SWAP10 SWAP12 PUSH1 0xC0 DUP10 MSTORE PUSH1 0xC0 DUP10 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP5 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xD4 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1522 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1384 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xD4 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x154B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x15A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365726E616D6520616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x15F1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15E6 JUMP JUMPDEST ISZERO PUSH2 0x1604 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13D9999A58D95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x164C DUP2 SLOAD PUSH2 0x132F JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1656 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x1668 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x1687 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x15E6 JUMP JUMPDEST SSTORE SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xD7 0xF8 SSTORE 0xD8 JUMP 0xDE 0xD6 0x2A 0xFC NOT 0xBF 0xC6 MULMOD 0xCC 0xE1 0xBE 0xDE 0xF7 0xDC 0xDB PUSH8 0x9DFBF0385CE6C8DD 0xBD PUSH27 0x64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"164:6606:10:-:0;;;;;;;1406:18;164:6606;;-1:-1:-1;;;;;;164:6606:10;1414:10;164:6606;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4889,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":5358,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":5230,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string_string_string_bool_uint256":{"entryPoint":5267,"id":null,"parameterSlots":7,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":5606,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":5029,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5195,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4911,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":4996,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_20731":{"entryPoint":4969,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8c91":{"entryPoint":5530,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_aa9f":{"entryPoint":5629,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e0ef":{"entryPoint":5444,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":4812,"id":null,"parameterSlots":1,"returnSlots":2},"storage_set_to_zero_string":{"entryPoint":5698,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E82D29 EQ PUSH2 0x128A JUMPI DUP1 PUSH4 0x6296328 EQ PUSH2 0x11C2 JUMPI DUP1 PUSH4 0x84866DD EQ PUSH2 0x1147 JUMPI DUP1 PUSH4 0x1E572C0F EQ PUSH2 0x1093 JUMPI DUP1 PUSH4 0x6816442D EQ PUSH2 0x104F JUMPI DUP1 PUSH4 0x719A0F8C EQ PUSH2 0xE29 JUMPI DUP1 PUSH4 0x728576D1 EQ PUSH2 0x760 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x6DE JUMPI DUP1 PUSH4 0x9E8D7F54 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xBF9CF4CF EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xE935A2F5 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xF309E3F9 EQ PUSH2 0xD9 JUMPI PUSH4 0xF851A440 EQ PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH1 0xFF PUSH2 0x124 PUSH1 0x20 PUSH2 0x111 DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x171 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO SWAP1 DUP2 DUP4 SUB PUSH2 0xD4 JUMPI PUSH32 0x8A40EF3E42980AA96509D3E2E04B0C037F32D7251181D8843C0CB9B3378C99DF SWAP2 PUSH2 0x202 PUSH1 0x20 SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x1BF DUP3 PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH2 0x1E1 PUSH2 0x1DA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST ISZERO ISZERO PUSH2 0x15FD JUMP JUMPDEST DUP6 PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 STOP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x224 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x244 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x25D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x275 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH2 0x290 SWAP1 DUP4 AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP3 PUSH1 0x20 SWAP4 DUP1 DUP6 MSTORE PUSH2 0x2B0 PUSH2 0x1DA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP1 DUP6 MSTORE PUSH2 0x2C7 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x13A5 JUMP JUMPDEST DUP2 DUP2 MLOAD DUP8 DUP1 DUP5 ADD SWAP2 DUP3 KECCAK256 SWAP4 DUP9 MLOAD DUP3 DUP11 ADD SWAP6 DUP2 DUP8 KECCAK256 SUB PUSH2 0x658 JUMPI JUMPDEST POP POP POP POP POP POP DUP7 PUSH1 0x0 MSTORE DUP1 DUP6 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP7 MLOAD SWAP1 DUP4 DUP3 GT PUSH2 0x50B JUMPI PUSH2 0x309 DUP2 SLOAD PUSH2 0x132F JUMP JUMPDEST SWAP2 PUSH1 0x1F SWAP3 DUP4 DUP2 GT PUSH2 0x62A JUMPI JUMPDEST POP DUP1 DUP9 DUP5 DUP3 GT PUSH1 0x1 EQ PUSH2 0x5C7 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x5BC JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 DUP7 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP6 MLOAD DUP5 DUP2 GT PUSH2 0x50B JUMPI PUSH2 0x35F DUP3 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP4 DUP2 GT PUSH2 0x58E JUMPI JUMPDEST POP DUP1 DUP9 DUP5 DUP3 GT PUSH1 0x1 EQ PUSH2 0x52C JUMPI PUSH1 0x0 SWAP2 PUSH2 0x521 JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP5 SHL OR SWAP1 SSTORE JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 DUP7 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP4 DUP1 MLOAD SWAP4 DUP5 GT PUSH2 0x50B JUMPI PUSH2 0x3B2 DUP6 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP3 DUP2 GT PUSH2 0x4D3 JUMPI JUMPDEST POP DUP7 SWAP2 DUP5 GT PUSH1 0x1 EQ PUSH2 0x442 JUMPI SWAP3 DUP1 DUP1 PUSH32 0x2BA41E3E50DD5D36D00A4B9BAB6324EF9FAE734DC40398301B8503405FFF600C SWAP10 SWAP8 SWAP5 PUSH2 0x432 SWAP8 SWAP5 PUSH2 0x425 SWAP11 SWAP8 PUSH1 0x0 SWAP5 PUSH2 0x437 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB SWAP1 DUP6 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST ADD MLOAD SWAP3 POP DUP13 DUP1 PUSH2 0x3FF JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP4 SWAP3 SWAP4 NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4BE JUMPI POP SWAP3 PUSH2 0x425 SWAP9 SWAP6 SWAP3 DUP6 SWAP3 PUSH32 0x2BA41E3E50DD5D36D00A4B9BAB6324EF9FAE734DC40398301B8503405FFF600C SWAP12 SWAP10 SWAP7 PUSH2 0x432 SWAP10 SWAP7 LT PUSH2 0x4A5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x411 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x498 JUMP JUMPDEST DUP3 DUP5 ADD MLOAD DUP6 SSTORE SWAP4 DUP7 ADD SWAP4 SWAP3 DUP10 ADD SWAP3 DUP10 ADD PUSH2 0x458 JUMP JUMPDEST PUSH2 0x4FC SWAP1 DUP7 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP12 DUP10 LT PUSH2 0x502 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP10 PUSH2 0x3BA JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x4F1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP12 PUSH2 0x37C JUMP JUMPDEST DUP6 SWAP3 POP PUSH1 0x1F NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP11 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP13 DUP13 DUP4 DUP4 LT PUSH2 0x579 JUMPI POP POP POP DUP4 GT PUSH2 0x560 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x38F JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x554 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x541 JUMP JUMPDEST PUSH2 0x5B6 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH2 0x502 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP DUP10 ADD MLOAD DUP12 PUSH2 0x32A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE DUP11 DUP2 KECCAK256 DUP8 SWAP5 POP SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND SWAP1 DUP13 DUP15 JUMPDEST DUP4 DUP4 LT PUSH2 0x613 JUMPI POP POP POP DUP4 GT PUSH2 0x5FA JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x33D JUMP JUMPDEST DUP12 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 PUSH2 0x5EE JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP10 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD DUP13 DUP15 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x652 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP7 LT PUSH2 0x502 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x6C2 SWAP4 PUSH2 0x69C SWAP3 PUSH2 0x68B PUSH1 0xFF DUP5 DUP8 DUP12 DUP2 SWAP8 PUSH2 0x679 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH1 0xFF NOT SWAP5 DUP6 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP12 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 DUP2 DUP2 DUP8 DUP2 DUP1 PUSH2 0x2E1 JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x6F7 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x711 CALLER DUP4 DUP6 AND EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x729 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH2 0x779 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x798 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x7B8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x7D8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xD4 JUMPI PUSH2 0x7F8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP2 SWAP1 PUSH2 0x813 SWAP1 DUP7 AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x82C PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH2 0xDD4 JUMPI PUSH2 0x860 PUSH1 0xFF PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0x84C DUP13 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST PUSH1 0x3 DUP2 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x159A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x86D DUP3 PUSH2 0x1369 JUMP JUMPDEST DUP4 DUP3 MSTORE DUP3 PUSH1 0x20 DUP4 ADD MSTORE DUP7 PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE DUP5 DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI DUP2 SWAP1 PUSH2 0x8BE DUP6 SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xDA2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xD36 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xD2B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI DUP2 SWAP1 PUSH2 0x918 PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xCF6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xC84 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xC79 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI DUP2 SWAP1 PUSH2 0x975 PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xC44 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xBD2 JUMPI PUSH1 0x0 SWAP3 PUSH2 0xBC7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI PUSH2 0x9D0 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x132F JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0xB87 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xB12 JUMPI SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xB07 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH2 0xA30 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x4 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x2 SLOAD SWAP3 PUSH9 0x10000000000000000 DUP5 LT ISZERO PUSH2 0x50B JUMPI PUSH32 0xC5D1941EAE357372BC3EACC7D6F759F515B8152B4D592A813C31368E8737E52F SWAP5 PUSH2 0xAF7 PUSH2 0x432 SWAP4 PUSH2 0xAA9 DUP5 PUSH2 0xA8A DUP10 PUSH1 0x1 PUSH2 0xAE9 SWAP12 ADD PUSH1 0x2 SSTORE PUSH2 0x12CC JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0xAC0 DUP14 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP2 DUP5 DUP4 SUB PUSH1 0x40 DUP7 ADD MSTORE AND SWAP6 PUSH2 0x146E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x9F9 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0xB6F JUMPI POP SWAP3 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xB56 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xA11 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0xB46 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0xB23 JUMP JUMPDEST PUSH2 0xBB7 SWAP1 PUSH1 0x3 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP10 PUSH2 0x9D9 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0xBAA JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x995 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xC29 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xC10 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0x9AD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xC00 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0xC73 SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x97E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x938 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xCDB JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xCC2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0x950 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xCB2 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xC97 JUMP JUMPDEST PUSH2 0xD25 SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x921 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x8DE JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0xD87 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0xD6E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0x8F3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0xD61 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xD46 JUMP JUMPDEST PUSH2 0xDCE SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0xBBD JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x15E6 JUMP JUMPDEST DUP11 PUSH2 0x8C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F66666963657220616C72656164792065786973747320666F72207468697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x61646472657373 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xD4 JUMPI PUSH2 0xE43 PUSH2 0x1319 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 SWAP2 PUSH2 0xE5E SWAP1 DUP4 AND CALLER EQ PUSH2 0x1544 JUMP JUMPDEST AND SWAP1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP3 DUP4 DUP2 MSTORE PUSH2 0xE7B PUSH2 0x1DA PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE DUP4 DUP2 MSTORE PUSH1 0x2 PUSH2 0xE93 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP4 MSTORE DUP6 PUSH2 0xEA9 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x13A5 JUMP JUMPDEST SWAP5 DUP5 PUSH2 0xEBE PUSH1 0x40 MLOAD SWAP6 DUP7 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x144B JUMP JUMPDEST DUP5 ADD SWAP4 DUP6 DUP2 PUSH1 0x3 SWAP7 DUP8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 SWAP2 JUMPDEST PUSH2 0xF57 JUMPI JUMPDEST POP POP DUP5 SWAP6 PUSH2 0xF3B PUSH1 0x0 SWAP4 PUSH2 0xF34 PUSH1 0x5 SWAP5 PUSH32 0x814BF979C9F7F89608EC350A486866636EC790BBDA23EDA1AD00DA146CD62ECB SWAP10 DUP8 MSTORE DUP5 DUP9 MSTORE PUSH2 0xF2D PUSH1 0x40 DUP9 KECCAK256 SWAP6 PUSH2 0xF26 DUP8 PUSH2 0x1642 JUMP JUMPDEST DUP7 ADD PUSH2 0x1642 JUMP JUMPDEST DUP5 ADD PUSH2 0x1642 JUMP JUMPDEST DUP3 ADD PUSH2 0x1642 JUMP JUMPDEST DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE PUSH2 0x432 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST DUP3 SLOAD DUP1 DUP4 LT ISZERO PUSH2 0x1049 JUMPI DUP8 DUP3 PUSH2 0xF6C DUP6 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP9 SHL SHR AND EQ PUSH2 0xFA2 JUMPI POP PUSH1 0x0 NOT DUP3 EQ PUSH2 0xF8C JUMPI DUP8 DUP1 SWAP3 ADD SWAP2 PUSH2 0xED9 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP9 SWAP3 SWAP2 SWAP4 SWAP5 SWAP8 SWAP9 NOT SWAP2 DUP3 DUP3 ADD SWAP2 DUP3 GT PUSH2 0xF8C JUMPI PUSH2 0xA8A DUP6 PUSH2 0xFC7 PUSH2 0xFD4 SWAP5 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP13 SHL SHR AND SWAP2 PUSH2 0x12CC JUMP JUMPDEST DUP4 SLOAD SWAP7 DUP8 ISZERO PUSH2 0x1033 JUMPI PUSH2 0xF34 PUSH1 0x0 SWAP6 PUSH1 0x5 SWAP6 PUSH2 0xF3B SWAP5 PUSH32 0x814BF979C9F7F89608EC350A486866636EC790BBDA23EDA1AD00DA146CD62ECB SWAP12 ADD SWAP1 PUSH2 0x1017 DUP3 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 DUP8 SHL SHL NOT AND SWAP1 SSTORE DUP2 SSTORE SWAP5 POP POP SWAP4 POP DUP2 SWAP8 SWAP7 POP PUSH2 0xEDE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xEDE JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1070 PUSH2 0x1319 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x1089 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x132F JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x10B4 PUSH2 0x1319 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x10CE DUP2 PUSH2 0x1369 JUMP JUMPDEST PUSH2 0x10D7 DUP3 PUSH2 0x13A5 JUMP JUMPDEST DUP2 MSTORE PUSH2 0x1143 PUSH2 0x10E8 PUSH1 0x1 DUP5 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH2 0x10FC PUSH1 0x2 DUP6 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP4 PUSH1 0x40 DUP3 ADD SWAP5 DUP6 MSTORE PUSH2 0x1110 PUSH1 0x3 DUP3 ADD PUSH2 0x13A5 JUMP JUMPDEST DUP1 PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND ISZERO ISZERO SWAP3 DUP4 PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD SWAP3 DUP4 PUSH1 0xA0 DUP3 ADD MSTORE MLOAD SWAP5 MLOAD SWAP6 MLOAD PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1493 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1168 PUSH2 0x1319 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x117F DUP2 PUSH2 0x13A5 JUMP JUMPDEST PUSH2 0x1143 PUSH2 0x118E PUSH1 0x1 DUP5 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP3 PUSH2 0x119B PUSH1 0x2 DUP3 ADD PUSH2 0x13A5 JUMP JUMPDEST SWAP1 PUSH2 0x11A8 PUSH1 0x3 DUP3 ADD PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x5 PUSH1 0xFF PUSH1 0x4 DUP5 ADD SLOAD AND SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x1493 JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x2 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x126D JUMPI DUP7 DUP7 PUSH2 0x1224 DUP3 DUP9 SUB DUP4 PUSH2 0x1384 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x124D JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x123E JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x120E JUMP JUMPDEST CALLVALUE PUSH2 0xD4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0xD4 JUMPI PUSH2 0x12B3 PUSH1 0x20 SWAP2 PUSH2 0x12CC JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x1303 JUMPI PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD4 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x135F JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1349 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x133E JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x50B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x13B9 DUP5 PUSH2 0x132F JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1428 JUMPI POP PUSH1 0x1 EQ PUSH2 0x13E5 JUMPI JUMPDEST POP POP PUSH2 0x13E3 SWAP3 POP SUB DUP4 PUSH2 0x1384 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1410 JUMPI POP POP PUSH2 0x13E3 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13D5 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x13F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x13E3 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x13D5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x145E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x144E JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1487 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x144B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x14D4 SWAP1 PUSH2 0x14C6 PUSH2 0x14E2 SWAP5 PUSH2 0x14B8 PUSH1 0xA0 SWAP9 SWAP6 SWAP12 SWAP11 SWAP10 SWAP12 PUSH1 0xC0 DUP10 MSTORE PUSH1 0xC0 DUP10 ADD SWAP1 PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x20 DUP10 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x146E JUMP JUMPDEST SWAP5 ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xD4 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1522 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1384 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xD4 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x154B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x15A1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365726E616D6520616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x15F1 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x15E6 JUMP JUMPDEST ISZERO PUSH2 0x1604 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x13D9999A58D95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x164C DUP2 SLOAD PUSH2 0x132F JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1656 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x1668 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x1687 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x15E6 JUMP JUMPDEST SSTORE SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE 0xD7 0xF8 SSTORE 0xD8 JUMP 0xDE 0xD6 0x2A 0xFC NOT 0xBF 0xC6 MULMOD 0xCC 0xE1 0xBE 0xDE 0xF7 0xDC 0xDB PUSH8 0x9DFBF0385CE6C8DD 0xBD PUSH27 0x64736F6C6343000814003300000000000000000000000000000000 ","sourceMap":"164:6606:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;6242:16;164:6606;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;:::i;:::-;;;;;;;;;;;;;4847:45;164:6606;4789:43;164:6606;;;;;;;;1126:65;164:6606;;;;1134:10;:19;1126:65;:::i;:::-;164:6606;;;;;;;;1275:79;164:6606;;;;;;:::i;:::-;1283:44;;1275:79;:::i;:::-;164:6606;;;;;;;;;;4789:32;164:6606;;;;;;;;;;;;;;;4789:43;164:6606;;;;;4847:45;164:6606;;;;;;;-1:-1:-1;;164:6606:10;;;;;;:::i;:::-;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;164:6606:10;1126:65;;164:6606;;1134:10;:19;1126:65;:::i;:::-;164:6606;;;;;;;;;;;;1275:79;164:6606;;;;;;:::i;1275:79::-;164:6606;;;;;;;2945:32;164:6606;;;2945:32;164:6606;:::i;:::-;;;;;;;;3070:33;;;164:6606;;;;;;3107:26;;;;3070:63;3066:253;;164:6606;;;;;;;;;;;;;;;;;3337:28;164:6606;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;;;;;;;;;2945:32;164:6606;;;3382:32;164:6606;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;3435:29;164:6606;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3496:45;164:6606;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;3496:45;;;164:6606;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3496:45;164:6606;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;164:6606:10;;-1:-1:-1;;164:6606:10;;;;;;;;;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3066:253;164:6606;;;;3149:61;164:6606;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;3157:25;3149:61;:::i;:::-;164:6606;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3066:253;;;;;;;;164:6606;;;;;;-1:-1:-1;;164:6606:10;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;164:6606:10;1126:65;1134:10;164:6606;;;1134:19;1126:65;:::i;:::-;164:6606;6693:22;;;164:6606;;-1:-1:-1;;;;;;164:6606:10;;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;:::i;:::-;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;164:6606:10;;;1126:65;;164:6606;;1134:10;:19;1126:65;:::i;:::-;164:6606;;;;;;;;;;;;;;:::i;:::-;;;2013:61;164:6606;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;2021:25;2013:61;:::i;:::-;164:6606;;;;;;:::i;:::-;;;;2119:189;164:6606;2119:189;;164:6606;2119:189;164:6606;2119:189;;164:6606;;2119:189;;164:6606;;;2119:189;;164:6606;2282:15;164:6606;2119:189;;164:6606;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:189;;164:6606;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:189;;164:6606;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:189;;164:6606;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:189;;164:6606;;;;;;;;;;;;;;;;;;;;;;2119:189;164:6606;;;;;;;;;;;;;2428:47;164:6606;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;164:6606:10;;;1126:65;;164:6606;;1134:10;:19;1126:65;:::i;:::-;164:6606;;;;;;;;;;1275:79;164:6606;;;;;;:::i;1275:79::-;164:6606;;;;;;3788:32;164:6606;;;;;3788:32;164:6606;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4024:337;164:6606;;;4024:337;164:6606;;;;;;;;;;4464:33;164:6606;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;4070:3::-;164:6606;;4041:27;;;;;;4093:19;;;;;:::i;:::-;164:6606;;;;;;;4093:36;4089:262;;-1:-1:-1;;;164:6606:10;;;;;;;;4029:10;;;164:6606;;;;;;;;;;;;4089:262;164:6606;;;;;;;;;;;;;;;;;;4206:19;4228:45;;4206:67;4228:45;;:::i;:::-;164:6606;;;;;;;4206:19;;:::i;:67::-;164:6606;;;;;;;;;;;;;;4464:33;164:6606;;;;;;:::i;:::-;;;;;;;;;;;;;;;4331:5;;;;;;;;;;;164:6606;;;;;;;;;;;;4041:27;;;;164:6606;;;;;;-1:-1:-1;;164:6606:10;;;;-1:-1:-1;;;;;164:6606:10;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;6008:44;;164:6606;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;-1:-1:-1;;;;;164:6606:10;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5574:10;5598:12;;5624:16;;164:6606;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;-1:-1:-1;;;;;164:6606:10;;:::i;:::-;;;;;;;;;;448:43;;;:::i;:::-;164:6606;448:43;164:6606;448:43;;;:::i;:::-;;;;;;;:::i;:::-;;;164:6606;448:43;;;:::i;:::-;;164:6606;;448:43;;164:6606;;448:43;;164:6606;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;164:6606:10;;;;;;;6472:16;164:6606;;;;;;;;;;6472:16;164:6606;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;;562:33;164:6606;562:33;;;;;;164:6606;562:33;;:::i;:::-;164:6606;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;562:33;164:6606;;;;;;562:33;-1:-1:-1;164:6606:10;;;;-1:-1:-1;164:6606:10;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;:::o;:::-;;;;;;-1:-1:-1;164:6606:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;164:6606:10;;;;-1:-1:-1;164:6606:10;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;164:6606:10;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;164:6606:10;;;;;;;;;;;-1:-1:-1;;164:6606:10;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;164:6606:10;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;-1:-1:-1;;;164:6606:10;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o"},"methodIdentifiers":{"addOfficer(address,string,string,string,string)":"728576d1","admin()":"f851a440","getAllOfficerAddresses()":"06296328","getOfficer(address)":"1e572c0f","getOfficerCount()":"e935a2f5","isOfficer(address)":"6816442d","officerAddresses(uint256)":"04e82d29","officers(address)":"084866dd","removeOfficer(address)":"719a0f8c","setOfficerStatus(address,bool)":"bf9cf4cf","transferAdmin(address)":"75829def","updateOfficer(address,string,string,string)":"9e8d7f54","usernameExists(string)":"f309e3f9"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"OfficerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"OfficerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"OfficerStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"OfficerUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"addOfficer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllOfficerAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getOfficer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOfficerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"isOfficer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"officerAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"officers\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"removeOfficer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"setOfficerStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"updateOfficer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"usernameExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for managing tender officers in the TrustChain system\",\"kind\":\"dev\",\"methods\":{\"addOfficer(address,string,string,string,string)\":{\"details\":\"Add a new officer\",\"params\":{\"email\":\"Officer's email\",\"id\":\"Unique identifier for the officer\",\"name\":\"Officer's name\",\"username\":\"Officer's username\",\"walletAddress\":\"The officer's wallet address\"}},\"getAllOfficerAddresses()\":{\"details\":\"Get all officer addresses\",\"returns\":{\"_0\":\"Array of all officer addresses\"}},\"getOfficer(address)\":{\"details\":\"Get officer details\",\"params\":{\"walletAddress\":\"The officer's wallet address\"},\"returns\":{\"createdAt\":\"Officer creation timestamp\",\"email\":\"Officer email\",\"id\":\"Officer ID\",\"isActive\":\"Officer active status\",\"name\":\"Officer name\",\"username\":\"Officer username\"}},\"getOfficerCount()\":{\"details\":\"Get the total number of officers\",\"returns\":{\"_0\":\"The number of officers\"}},\"isOfficer(address)\":{\"details\":\"Check if an address is an officer\",\"params\":{\"walletAddress\":\"The wallet address to check\"},\"returns\":{\"_0\":\"true if the address is an officer\"}},\"removeOfficer(address)\":{\"details\":\"Remove an officer\",\"params\":{\"walletAddress\":\"The officer's wallet address\"}},\"setOfficerStatus(address,bool)\":{\"details\":\"Change officer active status\",\"params\":{\"isActive\":\"New active status\",\"walletAddress\":\"The officer's wallet address\"}},\"transferAdmin(address)\":{\"details\":\"Transfer admin rights to a new address\",\"params\":{\"newAdmin\":\"The new admin address\"}},\"updateOfficer(address,string,string,string)\":{\"details\":\"Update an existing officer's details\",\"params\":{\"email\":\"New email\",\"name\":\"New name\",\"username\":\"New username\",\"walletAddress\":\"The officer's wallet address\"}}},\"title\":\"OfficerManagement\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/OfficerManagement.sol\":\"OfficerManagement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/OfficerManagement.sol\":{\"keccak256\":\"0x3e05cec74b2ac7c48cd67f4a76b1e7f3a737d02a9f9e0dec9eaae9c6131909f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e61df343604cecf1998f0a88d320732cb2a1b7868ccabd66c084cacc31bee5da\",\"dweb:/ipfs/QmTrxWgZwtW4XG8H7PQSqQL2DaLo7m4Zp5hXPqCPEnt3y4\"]}},\"version\":1}"}},"src/contracts/TenderManagement.sol":{"TenderManagement":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"bidId","type":"string"},{"indexed":false,"internalType":"string","name":"tenderId","type":"string"},{"indexed":false,"internalType":"enum TenderManagement.BidStatus","name":"status","type":"uint8"}],"name":"BidStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"bidId","type":"string"},{"indexed":false,"internalType":"string","name":"tenderId","type":"string"},{"indexed":false,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"bidAmount","type":"uint256"}],"name":"BidSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tenderId","type":"string"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"address","name":"createdBy","type":"address"}],"name":"TenderCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tenderId","type":"string"},{"indexed":false,"internalType":"enum TenderManagement.TenderStatus","name":"status","type":"uint8"}],"name":"TenderStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tenderId","type":"string"},{"indexed":false,"internalType":"string","name":"title","type":"string"},{"indexed":false,"internalType":"enum TenderManagement.TenderStatus","name":"status","type":"uint8"}],"name":"TenderUpdated","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"bids","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"tenderId","type":"string"},{"internalType":"address","name":"bidder","type":"address"},{"internalType":"uint256","name":"bidAmount","type":"uint256"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"enum TenderManagement.BidStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"bidId","type":"string"},{"internalType":"enum TenderManagement.BidStatus","name":"status","type":"uint8"}],"name":"changeBidStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tenderId","type":"string"},{"internalType":"enum TenderManagement.TenderStatus","name":"status","type":"uint8"}],"name":"changeTenderStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tenderId","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"estimatedValue","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"string","name":"category","type":"string"},{"internalType":"string","name":"department","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string[]","name":"documents","type":"string[]"}],"name":"createTender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAllTenderIds","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"bidId","type":"string"}],"name":"getBid","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"tenderId","type":"string"},{"internalType":"address","name":"bidder","type":"address"},{"internalType":"uint256","name":"bidAmount","type":"uint256"},{"internalType":"uint256","name":"submittedAt","type":"uint256"},{"internalType":"enum TenderManagement.BidStatus","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"bidId","type":"string"}],"name":"getBidDocuments","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tenderId","type":"string"}],"name":"getTender","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"estimatedValue","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"address","name":"createdBy","type":"address"},{"internalType":"enum TenderManagement.TenderStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"category","type":"string"},{"internalType":"string","name":"department","type":"string"},{"internalType":"string","name":"location","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tenderId","type":"string"}],"name":"getTenderBids","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTenderCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"tenderId","type":"string"}],"name":"getTenderDocuments","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"userAddress","type":"address"}],"name":"getUserBids","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"bidId","type":"string"},{"internalType":"string","name":"tenderId","type":"string"},{"internalType":"uint256","name":"bidAmount","type":"uint256"},{"internalType":"string[]","name":"documents","type":"string[]"}],"name":"submitBid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"tenderBids","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tenderIds","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"tenders","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"estimatedValue","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"address","name":"createdBy","type":"address"},{"internalType":"enum TenderManagement.TenderStatus","name":"status","type":"uint8"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"category","type":"string"},{"internalType":"string","name":"department","type":"string"},{"internalType":"string","name":"location","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"transferAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"tenderId","type":"string"},{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"estimatedValue","type":"uint256"},{"internalType":"uint256","name":"startDate","type":"uint256"},{"internalType":"uint256","name":"endDate","type":"uint256"},{"internalType":"string","name":"category","type":"string"},{"internalType":"string","name":"department","type":"string"},{"internalType":"string","name":"location","type":"string"},{"internalType":"string[]","name":"documents","type":"string[]"}],"name":"updateTender","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userBids","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523461002857600080546001600160a01b0319163317905561267c908161002e8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301cc650c14611d085780630f9fb38814611cbb578063174f769214611c2c5780632d1faf7c14611be257806333f1f39d1461176957806339c776b614611718578063526f0300146111bc5780635850b3831461119e57806362f058c81461103b5780636759789f1461100157806375829def14610f345780637ebd601914610bbd57806383f668b714610b4757806396ec50c314610ae0578063997b737f14610a1a5780639e27af8714610995578063f7bf8b9e1461058c578063f851a44014610563578063f9853713146104335763fb0998e3146100f857600080fd5b3461042e5761015e6101496101366007602061011336612152565b99899e939b9294996001999e92979698998060a01b036000541633149d8e612263565b8160405193828580945193849201611e26565b6001818301528101030190200154151561247e565b61017760208c8160405193828580945193849201611e26565b810160018152030190209460068601998a54903360018060a01b03831614908115610426575b50156103c9576005999060a01c60ff168a8110156103b35761035e578786610210956101f08f956101e7610207976001600b9f8f906102199f906101e191106122bb565b01612329565b60028c01612329565b60038a015560048901558a88015560088701612329565b60098501612329565b600a8301612329565b0190805192600160401b8411610348578254908484558185106102d4575b50506020019060005260206000206000915b8383106102b7577f5f33dd4ac582710407cc42c7d955eb11c3db69506e9d3b22f38b6e2af8cd652b61029988886102b26102a760ff8b5460a01c1692604051958695606087526060870190611f68565b908582036020870152611f68565b916040840190612086565b0390a1005b60016020826102c883945186612329565b01920192019190610249565b8360005284602060002092830192015b8281106102f15750610237565b806102fe60019254611e61565b8061030b575b50016102e4565b601f908181118414610324575050600081555b38610304565b61033f600092848452602084209201861c8201858301612312565b8183555561031e565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602760248201527f43616e206f6e6c79207570646174652074656e6465727320696e2044726166746044820152662073746174757360c81b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79207468652063726561746f72206f722061646d696e2063616e20757060448201526e3230ba32903a3432903a32b73232b960891b6064820152608490fd5b90503861019d565b600080fd5b3461042e57602036600319011261042e576004356001600160401b03811161042e5760206104686104a9923690600401611dd0565b60405190610498600482519385818186019661048581838a611e26565b81016003815203019020015415156124da565b604051938492839251928391611e26565b810160038152030190206040516104bf81611d78565b6104c882611e9b565b81526104d660018301611e9b565b906020810191825260018060a01b0390816002850154169360408201948552600381015492606083019384526004820154926080810193845260ff6005840154169260a082019360048110156103b3578452610534906006016125b1565b60c08201525194519551169251915190519160048310156103b35761055f9360405196879687612224565b0390f35b3461042e57600036600319011261042e576000546040516001600160a01b039091168152602090f35b3461042e57604036600319011261042e576004356001600160401b03811161042e576105bc903690600401611dd0565b6024803560058082101561042e5760018060a01b039283600054163314916105e383612263565b6040519461062b87805161061a60078a6020809c8180970195610607818389611e26565b810160018152030190200154151561247e565b604051809381928c51928391611e26565b81016001815203019020906006820194855491339083161490811561098d575b501561093157600186036107715760a01c60ff168281101561075c5761070d57015442116106b35750916102b28261069660008051602061262783398151915296946106aa9661242d565b604051948594604086526040860190611f68565b92840190612086565b83602e6084926040519262461bcd60e51b845260048401528201527f43616e6e6f74207075626c69736820612074656e64657220746861742068617360448201526d08185b1c9958591e48195b99195960921b6064820152fd5b60405162461bcd60e51b8152600481018790526022818501527f43616e206f6e6c79207075626c6973682066726f6d2044726166742073746174604482015261757360f01b6064820152608490fd5b83634e487b7160e01b60005260216004526000fd5b9050600285036108175760a01c60ff1690811015610802576001036107b35750916102b28261069660008051602061262783398151915296946106aa9661242d565b836084916040519162461bcd60e51b83526004830152808201527f43616e206f6e6c7920636c6f73652066726f6d205075626c69736865642073746044820152636174757360e01b6064820152fd5b50634e487b7160e01b60009081526021600452fd5b600385036108a45760a01c60ff1690811015610802576002036108575750916102b28261069660008051602061262783398151915296946106aa9661242d565b8360216084926040519262461bcd60e51b845260048401528201527f43616e206f6e6c792061776172642066726f6d20436c6f7365642073746174756044820152607360f81b6064820152fd5b600485146108d2575b505050916102b28261069660008051602061262783398151915296946106aa9661242d565b60a01c60ff1690811015610802576003146108ee5780806108ad565b83601f6064926040519262461bcd60e51b845260048401528201527f43616e6e6f742063616e63656c20616e20617761726465642074656e646572006044820152fd5b60405162461bcd60e51b815260048101889052602f818601527f4f6e6c79207468652063726561746f72206f722061646d696e2063616e20636860448201526e616e6765207468652073746174757360881b6064820152608490fd5b90508961064b565b3461042e57602036600319011261042e576004356001600160401b03811161042e5760206101366109ca923690600401611dd0565b810160038152030190206109dd81611e9b565b61055f6109ec60018401611e9b565b9260018060a01b0360028201541690600381015460ff60056004840154930154169260405196879687612224565b3461042e57602036600319011261042e576004356001600160401b03811161042e576020610136610a4f923690600401611dd0565b81016001815203019020610a6281611e9b565b61055f610a7160018401611e9b565b91610a7e60028501611e9b565b93600381015491600482015490600583015490600684015490600785015492610aa960088701611e9b565b94610ac2600a610abb60098a01611e9b565b9801611e9b565b976040519b8c9b60ff8760a01c169660018060a01b0316958d612093565b3461042e57604036600319011261042e57610af961213c565b6001600160a01b0316600090815260056020526040902080546024359081101561042e57610b2d610b339161055f93611e49565b90611f41565b604051918291602083526020830190611f68565b3461042e57602036600319011261042e576004356001600160401b03811161042e57610bb1600b610ba16020610b8461055f953690600401611dd0565b60405190610498600782519385818186019661060781838a611e26565b81016001815203019020016125b1565b60405191829182611f8d565b3461042e57610bcb36612152565b95610bea60018060a09c9a9c9894989795971b03600054163314612263565b600760405160208181610c038d83815193849201611e26565b810160018152030190200154610eef57610c1e8383106122bb565b60405199610c2b8b611d93565b888b528960208c015260408b015260608a0152608089015260a08801523360c0880152600060e0880152426101008801526101208701526101408601526101608501526101808401526040516020818351610c898183858801611e26565b8101600181520301902092610c9f815185612329565b610cb0602082015160018601612329565b610cc1604082015160028601612329565b606081015160038501556080810151600485015560a08101519360059485820155600681019060018060a01b0360c0840151166bffffffffffffffffffffffff60a01b83541617825560e083015190868210156103b357610d27600b926101809461242d565b6101008401516007820155610d4461012085015160088301612329565b610d5661014085015160098301612329565b610d68610160850151600a8301612329565b0191015190815191600160401b9586841161034857825490848455818510610e7b575b50506020019060005260206000206000915b838310610e5e575050505060025492831015610348576001830180600255831015610e4857610e3d610e2f92610e1b837f0540e31cb45c1b4f21657a7522027a48ff2ec55cd0711035075c1f9e8faad5649660026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01612329565b604051938493606085526060850190611f68565b908382036020850152611f68565b3360408301520390a1005b634e487b7160e01b600052603260045260246000fd5b6001602082610e6f83945186612329565b01920192019190610d9d565b8360005284602060002092830192015b828110610e985750610d8b565b80610ea560019254611e61565b80610eb2575b5001610e8b565b601f908181118414610ecb575050600081555b8a610eab565b610ee6600092848452602084209201861c8201858301612312565b81835555610ec5565b60405162461bcd60e51b815260206004820152601860248201527f54656e64657220494420616c72656164792065786973747300000000000000006044820152606490fd5b3461042e57602036600319011261042e57610f4d61213c565b600054906001600160a01b03908183163303610fb25716908115610f7b576001600160a01b03191617600055005b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b3461042e57602036600319011261042e576001600160a01b0361102261213c565b16600052600560205261055f610bb160406000206125b1565b3461042e57602036600319011261042e576004356001600160401b03811161042e576020610b84611070923690600401611dd0565b8101600181520301902060405161108681611d93565b61108f82611e9b565b815261109d60018301611e9b565b90602081019182526110b160028401611e9b565b9260408201938452600381015490606083019182526004810154926080810193845260058201549360a0820194855260068301549060c0830160ff60018060a01b0393848116835260a01c169060e085019160058110156103b3578252600786015497610100860198895261112860088801611e9b565b94610120870195865261113d60098901611e9b565b966101408101978852611166600b611157600a8c01611e9b565b9a61016084019b8c52016125b1565b610180820152519a519b5198519451915192511692519360058510156103b35761055f9951955196519751986040519c8d9c8d612093565b3461042e57600036600319011261042e576020600254604051908152f35b3461042e57604036600319011261042e576004356001600160401b03811161042e576111ec903690600401611dd0565b6024908135600481101561042e576000546004906001600160a01b03908116331461121681612263565b611248604051865161123760209683888095818d0195610485818389611e26565b604051809381928a51928391611e26565b81016003815203019020906001908183019360405160009087875461126c81611e61565b9087811690811561170357506001146116ca575b508183876006955203019020019182549133908316149081156116c2575b501561165f578683036114055750905060ff60058301541660048110156113f05761139b575460a01c60ff1660058110156113865760020361133257600080516020612607833981519152955083926102b29261130661131a97966005611327955b016124c2565b604051968796606088526060880190611f68565b918683039087015261251b565b916040840190612217565b60405162461bcd60e51b8152600481018490526027818801527f54656e646572206d75737420626520636c6f73656420746f2073686f72746c696044820152667374206269647360c81b6064820152608490fd5b86634e487b7160e01b60005260216004526000fd5b60405162461bcd60e51b8152600481018590526028818901527f43616e206f6e6c792073686f72746c6973742066726f6d205375626d69747465604482015267642073746174757360c01b6064820152608490fd5b87634e487b7160e01b60005260216004526000fd5b600287036114b857505060ff6005830154169060048210156113f05781159182156114ae575b50501561145c57600080516020612607833981519152955083926102b29261130661131a9796600561132795611300565b60405162461bcd60e51b8152600481018490526025818801527f496e76616c696420737461747573207472616e736974696f6e20746f2052656a6044820152641958dd195960da1b6064820152608490fd5b149050878061142b565b9091600387146114f0575b505050600080516020612607833981519152955083926102b29261130661131a9796600561132795611300565b60ff600585015416600481101561164a57036115f75760ff8160a01c1660058110156115e257600203611592576000805160206126078339815191529750926113068660056113279561131a9a9998956102b298600360a01b9060ff60a01b19161790556000805160206126278339815191526040516040815280611578604082018961251b565b60038a8301520390a19550505082959697508194506114c3565b60405162461bcd60e51b8152600481018690526023818a01527f54656e646572206d75737420626520636c6f73656420746f206177617264206260448201526269647360e81b6064820152608490fd5b88634e487b7160e01b60005260216004526000fd5b60405162461bcd60e51b8152600481018690526026818a01527f43616e206f6e6c792061776172642066726f6d2053686f72746c69737465642060448201526573746174757360d01b6064820152608490fd5b89634e487b7160e01b60005260216004526000fd5b60405162461bcd60e51b8152600481018790526036818b01527f4f6e6c79207468652074656e6465722063726561746f72206f722061646d696e6044820152752063616e206368616e6765206269642073746174757360501b6064820152608490fd5b90508a61129e565b909192508760005281600020866000915b8383106116ef575050508201919081611280565b8054838701528b94909201918891016116db565b60ff1916845250801515028201925081611280565b3461042e57602036600319011261042e5760043560025481101561042e57610b3361055f9160026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01611e9b565b3461042e57608036600319011261042e576001600160401b0360043581811161042e5761179a903690600401611dd0565b906024803582811161042e576117b4903690600401611dd0565b6044359260643590811161042e576117d0903690600401612006565b6040518251906020946118056007878701946117ed818688611e26565b8401938881600196878152030190200154151561247e565b6040519360048951958881818d019861181f81838c611e26565b810160038152030190200154611ba6576040518781885161184181838a611e26565b8101868152030190209460ff600687015460a01c169560059687811015611b91578503611b4d5760048101544210611afe578601544211611aba57896040519161188a83611d78565b8183528a8a6118f18186018c81526118e86118d6604089019433865260608a0196875260808a019742895260a08b019960008b5260c08c019c8d52604051938492839251928391611e26565b81016003815203019020975188612329565b51898701612329565b600285019060018060a01b039051166bffffffffffffffffffffffff60a01b82541617905551600384015551600483015551600481101561075c579061193b6006928883016124c2565b019051805192600160401b8411611aa6575087908254848455808510611a28575b500190600052866000206000915b838310611a0d577f589214396aefe501bdb858bb39086111764f18b0ca160c140f42dd4a0009ac916119ef8c8c6119fc8d8d8d6119c7868f856119b891604051809381928951928391611e26565b81016004815203019020612451565b3360005282526119db856040600020612451565b604051958695608087526080870190611f68565b9185830390860152611f68565b9033604084015260608301520390a1005b848982611a1c83945186612329565b0192019201919061196a565b8360005285858460002092830192015b828110611a4657505061195c565b9091929350611a558154611e61565b80611a67575b500190858a9392611a38565b601f908c828211600114611a8357505050600081555b8d611a5b565b600092611a9d91858552842092018c1c8201858301612312565b81835555611a7d565b634e487b7160e01b60009081526041600452fd5b60405162461bcd60e51b8152600481018990526018818501527f54656e6465722062696464696e672068617320656e64656400000000000000006044820152606490fd5b60405162461bcd60e51b8152600481018a90526022818601527f54656e6465722062696464696e6720686173206e6f7420737461727465642079604482015261195d60f21b6064820152608490fd5b60405162461bcd60e51b8152600481018a9052601e818601527f54656e646572206973206e6f74206f70656e20666f722062696464696e6700006044820152606490fd5b84634e487b7160e01b60005260216004526000fd5b60405162461bcd60e51b8152600481018890526015818401527442696420494420616c72656164792065786973747360581b6044820152606490fd5b3461042e57602036600319011261042e576004356001600160401b03811161042e57610bb1611c1d6020610b8461055f943690600401611dd0565b810160048152030190206125b1565b3461042e57600036600319011261042e57600254611c4981611fef565b611c566040519182611daf565b81815260209182820160026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000915b838310611c9f576040518061055f8782611f8d565b6001828192611cad89611e9b565b815201960192019194611c8a565b3461042e57602036600319011261042e576004356001600160401b03811161042e57610bb16006611cf8602061046861055f953690600401611dd0565b81016003815203019020016125b1565b3461042e57604036600319011261042e576004356001600160401b03811161042e57611d38903690600401611dd0565b611d546020602435928160405193828580945193849201611e26565b8101600481520301902090815481101561042e57610b2d610b339161055f93611e49565b60e081019081106001600160401b0382111761034857604052565b6101a081019081106001600160401b0382111761034857604052565b90601f801991011681019081106001600160401b0382111761034857604052565b81601f8201121561042e578035906001600160401b0382116103485760405192611e04601f8401601f191660200185611daf565b8284526020838301011161042e57816000926020809301838601378301015290565b60005b838110611e395750506000910152565b8181015183820152602001611e29565b8054821015610e485760005260206000200190600090565b90600182811c92168015611e91575b6020831014611e7b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611e70565b9060405191826000825492611eaf84611e61565b908184526001948581169081600014611f1e5750600114611edb575b5050611ed992500383611daf565b565b9093915060005260209081600020936000915b818310611f06575050611ed993508201013880611ecb565b85548884018501529485019487945091830191611eee565b915050611ed994506020925060ff191682840152151560051b8201013880611ecb565b90611f5257611f4f90611e9b565b90565b634e487b7160e01b600052600060045260246000fd5b90602091611f8181518092818552858086019101611e26565b601f01601f1916010190565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310611fc15750505050505090565b9091929394958480611fdf600193603f198682030187528a51611f68565b9801930193019194939290611fb1565b6001600160401b0381116103485760051b60200190565b9080601f8301121561042e5781359061201e82611fef565b9261202c6040519485611daf565b828452602092838086019160051b8301019280841161042e57848301915b84831061205a5750505050505090565b82356001600160401b03811161042e57869161207b84848094890101611dd0565b81520192019161204a565b9060058210156103b35752565b9a979195611f4f9c9a9561212d9a9560606120e58f9a976120d78c61210a9a61211e9f996120c990610180808552840190611f68565b916020818403910152611f68565b8c810360408e015290611f68565b99015260808d015260a08c01526001600160a01b031660c08b015260e08a0190612086565b610100880152868203610120880152611f68565b90848203610140860152611f68565b91610160818403910152611f68565b600435906001600160a01b038216820361042e57565b9061014060031983011261042e5760048035926001600160401b039384811161042e5781612181918401611dd0565b9360243581811161042e5782612198918501611dd0565b9360443582811161042e57836121af918601611dd0565b93606435936084359360a4359360c43582811161042e57836121d2918601611dd0565b9360e43583811161042e57846121e9918301611dd0565b936101043584811161042e5781612201918401611dd0565b936101243590811161042e57611f4f9201612006565b9060048210156103b35752565b919361224560a094989795610299611ed9989460c0875260c0870190611f68565b97600180861b03166040840152606083015260808201520190612217565b1561226a57565b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c79206f666669636572732063616e2063616c6c20746869732066756e636044820152633a34b7b760e11b6064820152608490fd5b156122c257565b60405162461bcd60e51b815260206004820152602260248201527f53746172742064617465206d757374206265206265666f726520656e64206461604482015261746560f01b6064820152608490fd5b81811061231d575050565b60008155600101612312565b91909182516001600160401b038111610348576123468254611e61565b601f81116123f0575b50602080601f831160011461238c575081929394600092612381575b50508160011b916000199060031b1c1916179055565b01519050388061236b565b90601f198316958460005282600020926000905b8882106123d8575050836001959697106123bf575b505050811b019055565b015160001960f88460031b161c191690553880806123b5565b806001859682949686015181550195019301906123a0565b61241d90836000526020600020601f840160051c81019160208510612423575b601f0160051c0190612312565b3861234f565b9091508190612410565b9060058110156103b357815460ff60a01b191660a09190911b60ff60a01b16179055565b8054600160401b8110156103485761246e91600182018155611e49565b919091611f5257611ed991612329565b1561248557565b60405162461bcd60e51b815260206004820152601560248201527415195b99195c88191bd95cc81b9bdd08195e1a5cdd605a1b6044820152606490fd5b9060048110156103b35760ff80198354169116179055565b156124e157565b60405162461bcd60e51b8152602060048201526012602482015271109a5908191bd95cc81b9bdd08195e1a5cdd60721b6044820152606490fd5b906000929180549161252c83611e61565b91828252600193848116908160001461258e575060011461254e575b50505050565b90919394506000526020928360002092846000945b83861061257a575050505001019038808080612548565b805485870183015294019385908201612563565b9294505050602093945060ff191683830152151560051b01019038808080612548565b9081546125bd81611fef565b926125cb6040519485611daf565b818452600090815260208082208186015b8484106125ea575050505050565b60018381926125f885611e9b565b8152019201930192906125dc56fe6b65c6d5f7b922b9e476d69513675de9e14194d8d07e3497bd427fd695866177162fce656cd34b1fd506c44ef9fd09e7939a5c94a678a14c6055668cdd8aa38ea26469706673582212205d623bf3af70d0cf2cbda92971d5cac6749a13481538593f0997b66cbd216c5164736f6c63430008140033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x28 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x267C SWAP1 DUP2 PUSH2 0x2E DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1CC650C EQ PUSH2 0x1D08 JUMPI DUP1 PUSH4 0xF9FB388 EQ PUSH2 0x1CBB JUMPI DUP1 PUSH4 0x174F7692 EQ PUSH2 0x1C2C JUMPI DUP1 PUSH4 0x2D1FAF7C EQ PUSH2 0x1BE2 JUMPI DUP1 PUSH4 0x33F1F39D EQ PUSH2 0x1769 JUMPI DUP1 PUSH4 0x39C776B6 EQ PUSH2 0x1718 JUMPI DUP1 PUSH4 0x526F0300 EQ PUSH2 0x11BC JUMPI DUP1 PUSH4 0x5850B383 EQ PUSH2 0x119E JUMPI DUP1 PUSH4 0x62F058C8 EQ PUSH2 0x103B JUMPI DUP1 PUSH4 0x6759789F EQ PUSH2 0x1001 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0xF34 JUMPI DUP1 PUSH4 0x7EBD6019 EQ PUSH2 0xBBD JUMPI DUP1 PUSH4 0x83F668B7 EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0x96EC50C3 EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x997B737F EQ PUSH2 0xA1A JUMPI DUP1 PUSH4 0x9E27AF87 EQ PUSH2 0x995 JUMPI DUP1 PUSH4 0xF7BF8B9E EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xF9853713 EQ PUSH2 0x433 JUMPI PUSH4 0xFB0998E3 EQ PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH2 0x15E PUSH2 0x149 PUSH2 0x136 PUSH1 0x7 PUSH1 0x20 PUSH2 0x113 CALLDATASIZE PUSH2 0x2152 JUMP JUMPDEST SWAP10 DUP10 SWAP15 SWAP4 SWAP12 SWAP3 SWAP5 SWAP10 PUSH1 0x1 SWAP10 SWAP15 SWAP3 SWAP8 SWAP7 SWAP9 SWAP10 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER EQ SWAP14 DUP15 PUSH2 0x2263 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH2 0x177 PUSH1 0x20 DUP13 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP5 PUSH1 0x6 DUP7 ADD SWAP10 DUP11 SLOAD SWAP1 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x426 JUMPI JUMPDEST POP ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x5 SWAP10 SWAP1 PUSH1 0xA0 SHR PUSH1 0xFF AND DUP11 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x35E JUMPI DUP8 DUP7 PUSH2 0x210 SWAP6 PUSH2 0x1F0 DUP16 SWAP6 PUSH2 0x1E7 PUSH2 0x207 SWAP8 PUSH1 0x1 PUSH1 0xB SWAP16 DUP16 SWAP1 PUSH2 0x219 SWAP16 SWAP1 PUSH2 0x1E1 SWAP2 LT PUSH2 0x22BB JUMP JUMPDEST ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 DUP13 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x3 DUP11 ADD SSTORE PUSH1 0x4 DUP10 ADD SSTORE DUP11 DUP9 ADD SSTORE PUSH1 0x8 DUP8 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x9 DUP6 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0xA DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST ADD SWAP1 DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x348 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP5 SSTORE DUP2 DUP6 LT PUSH2 0x2D4 JUMPI JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2B7 JUMPI PUSH32 0x5F33DD4AC582710407CC42C7D955EB11C3DB69506E9D3B22F38B6E2AF8CD652B PUSH2 0x299 DUP9 DUP9 PUSH2 0x2B2 PUSH2 0x2A7 PUSH1 0xFF DUP12 SLOAD PUSH1 0xA0 SHR AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x60 DUP8 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x2086 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0x2C8 DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2329 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x249 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x2F1 JUMPI POP PUSH2 0x237 JUMP JUMPDEST DUP1 PUSH2 0x2FE PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1E61 JUMP JUMPDEST DUP1 PUSH2 0x30B JUMPI JUMPDEST POP ADD PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0x324 JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0x304 JUMP JUMPDEST PUSH2 0x33F PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD DUP7 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2312 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x31E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79207570646174652074656E6465727320696E204472616674 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20737461747573 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652063726561746F72206F722061646D696E2063616E207570 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3230BA32903A3432903A32B73232B9 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x19D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0x468 PUSH2 0x4A9 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x498 PUSH1 0x4 DUP3 MLOAD SWAP4 DUP6 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x485 DUP2 DUP4 DUP11 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x4BF DUP2 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x4C8 DUP3 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4D6 PUSH1 0x1 DUP4 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x2 DUP6 ADD SLOAD AND SWAP4 PUSH1 0x40 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP3 PUSH1 0x60 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x4 DUP3 ADD SLOAD SWAP3 PUSH1 0x80 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x5 DUP5 ADD SLOAD AND SWAP3 PUSH1 0xA0 DUP3 ADD SWAP4 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI DUP5 MSTORE PUSH2 0x534 SWAP1 PUSH1 0x6 ADD PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE MLOAD SWAP5 MLOAD SWAP6 MLOAD AND SWAP3 MLOAD SWAP2 MLOAD SWAP1 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x55F SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x2224 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x5BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x5 DUP1 DUP3 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x0 SLOAD AND CALLER EQ SWAP2 PUSH2 0x5E3 DUP4 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0x62B DUP8 DUP1 MLOAD PUSH2 0x61A PUSH1 0x7 DUP11 PUSH1 0x20 DUP1 SWAP13 DUP2 DUP1 SWAP8 ADD SWAP6 PUSH2 0x607 DUP2 DUP4 DUP10 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP5 DUP6 SLOAD SWAP2 CALLER SWAP1 DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x98D JUMPI JUMPDEST POP ISZERO PUSH2 0x931 JUMPI PUSH1 0x1 DUP7 SUB PUSH2 0x771 JUMPI PUSH1 0xA0 SHR PUSH1 0xFF AND DUP3 DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH2 0x70D JUMPI ADD SLOAD TIMESTAMP GT PUSH2 0x6B3 JUMPI POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP1 PUSH2 0x2086 JUMP JUMPDEST DUP4 PUSH1 0x2E PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207075626C69736820612074656E646572207468617420686173 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x8185B1C9958591E48195B991959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP6 ADD MSTORE PUSH32 0x43616E206F6E6C79207075626C6973682066726F6D2044726166742073746174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7573 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x2 DUP6 SUB PUSH2 0x817 JUMPI PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 DUP2 LT ISZERO PUSH2 0x802 JUMPI PUSH1 0x1 SUB PUSH2 0x7B3 JUMPI POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST DUP4 PUSH1 0x84 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920636C6F73652066726F6D205075626C6973686564207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x61747573 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x3 DUP6 SUB PUSH2 0x8A4 JUMPI PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 DUP2 LT ISZERO PUSH2 0x802 JUMPI PUSH1 0x2 SUB PUSH2 0x857 JUMPI POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST DUP4 PUSH1 0x21 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792061776172642066726F6D20436C6F736564207374617475 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 DUP6 EQ PUSH2 0x8D2 JUMPI JUMPDEST POP POP POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 DUP2 LT ISZERO PUSH2 0x802 JUMPI PUSH1 0x3 EQ PUSH2 0x8EE JUMPI DUP1 DUP1 PUSH2 0x8AD JUMP JUMPDEST DUP4 PUSH1 0x1F PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20616E20617761726465642074656E64657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2F DUP2 DUP7 ADD MSTORE PUSH32 0x4F6E6C79207468652063726561746F72206F722061646D696E2063616E206368 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x616E67652074686520737461747573 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 PUSH2 0x64B JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0x136 PUSH2 0x9CA SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x9DD DUP2 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x55F PUSH2 0x9EC PUSH1 0x1 DUP5 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x2224 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0x136 PUSH2 0xA4F SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0xA62 DUP2 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x55F PUSH2 0xA71 PUSH1 0x1 DUP5 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP2 PUSH2 0xA7E PUSH1 0x2 DUP6 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 DUP4 ADD SLOAD SWAP1 PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH1 0x7 DUP6 ADD SLOAD SWAP3 PUSH2 0xAA9 PUSH1 0x8 DUP8 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP5 PUSH2 0xAC2 PUSH1 0xA PUSH2 0xABB PUSH1 0x9 DUP11 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP9 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP14 PUSH2 0x2093 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH2 0xAF9 PUSH2 0x213C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH2 0xB2D PUSH2 0xB33 SWAP2 PUSH2 0x55F SWAP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0xBB1 PUSH1 0xB PUSH2 0xBA1 PUSH1 0x20 PUSH2 0xB84 PUSH2 0x55F SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x498 PUSH1 0x7 DUP3 MLOAD SWAP4 DUP6 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x607 DUP2 DUP4 DUP11 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1F8D JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH2 0xBCB CALLDATASIZE PUSH2 0x2152 JUMP JUMPDEST SWAP6 PUSH2 0xBEA PUSH1 0x1 DUP1 PUSH1 0xA0 SWAP13 SWAP11 SWAP13 SWAP9 SWAP5 SWAP9 SWAP8 SWAP6 SWAP8 SHL SUB PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0xC03 DUP14 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH2 0xEEF JUMPI PUSH2 0xC1E DUP4 DUP4 LT PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP10 PUSH2 0xC2B DUP12 PUSH2 0x1D93 JUMP JUMPDEST DUP9 DUP12 MSTORE DUP10 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE CALLER PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP9 ADD MSTORE TIMESTAMP PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0xC89 DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP3 PUSH2 0xC9F DUP2 MLOAD DUP6 PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xCB0 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xCC1 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD SWAP4 PUSH1 0x5 SWAP5 DUP6 DUP3 ADD SSTORE PUSH1 0x6 DUP2 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP5 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 DUP7 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0xD27 PUSH1 0xB SWAP3 PUSH2 0x180 SWAP5 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0xD44 PUSH2 0x120 DUP6 ADD MLOAD PUSH1 0x8 DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xD56 PUSH2 0x140 DUP6 ADD MLOAD PUSH1 0x9 DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xD68 PUSH2 0x160 DUP6 ADD MLOAD PUSH1 0xA DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST ADD SWAP2 ADD MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP6 DUP7 DUP5 GT PUSH2 0x348 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP5 SSTORE DUP2 DUP6 LT PUSH2 0xE7B JUMPI JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xE5E JUMPI POP POP POP POP PUSH1 0x2 SLOAD SWAP3 DUP4 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x1 DUP4 ADD DUP1 PUSH1 0x2 SSTORE DUP4 LT ISZERO PUSH2 0xE48 JUMPI PUSH2 0xE3D PUSH2 0xE2F SWAP3 PUSH2 0xE1B DUP4 PUSH32 0x540E31CB45C1B4F21657A7522027A48FF2EC55CD0711035075C1F9E8FAAD564 SWAP7 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST CALLER PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0xE6F DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2329 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0xE98 JUMPI POP PUSH2 0xD8B JUMP JUMPDEST DUP1 PUSH2 0xEA5 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1E61 JUMP JUMPDEST DUP1 PUSH2 0xEB2 JUMPI JUMPDEST POP ADD PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0xECB JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP11 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xEE6 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD DUP7 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2312 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54656E64657220494420616C7265616479206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH2 0xF4D PUSH2 0x213C JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0xFB2 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0xF7B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1022 PUSH2 0x213C JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x55F PUSH2 0xBB1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x25B1 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0xB84 PUSH2 0x1070 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1086 DUP2 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x108F DUP3 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x109D PUSH1 0x1 DUP4 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH2 0x10B1 PUSH1 0x2 DUP5 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x80 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP4 PUSH1 0xA0 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x6 DUP4 ADD SLOAD SWAP1 PUSH1 0xC0 DUP4 ADD PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR AND SWAP1 PUSH1 0xE0 DUP6 ADD SWAP2 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI DUP3 MSTORE PUSH1 0x7 DUP7 ADD SLOAD SWAP8 PUSH2 0x100 DUP7 ADD SWAP9 DUP10 MSTORE PUSH2 0x1128 PUSH1 0x8 DUP9 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP5 PUSH2 0x120 DUP8 ADD SWAP6 DUP7 MSTORE PUSH2 0x113D PUSH1 0x9 DUP10 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP7 PUSH2 0x140 DUP2 ADD SWAP8 DUP9 MSTORE PUSH2 0x1166 PUSH1 0xB PUSH2 0x1157 PUSH1 0xA DUP13 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP11 PUSH2 0x160 DUP5 ADD SWAP12 DUP13 MSTORE ADD PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x180 DUP3 ADD MSTORE MLOAD SWAP11 MLOAD SWAP12 MLOAD SWAP9 MLOAD SWAP5 MLOAD SWAP2 MLOAD SWAP3 MLOAD AND SWAP3 MLOAD SWAP4 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x55F SWAP10 MLOAD SWAP6 MLOAD SWAP7 MLOAD SWAP8 MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x2093 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x11EC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 SLOAD PUSH1 0x4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER EQ PUSH2 0x1216 DUP2 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x1248 PUSH1 0x40 MLOAD DUP7 MLOAD PUSH2 0x1237 PUSH1 0x20 SWAP7 DUP4 DUP9 DUP1 SWAP6 DUP2 DUP14 ADD SWAP6 PUSH2 0x485 DUP2 DUP4 DUP10 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP4 ADD SWAP4 PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 DUP8 DUP8 SLOAD PUSH2 0x126C DUP2 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 DUP8 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x1 EQ PUSH2 0x16CA JUMPI JUMPDEST POP DUP2 DUP4 DUP8 PUSH1 0x6 SWAP6 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP3 SLOAD SWAP2 CALLER SWAP1 DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x16C2 JUMPI JUMPDEST POP ISZERO PUSH2 0x165F JUMPI DUP7 DUP4 SUB PUSH2 0x1405 JUMPI POP SWAP1 POP PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x139B JUMPI SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x2 SUB PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 POP DUP4 SWAP3 PUSH2 0x2B2 SWAP3 PUSH2 0x1306 PUSH2 0x131A SWAP8 SWAP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 JUMPDEST ADD PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x251B JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x27 DUP2 DUP9 ADD MSTORE PUSH32 0x54656E646572206D75737420626520636C6F73656420746F2073686F72746C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x73742062696473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x28 DUP2 DUP10 ADD MSTORE PUSH32 0x43616E206F6E6C792073686F72746C6973742066726F6D205375626D69747465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420737461747573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP8 SUB PUSH2 0x14B8 JUMPI POP POP PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x13F0 JUMPI DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x14AE JUMPI JUMPDEST POP POP ISZERO PUSH2 0x145C JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 POP DUP4 SWAP3 PUSH2 0x2B2 SWAP3 PUSH2 0x1306 PUSH2 0x131A SWAP8 SWAP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x25 DUP2 DUP9 ADD MSTORE PUSH32 0x496E76616C696420737461747573207472616E736974696F6E20746F2052656A PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1958DD1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST EQ SWAP1 POP DUP8 DUP1 PUSH2 0x142B JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x3 DUP8 EQ PUSH2 0x14F0 JUMPI JUMPDEST POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 POP DUP4 SWAP3 PUSH2 0x2B2 SWAP3 PUSH2 0x1306 PUSH2 0x131A SWAP8 SWAP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x164A JUMPI SUB PUSH2 0x15F7 JUMPI PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x2 SUB PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 POP SWAP3 PUSH2 0x1306 DUP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 PUSH2 0x131A SWAP11 SWAP10 SWAP9 SWAP6 PUSH2 0x2B2 SWAP9 PUSH1 0x3 PUSH1 0xA0 SHL SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 MSTORE DUP1 PUSH2 0x1578 PUSH1 0x40 DUP3 ADD DUP10 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x3 DUP11 DUP4 ADD MSTORE SUB SWAP1 LOG1 SWAP6 POP POP POP DUP3 SWAP6 SWAP7 SWAP8 POP DUP2 SWAP5 POP PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x23 DUP2 DUP11 ADD MSTORE PUSH32 0x54656E646572206D75737420626520636C6F73656420746F2061776172642062 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696473 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP11 ADD MSTORE PUSH32 0x43616E206F6E6C792061776172642066726F6D2053686F72746C697374656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x737461747573 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x36 DUP2 DUP12 ADD MSTORE PUSH32 0x4F6E6C79207468652074656E6465722063726561746F72206F722061646D696E PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x2063616E206368616E67652062696420737461747573 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP11 PUSH2 0x129E JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x16EF JUMPI POP POP POP DUP3 ADD SWAP2 SWAP1 DUP2 PUSH2 0x1280 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP8 ADD MSTORE DUP12 SWAP5 SWAP1 SWAP3 ADD SWAP2 DUP9 SWAP2 ADD PUSH2 0x16DB JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP DUP1 ISZERO ISZERO MUL DUP3 ADD SWAP3 POP DUP2 PUSH2 0x1280 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH2 0xB33 PUSH2 0x55F SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD PUSH2 0x1E9B JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x179A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x17B4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x17D0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 MLOAD SWAP1 PUSH1 0x20 SWAP5 PUSH2 0x1805 PUSH1 0x7 DUP8 DUP8 ADD SWAP5 PUSH2 0x17ED DUP2 DUP7 DUP9 PUSH2 0x1E26 JUMP JUMPDEST DUP5 ADD SWAP4 DUP9 DUP2 PUSH1 0x1 SWAP7 DUP8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH1 0x4 DUP10 MLOAD SWAP6 DUP9 DUP2 DUP2 DUP14 ADD SWAP9 PUSH2 0x181F DUP2 DUP4 DUP13 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD DUP8 DUP2 DUP9 MLOAD PUSH2 0x1841 DUP2 DUP4 DUP11 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD DUP7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP5 PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0xA0 SHR AND SWAP6 PUSH1 0x5 SWAP7 DUP8 DUP2 LT ISZERO PUSH2 0x1B91 JUMPI DUP6 SUB PUSH2 0x1B4D JUMPI PUSH1 0x4 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0x1AFE JUMPI DUP7 ADD SLOAD TIMESTAMP GT PUSH2 0x1ABA JUMPI DUP10 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x188A DUP4 PUSH2 0x1D78 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP11 DUP11 PUSH2 0x18F1 DUP2 DUP7 ADD DUP13 DUP2 MSTORE PUSH2 0x18E8 PUSH2 0x18D6 PUSH1 0x40 DUP10 ADD SWAP5 CALLER DUP7 MSTORE PUSH1 0x60 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x80 DUP11 ADD SWAP8 TIMESTAMP DUP10 MSTORE PUSH1 0xA0 DUP12 ADD SWAP10 PUSH1 0x0 DUP12 MSTORE PUSH1 0xC0 DUP13 ADD SWAP13 DUP14 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP8 MLOAD DUP9 PUSH2 0x2329 JUMP JUMPDEST MLOAD DUP10 DUP8 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD PUSH1 0x4 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x75C JUMPI SWAP1 PUSH2 0x193B PUSH1 0x6 SWAP3 DUP9 DUP4 ADD PUSH2 0x24C2 JUMP JUMPDEST ADD SWAP1 MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x1AA6 JUMPI POP DUP8 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x1A28 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1A0D JUMPI PUSH32 0x589214396AEFE501BDB858BB39086111764F18B0CA160C140F42DD4A0009AC91 PUSH2 0x19EF DUP13 DUP13 PUSH2 0x19FC DUP14 DUP14 DUP14 PUSH2 0x19C7 DUP7 DUP16 DUP6 PUSH2 0x19B8 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP10 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x2451 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH2 0x19DB DUP6 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 DUP6 DUP4 SUB SWAP1 DUP7 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST DUP5 DUP10 DUP3 PUSH2 0x1A1C DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2329 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP6 DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x1A46 JUMPI POP POP PUSH2 0x195C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH2 0x1A55 DUP2 SLOAD PUSH2 0x1E61 JUMP JUMPDEST DUP1 PUSH2 0x1A67 JUMPI JUMPDEST POP ADD SWAP1 DUP6 DUP11 SWAP4 SWAP3 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP13 DUP3 DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A83 JUMPI POP POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP14 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x1A9D SWAP2 DUP6 DUP6 MSTORE DUP5 KECCAK256 SWAP3 ADD DUP13 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2312 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x1A7D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x18 DUP2 DUP6 ADD MSTORE PUSH32 0x54656E6465722062696464696E672068617320656E6465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP7 ADD MSTORE PUSH32 0x54656E6465722062696464696E6720686173206E6F7420737461727465642079 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1E DUP2 DUP7 ADD MSTORE PUSH32 0x54656E646572206973206E6F74206F70656E20666F722062696464696E670000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP5 ADD MSTORE PUSH21 0x42696420494420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0xBB1 PUSH2 0x1C1D PUSH1 0x20 PUSH2 0xB84 PUSH2 0x55F SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x25B1 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x2 SLOAD PUSH2 0x1C49 DUP2 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0x1C56 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1DAF JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP3 ADD PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C9F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x55F DUP8 DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x1CAD DUP10 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x1C8A JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0xBB1 PUSH1 0x6 PUSH2 0x1CF8 PUSH1 0x20 PUSH2 0x468 PUSH2 0x55F SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH2 0x25B1 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x1D38 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH2 0x1D54 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH2 0xB2D PUSH2 0xB33 SWAP2 PUSH2 0x55F SWAP4 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x348 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x348 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x348 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x42E JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x348 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E04 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1DAF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x42E JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E39 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E29 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1E91 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1E7B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1EAF DUP5 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1F1E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EDB JUMPI JUMPDEST POP POP PUSH2 0x1ED9 SWAP3 POP SUB DUP4 PUSH2 0x1DAF JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1F06 JUMPI POP POP PUSH2 0x1ED9 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECB JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ED9 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECB JUMP JUMPDEST SWAP1 PUSH2 0x1F52 JUMPI PUSH2 0x1F4F SWAP1 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1F81 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1FC1 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1FDF PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1F68 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x348 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x42E JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x201E DUP3 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 PUSH2 0x202C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1DAF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x42E JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x205A JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI DUP7 SWAP2 PUSH2 0x207B DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x204A JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI MSTORE JUMP JUMPDEST SWAP11 SWAP8 SWAP2 SWAP6 PUSH2 0x1F4F SWAP13 SWAP11 SWAP6 PUSH2 0x212D SWAP11 SWAP6 PUSH1 0x60 PUSH2 0x20E5 DUP16 SWAP11 SWAP8 PUSH2 0x20D7 DUP13 PUSH2 0x210A SWAP11 PUSH2 0x211E SWAP16 SWAP10 PUSH2 0x20C9 SWAP1 PUSH2 0x180 DUP1 DUP6 MSTORE DUP5 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x40 DUP15 ADD MSTORE SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP10 ADD MSTORE PUSH1 0x80 DUP14 ADD MSTORE PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42E JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x140 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x42E JUMPI DUP2 PUSH2 0x2181 SWAP2 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x42E JUMPI DUP3 PUSH2 0x2198 SWAP2 DUP6 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x42E JUMPI DUP4 PUSH2 0x21AF SWAP2 DUP7 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0xC4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x42E JUMPI DUP4 PUSH2 0x21D2 SWAP2 DUP7 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0xE4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x42E JUMPI DUP5 PUSH2 0x21E9 SWAP2 DUP4 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH2 0x104 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x42E JUMPI DUP2 PUSH2 0x2201 SWAP2 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH2 0x124 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x1F4F SWAP3 ADD PUSH2 0x2006 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI MSTORE JUMP JUMPDEST SWAP2 SWAP4 PUSH2 0x2245 PUSH1 0xA0 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x299 PUSH2 0x1ED9 SWAP9 SWAP5 PUSH1 0xC0 DUP8 MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP8 PUSH1 0x1 DUP1 DUP7 SHL SUB AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2217 JUMP JUMPDEST ISZERO PUSH2 0x226A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F666669636572732063616E2063616C6C20746869732066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22C2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742064617465206D757374206265206265666F726520656E64206461 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7465 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x231D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2312 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x348 JUMPI PUSH2 0x2346 DUP3 SLOAD PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x23F0 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x238C JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2381 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x236B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x23D8 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x23BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x23B5 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x241D SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x2423 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2312 JUMP JUMPDEST CODESIZE PUSH2 0x234F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH2 0x246E SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1E49 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1F52 JUMPI PUSH2 0x1ED9 SWAP2 PUSH2 0x2329 JUMP JUMPDEST ISZERO PUSH2 0x2485 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x15195B99195C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x24E1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109A5908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x252C DUP4 PUSH2 0x1E61 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x258E JUMPI POP PUSH1 0x1 EQ PUSH2 0x254E JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x257A JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2548 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x2563 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2548 JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x25BD DUP2 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 PUSH2 0x25CB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1DAF JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x25EA JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 SWAP3 PUSH2 0x25F8 DUP6 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x25DC JUMP INVALID PUSH12 0x65C6D5F7B922B9E476D69513 PUSH8 0x5DE9E14194D8D07E CALLVALUE SWAP8 0xBD TIMESTAMP PUSH32 0xD695866177162FCE656CD34B1FD506C44EF9FD09E7939A5C94A678A14C605566 DUP13 0xDD DUP11 LOG3 DUP15 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH3 0x3BF3AF PUSH17 0xD0CF2CBDA92971D5CAC6749A1348153859 EXTCODEHASH MULMOD SWAP8 0xB6 PUSH13 0xBD216C5164736F6C6343000814 STOP CALLER ","sourceMap":"155:14615:11:-:0;;;;;;;2729:18;155:14615;;-1:-1:-1;;;;;;155:14615:11;2737:10;155:14615;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":8508,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_string_dyn":{"entryPoint":8198,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":7632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_stringt_stringt_stringt_uint256t_uint256t_uint256t_stringt_stringt_stringt_array_string_dyn":{"entryPoint":8530,"id":null,"parameterSlots":1,"returnSlots":10},"abi_encode_array_string_dyn":{"entryPoint":8077,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_enum_BidStatus":{"entryPoint":8727,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_TenderStatus":{"entryPoint":8326,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":8040,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":9499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string_address_uint256_uint256_enum_BidStatus":{"entryPoint":8740,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_string_string_string_uint256_uint256_uint256_address_enum_TenderStatus_uint256_string_string_string":{"entryPoint":8339,"id":null,"parameterSlots":13,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":8175,"id":null,"parameterSlots":1,"returnSlots":1},"array_push_from_string_to_array_string_storage_dyn_ptr":{"entryPoint":9297,"id":null,"parameterSlots":2,"returnSlots":0},"clear_storage_range_bytes1":{"entryPoint":8978,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_array_string_dyn":{"entryPoint":9649,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":7835,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":9001,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7718,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7777,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7599,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_42320":{"entryPoint":7544,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_42327":{"entryPoint":7571,"id":null,"parameterSlots":1,"returnSlots":0},"read_from_storage_dynamic_split_string":{"entryPoint":8001,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_33f6":{"entryPoint":8891,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9b00":{"entryPoint":9434,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c8e4":{"entryPoint":9342,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ca7e":{"entryPoint":8803,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_string_dyn":{"entryPoint":7753,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_enum_BidStatus_to_enum_BidStatus":{"entryPoint":9410,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_enum_TenderStatus_to_enum_TenderStatus":{"entryPoint":9261,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1CC650C EQ PUSH2 0x1D08 JUMPI DUP1 PUSH4 0xF9FB388 EQ PUSH2 0x1CBB JUMPI DUP1 PUSH4 0x174F7692 EQ PUSH2 0x1C2C JUMPI DUP1 PUSH4 0x2D1FAF7C EQ PUSH2 0x1BE2 JUMPI DUP1 PUSH4 0x33F1F39D EQ PUSH2 0x1769 JUMPI DUP1 PUSH4 0x39C776B6 EQ PUSH2 0x1718 JUMPI DUP1 PUSH4 0x526F0300 EQ PUSH2 0x11BC JUMPI DUP1 PUSH4 0x5850B383 EQ PUSH2 0x119E JUMPI DUP1 PUSH4 0x62F058C8 EQ PUSH2 0x103B JUMPI DUP1 PUSH4 0x6759789F EQ PUSH2 0x1001 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0xF34 JUMPI DUP1 PUSH4 0x7EBD6019 EQ PUSH2 0xBBD JUMPI DUP1 PUSH4 0x83F668B7 EQ PUSH2 0xB47 JUMPI DUP1 PUSH4 0x96EC50C3 EQ PUSH2 0xAE0 JUMPI DUP1 PUSH4 0x997B737F EQ PUSH2 0xA1A JUMPI DUP1 PUSH4 0x9E27AF87 EQ PUSH2 0x995 JUMPI DUP1 PUSH4 0xF7BF8B9E EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0xF9853713 EQ PUSH2 0x433 JUMPI PUSH4 0xFB0998E3 EQ PUSH2 0xF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH2 0x15E PUSH2 0x149 PUSH2 0x136 PUSH1 0x7 PUSH1 0x20 PUSH2 0x113 CALLDATASIZE PUSH2 0x2152 JUMP JUMPDEST SWAP10 DUP10 SWAP15 SWAP4 SWAP12 SWAP3 SWAP5 SWAP10 PUSH1 0x1 SWAP10 SWAP15 SWAP3 SWAP8 SWAP7 SWAP9 SWAP10 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x0 SLOAD AND CALLER EQ SWAP14 DUP15 PUSH2 0x2263 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH2 0x177 PUSH1 0x20 DUP13 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP5 PUSH1 0x6 DUP7 ADD SWAP10 DUP11 SLOAD SWAP1 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x426 JUMPI JUMPDEST POP ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x5 SWAP10 SWAP1 PUSH1 0xA0 SHR PUSH1 0xFF AND DUP11 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x35E JUMPI DUP8 DUP7 PUSH2 0x210 SWAP6 PUSH2 0x1F0 DUP16 SWAP6 PUSH2 0x1E7 PUSH2 0x207 SWAP8 PUSH1 0x1 PUSH1 0xB SWAP16 DUP16 SWAP1 PUSH2 0x219 SWAP16 SWAP1 PUSH2 0x1E1 SWAP2 LT PUSH2 0x22BB JUMP JUMPDEST ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 DUP13 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x3 DUP11 ADD SSTORE PUSH1 0x4 DUP10 ADD SSTORE DUP11 DUP9 ADD SSTORE PUSH1 0x8 DUP8 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x9 DUP6 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0xA DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST ADD SWAP1 DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x348 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP5 SSTORE DUP2 DUP6 LT PUSH2 0x2D4 JUMPI JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2B7 JUMPI PUSH32 0x5F33DD4AC582710407CC42C7D955EB11C3DB69506E9D3B22F38B6E2AF8CD652B PUSH2 0x299 DUP9 DUP9 PUSH2 0x2B2 PUSH2 0x2A7 PUSH1 0xFF DUP12 SLOAD PUSH1 0xA0 SHR AND SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x60 DUP8 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x2086 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0x2C8 DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2329 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x249 JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x2F1 JUMPI POP PUSH2 0x237 JUMP JUMPDEST DUP1 PUSH2 0x2FE PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1E61 JUMP JUMPDEST DUP1 PUSH2 0x30B JUMPI JUMPDEST POP ADD PUSH2 0x2E4 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0x324 JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST CODESIZE PUSH2 0x304 JUMP JUMPDEST PUSH2 0x33F PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD DUP7 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2312 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x31E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C79207570646174652074656E6465727320696E204472616674 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x20737461747573 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207468652063726561746F72206F722061646D696E2063616E207570 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3230BA32903A3432903A32B73232B9 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CODESIZE PUSH2 0x19D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0x468 PUSH2 0x4A9 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x498 PUSH1 0x4 DUP3 MLOAD SWAP4 DUP6 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x485 DUP2 DUP4 DUP11 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x24DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x4BF DUP2 PUSH2 0x1D78 JUMP JUMPDEST PUSH2 0x4C8 DUP3 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x4D6 PUSH1 0x1 DUP4 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH1 0x2 DUP6 ADD SLOAD AND SWAP4 PUSH1 0x40 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP3 PUSH1 0x60 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x4 DUP3 ADD SLOAD SWAP3 PUSH1 0x80 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0xFF PUSH1 0x5 DUP5 ADD SLOAD AND SWAP3 PUSH1 0xA0 DUP3 ADD SWAP4 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI DUP5 MSTORE PUSH2 0x534 SWAP1 PUSH1 0x6 ADD PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD MSTORE MLOAD SWAP5 MLOAD SWAP6 MLOAD AND SWAP3 MLOAD SWAP2 MLOAD SWAP1 MLOAD SWAP2 PUSH1 0x4 DUP4 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x55F SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x2224 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x5BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x24 DUP1 CALLDATALOAD PUSH1 0x5 DUP1 DUP3 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 PUSH1 0x0 SLOAD AND CALLER EQ SWAP2 PUSH2 0x5E3 DUP4 PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 PUSH2 0x62B DUP8 DUP1 MLOAD PUSH2 0x61A PUSH1 0x7 DUP11 PUSH1 0x20 DUP1 SWAP13 DUP2 DUP1 SWAP8 ADD SWAP6 PUSH2 0x607 DUP2 DUP4 DUP10 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x6 DUP3 ADD SWAP5 DUP6 SLOAD SWAP2 CALLER SWAP1 DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x98D JUMPI JUMPDEST POP ISZERO PUSH2 0x931 JUMPI PUSH1 0x1 DUP7 SUB PUSH2 0x771 JUMPI PUSH1 0xA0 SHR PUSH1 0xFF AND DUP3 DUP2 LT ISZERO PUSH2 0x75C JUMPI PUSH2 0x70D JUMPI ADD SLOAD TIMESTAMP GT PUSH2 0x6B3 JUMPI POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP5 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP3 DUP5 ADD SWAP1 PUSH2 0x2086 JUMP JUMPDEST DUP4 PUSH1 0x2E PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207075626C69736820612074656E646572207468617420686173 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x8185B1C9958591E48195B991959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP6 ADD MSTORE PUSH32 0x43616E206F6E6C79207075626C6973682066726F6D2044726166742073746174 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7573 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x2 DUP6 SUB PUSH2 0x817 JUMPI PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 DUP2 LT ISZERO PUSH2 0x802 JUMPI PUSH1 0x1 SUB PUSH2 0x7B3 JUMPI POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST DUP4 PUSH1 0x84 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE DUP1 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C7920636C6F73652066726F6D205075626C6973686564207374 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x61747573 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x3 DUP6 SUB PUSH2 0x8A4 JUMPI PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 DUP2 LT ISZERO PUSH2 0x802 JUMPI PUSH1 0x2 SUB PUSH2 0x857 JUMPI POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST DUP4 PUSH1 0x21 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792061776172642066726F6D20436C6F736564207374617475 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x4 DUP6 EQ PUSH2 0x8D2 JUMPI JUMPDEST POP POP POP SWAP2 PUSH2 0x2B2 DUP3 PUSH2 0x696 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP5 PUSH2 0x6AA SWAP7 PUSH2 0x242D JUMP JUMPDEST PUSH1 0xA0 SHR PUSH1 0xFF AND SWAP1 DUP2 LT ISZERO PUSH2 0x802 JUMPI PUSH1 0x3 EQ PUSH2 0x8EE JUMPI DUP1 DUP1 PUSH2 0x8AD JUMP JUMPDEST DUP4 PUSH1 0x1F PUSH1 0x64 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE DUP3 ADD MSTORE PUSH32 0x43616E6E6F742063616E63656C20616E20617761726465642074656E64657200 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x2F DUP2 DUP7 ADD MSTORE PUSH32 0x4F6E6C79207468652063726561746F72206F722061646D696E2063616E206368 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x616E67652074686520737461747573 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP10 PUSH2 0x64B JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0x136 PUSH2 0x9CA SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x9DD DUP2 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x55F PUSH2 0x9EC PUSH1 0x1 DUP5 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 DUP3 ADD SLOAD AND SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD AND SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 DUP8 PUSH2 0x2224 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0x136 PUSH2 0xA4F SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0xA62 DUP2 PUSH2 0x1E9B JUMP JUMPDEST PUSH2 0x55F PUSH2 0xA71 PUSH1 0x1 DUP5 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP2 PUSH2 0xA7E PUSH1 0x2 DUP6 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x5 DUP4 ADD SLOAD SWAP1 PUSH1 0x6 DUP5 ADD SLOAD SWAP1 PUSH1 0x7 DUP6 ADD SLOAD SWAP3 PUSH2 0xAA9 PUSH1 0x8 DUP8 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP5 PUSH2 0xAC2 PUSH1 0xA PUSH2 0xABB PUSH1 0x9 DUP11 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP9 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP8 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 PUSH1 0xFF DUP8 PUSH1 0xA0 SHR AND SWAP7 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP14 PUSH2 0x2093 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH2 0xAF9 PUSH2 0x213C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH2 0xB2D PUSH2 0xB33 SWAP2 PUSH2 0x55F SWAP4 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 PUSH2 0x1F41 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0xBB1 PUSH1 0xB PUSH2 0xBA1 PUSH1 0x20 PUSH2 0xB84 PUSH2 0x55F SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x498 PUSH1 0x7 DUP3 MLOAD SWAP4 DUP6 DUP2 DUP2 DUP7 ADD SWAP7 PUSH2 0x607 DUP2 DUP4 DUP11 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH2 0x25B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1F8D JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH2 0xBCB CALLDATASIZE PUSH2 0x2152 JUMP JUMPDEST SWAP6 PUSH2 0xBEA PUSH1 0x1 DUP1 PUSH1 0xA0 SWAP13 SWAP11 SWAP13 SWAP9 SWAP5 SWAP9 SWAP8 SWAP6 SWAP8 SHL SUB PUSH1 0x0 SLOAD AND CALLER EQ PUSH2 0x2263 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP2 PUSH2 0xC03 DUP14 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH2 0xEEF JUMPI PUSH2 0xC1E DUP4 DUP4 LT PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP10 PUSH2 0xC2B DUP12 PUSH2 0x1D93 JUMP JUMPDEST DUP9 DUP12 MSTORE DUP10 PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD MSTORE PUSH1 0x60 DUP11 ADD MSTORE PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA0 DUP9 ADD MSTORE CALLER PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP9 ADD MSTORE TIMESTAMP PUSH2 0x100 DUP9 ADD MSTORE PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x160 DUP6 ADD MSTORE PUSH2 0x180 DUP5 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0xC89 DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP3 PUSH2 0xC9F DUP2 MLOAD DUP6 PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xCB0 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xCC1 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD SWAP4 PUSH1 0x5 SWAP5 DUP6 DUP3 ADD SSTORE PUSH1 0x6 DUP2 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xC0 DUP5 ADD MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP4 SLOAD AND OR DUP3 SSTORE PUSH1 0xE0 DUP4 ADD MLOAD SWAP1 DUP7 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0xD27 PUSH1 0xB SWAP3 PUSH2 0x180 SWAP5 PUSH2 0x242D JUMP JUMPDEST PUSH2 0x100 DUP5 ADD MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0xD44 PUSH2 0x120 DUP6 ADD MLOAD PUSH1 0x8 DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xD56 PUSH2 0x140 DUP6 ADD MLOAD PUSH1 0x9 DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH2 0xD68 PUSH2 0x160 DUP6 ADD MLOAD PUSH1 0xA DUP4 ADD PUSH2 0x2329 JUMP JUMPDEST ADD SWAP2 ADD MLOAD SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x40 SHL SWAP6 DUP7 DUP5 GT PUSH2 0x348 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP5 SSTORE DUP2 DUP6 LT PUSH2 0xE7B JUMPI JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0xE5E JUMPI POP POP POP POP PUSH1 0x2 SLOAD SWAP3 DUP4 LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x1 DUP4 ADD DUP1 PUSH1 0x2 SSTORE DUP4 LT ISZERO PUSH2 0xE48 JUMPI PUSH2 0xE3D PUSH2 0xE2F SWAP3 PUSH2 0xE1B DUP4 PUSH32 0x540E31CB45C1B4F21657A7522027A48FF2EC55CD0711035075C1F9E8FAAD564 SWAP7 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x60 DUP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST CALLER PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP3 PUSH2 0xE6F DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2329 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0xD9D JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0xE98 JUMPI POP PUSH2 0xD8B JUMP JUMPDEST DUP1 PUSH2 0xEA5 PUSH1 0x1 SWAP3 SLOAD PUSH2 0x1E61 JUMP JUMPDEST DUP1 PUSH2 0xEB2 JUMPI JUMPDEST POP ADD PUSH2 0xE8B JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP2 DUP2 GT DUP5 EQ PUSH2 0xECB JUMPI POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP11 PUSH2 0xEAB JUMP JUMPDEST PUSH2 0xEE6 PUSH1 0x0 SWAP3 DUP5 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 SWAP3 ADD DUP7 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2312 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0xEC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54656E64657220494420616C7265616479206578697374730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH2 0xF4D PUSH2 0x213C JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP4 AND CALLER SUB PUSH2 0xFB2 JUMPI AND SWAP1 DUP2 ISZERO PUSH2 0xF7B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1022 PUSH2 0x213C JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x55F PUSH2 0xBB1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x25B1 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH2 0xB84 PUSH2 0x1070 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x1086 DUP2 PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x108F DUP3 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE PUSH2 0x109D PUSH1 0x1 DUP4 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH2 0x10B1 PUSH1 0x2 DUP5 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP1 PUSH1 0x60 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP3 PUSH1 0x80 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP4 PUSH1 0xA0 DUP3 ADD SWAP5 DUP6 MSTORE PUSH1 0x6 DUP4 ADD SLOAD SWAP1 PUSH1 0xC0 DUP4 ADD PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR AND SWAP1 PUSH1 0xE0 DUP6 ADD SWAP2 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI DUP3 MSTORE PUSH1 0x7 DUP7 ADD SLOAD SWAP8 PUSH2 0x100 DUP7 ADD SWAP9 DUP10 MSTORE PUSH2 0x1128 PUSH1 0x8 DUP9 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP5 PUSH2 0x120 DUP8 ADD SWAP6 DUP7 MSTORE PUSH2 0x113D PUSH1 0x9 DUP10 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP7 PUSH2 0x140 DUP2 ADD SWAP8 DUP9 MSTORE PUSH2 0x1166 PUSH1 0xB PUSH2 0x1157 PUSH1 0xA DUP13 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP11 PUSH2 0x160 DUP5 ADD SWAP12 DUP13 MSTORE ADD PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x180 DUP3 ADD MSTORE MLOAD SWAP11 MLOAD SWAP12 MLOAD SWAP9 MLOAD SWAP5 MLOAD SWAP2 MLOAD SWAP3 MLOAD AND SWAP3 MLOAD SWAP4 PUSH1 0x5 DUP6 LT ISZERO PUSH2 0x3B3 JUMPI PUSH2 0x55F SWAP10 MLOAD SWAP6 MLOAD SWAP7 MLOAD SWAP8 MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP13 DUP14 SWAP13 DUP14 PUSH2 0x2093 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x11EC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x24 SWAP1 DUP2 CALLDATALOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 SLOAD PUSH1 0x4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND CALLER EQ PUSH2 0x1216 DUP2 PUSH2 0x2263 JUMP JUMPDEST PUSH2 0x1248 PUSH1 0x40 MLOAD DUP7 MLOAD PUSH2 0x1237 PUSH1 0x20 SWAP7 DUP4 DUP9 DUP1 SWAP6 DUP2 DUP14 ADD SWAP6 PUSH2 0x485 DUP2 DUP4 DUP10 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP11 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP4 ADD SWAP4 PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 DUP8 DUP8 SLOAD PUSH2 0x126C DUP2 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 DUP8 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1703 JUMPI POP PUSH1 0x1 EQ PUSH2 0x16CA JUMPI JUMPDEST POP DUP2 DUP4 DUP8 PUSH1 0x6 SWAP6 MSTORE SUB ADD SWAP1 KECCAK256 ADD SWAP2 DUP3 SLOAD SWAP2 CALLER SWAP1 DUP4 AND EQ SWAP1 DUP2 ISZERO PUSH2 0x16C2 JUMPI JUMPDEST POP ISZERO PUSH2 0x165F JUMPI DUP7 DUP4 SUB PUSH2 0x1405 JUMPI POP SWAP1 POP PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x13F0 JUMPI PUSH2 0x139B JUMPI SLOAD PUSH1 0xA0 SHR PUSH1 0xFF AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x1386 JUMPI PUSH1 0x2 SUB PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 POP DUP4 SWAP3 PUSH2 0x2B2 SWAP3 PUSH2 0x1306 PUSH2 0x131A SWAP8 SWAP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 JUMPDEST ADD PUSH2 0x24C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP7 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB SWAP1 DUP8 ADD MSTORE PUSH2 0x251B JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x2217 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x27 DUP2 DUP9 ADD MSTORE PUSH32 0x54656E646572206D75737420626520636C6F73656420746F2073686F72746C69 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x73742062696473 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP7 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x28 DUP2 DUP10 ADD MSTORE PUSH32 0x43616E206F6E6C792073686F72746C6973742066726F6D205375626D69747465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6420737461747573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP8 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP8 SUB PUSH2 0x14B8 JUMPI POP POP PUSH1 0xFF PUSH1 0x5 DUP4 ADD SLOAD AND SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x13F0 JUMPI DUP2 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x14AE JUMPI JUMPDEST POP POP ISZERO PUSH2 0x145C JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 POP DUP4 SWAP3 PUSH2 0x2B2 SWAP3 PUSH2 0x1306 PUSH2 0x131A SWAP8 SWAP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x25 DUP2 DUP9 ADD MSTORE PUSH32 0x496E76616C696420737461747573207472616E736974696F6E20746F2052656A PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x1958DD1959 PUSH1 0xDA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST EQ SWAP1 POP DUP8 DUP1 PUSH2 0x142B JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x3 DUP8 EQ PUSH2 0x14F0 JUMPI JUMPDEST POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 POP DUP4 SWAP3 PUSH2 0x2B2 SWAP3 PUSH2 0x1306 PUSH2 0x131A SWAP8 SWAP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x5 DUP6 ADD SLOAD AND PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x164A JUMPI SUB PUSH2 0x15F7 JUMPI PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x15E2 JUMPI PUSH1 0x2 SUB PUSH2 0x1592 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2607 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 POP SWAP3 PUSH2 0x1306 DUP7 PUSH1 0x5 PUSH2 0x1327 SWAP6 PUSH2 0x131A SWAP11 SWAP10 SWAP9 SWAP6 PUSH2 0x2B2 SWAP9 PUSH1 0x3 PUSH1 0xA0 SHL SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL NOT AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2627 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 MSTORE DUP1 PUSH2 0x1578 PUSH1 0x40 DUP3 ADD DUP10 PUSH2 0x251B JUMP JUMPDEST PUSH1 0x3 DUP11 DUP4 ADD MSTORE SUB SWAP1 LOG1 SWAP6 POP POP POP DUP3 SWAP6 SWAP7 SWAP8 POP DUP2 SWAP5 POP PUSH2 0x14C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x23 DUP2 DUP11 ADD MSTORE PUSH32 0x54656E646572206D75737420626520636C6F73656420746F2061776172642062 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696473 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x26 DUP2 DUP11 ADD MSTORE PUSH32 0x43616E206F6E6C792061776172642066726F6D2053686F72746C697374656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x737461747573 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP10 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x36 DUP2 DUP12 ADD MSTORE PUSH32 0x4F6E6C79207468652074656E6465722063726561746F72206F722061646D696E PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x2063616E206368616E67652062696420737461747573 PUSH1 0x50 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP DUP11 PUSH2 0x129E JUMP JUMPDEST SWAP1 SWAP2 SWAP3 POP DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x16EF JUMPI POP POP POP DUP3 ADD SWAP2 SWAP1 DUP2 PUSH2 0x1280 JUMP JUMPDEST DUP1 SLOAD DUP4 DUP8 ADD MSTORE DUP12 SWAP5 SWAP1 SWAP3 ADD SWAP2 DUP9 SWAP2 ADD PUSH2 0x16DB JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP DUP1 ISZERO ISZERO MUL DUP3 ADD SWAP3 POP DUP2 PUSH2 0x1280 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SLOAD DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH2 0xB33 PUSH2 0x55F SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE ADD PUSH2 0x1E9B JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x179A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP1 PUSH1 0x24 DUP1 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x17B4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x17D0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 MLOAD SWAP1 PUSH1 0x20 SWAP5 PUSH2 0x1805 PUSH1 0x7 DUP8 DUP8 ADD SWAP5 PUSH2 0x17ED DUP2 DUP7 DUP9 PUSH2 0x1E26 JUMP JUMPDEST DUP5 ADD SWAP4 DUP9 DUP2 PUSH1 0x1 SWAP7 DUP8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD ISZERO ISZERO PUSH2 0x247E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 PUSH1 0x4 DUP10 MLOAD SWAP6 DUP9 DUP2 DUP2 DUP14 ADD SWAP9 PUSH2 0x181F DUP2 DUP4 DUP13 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD SLOAD PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD DUP8 DUP2 DUP9 MLOAD PUSH2 0x1841 DUP2 DUP4 DUP11 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD DUP7 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP5 PUSH1 0xFF PUSH1 0x6 DUP8 ADD SLOAD PUSH1 0xA0 SHR AND SWAP6 PUSH1 0x5 SWAP7 DUP8 DUP2 LT ISZERO PUSH2 0x1B91 JUMPI DUP6 SUB PUSH2 0x1B4D JUMPI PUSH1 0x4 DUP2 ADD SLOAD TIMESTAMP LT PUSH2 0x1AFE JUMPI DUP7 ADD SLOAD TIMESTAMP GT PUSH2 0x1ABA JUMPI DUP10 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x188A DUP4 PUSH2 0x1D78 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP11 DUP11 PUSH2 0x18F1 DUP2 DUP7 ADD DUP13 DUP2 MSTORE PUSH2 0x18E8 PUSH2 0x18D6 PUSH1 0x40 DUP10 ADD SWAP5 CALLER DUP7 MSTORE PUSH1 0x60 DUP11 ADD SWAP7 DUP8 MSTORE PUSH1 0x80 DUP11 ADD SWAP8 TIMESTAMP DUP10 MSTORE PUSH1 0xA0 DUP12 ADD SWAP10 PUSH1 0x0 DUP12 MSTORE PUSH1 0xC0 DUP13 ADD SWAP13 DUP14 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP8 MLOAD DUP9 PUSH2 0x2329 JUMP JUMPDEST MLOAD DUP10 DUP8 ADD PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 DUP6 ADD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD PUSH1 0x4 DUP4 ADD SSTORE MLOAD PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x75C JUMPI SWAP1 PUSH2 0x193B PUSH1 0x6 SWAP3 DUP9 DUP4 ADD PUSH2 0x24C2 JUMP JUMPDEST ADD SWAP1 MLOAD DUP1 MLOAD SWAP3 PUSH1 0x1 PUSH1 0x40 SHL DUP5 GT PUSH2 0x1AA6 JUMPI POP DUP8 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x1A28 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1A0D JUMPI PUSH32 0x589214396AEFE501BDB858BB39086111764F18B0CA160C140F42DD4A0009AC91 PUSH2 0x19EF DUP13 DUP13 PUSH2 0x19FC DUP14 DUP14 DUP14 PUSH2 0x19C7 DUP7 DUP16 DUP6 PUSH2 0x19B8 SWAP2 PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP10 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x2451 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE DUP3 MSTORE PUSH2 0x19DB DUP6 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 MSTORE PUSH1 0x80 DUP8 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 DUP6 DUP4 SUB SWAP1 DUP7 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP1 CALLER PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST DUP5 DUP10 DUP3 PUSH2 0x1A1C DUP4 SWAP5 MLOAD DUP7 PUSH2 0x2329 JUMP JUMPDEST ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 PUSH2 0x196A JUMP JUMPDEST DUP4 PUSH1 0x0 MSTORE DUP6 DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP3 DUP4 ADD SWAP3 ADD JUMPDEST DUP3 DUP2 LT PUSH2 0x1A46 JUMPI POP POP PUSH2 0x195C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH2 0x1A55 DUP2 SLOAD PUSH2 0x1E61 JUMP JUMPDEST DUP1 PUSH2 0x1A67 JUMPI JUMPDEST POP ADD SWAP1 DUP6 DUP11 SWAP4 SWAP3 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x1F SWAP1 DUP13 DUP3 DUP3 GT PUSH1 0x1 EQ PUSH2 0x1A83 JUMPI POP POP POP PUSH1 0x0 DUP2 SSTORE JUMPDEST DUP14 PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x0 SWAP3 PUSH2 0x1A9D SWAP2 DUP6 DUP6 MSTORE DUP5 KECCAK256 SWAP3 ADD DUP13 SHR DUP3 ADD DUP6 DUP4 ADD PUSH2 0x2312 JUMP JUMPDEST DUP2 DUP4 SSTORE SSTORE PUSH2 0x1A7D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x18 DUP2 DUP6 ADD MSTORE PUSH32 0x54656E6465722062696464696E672068617320656E6465640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x22 DUP2 DUP7 ADD MSTORE PUSH32 0x54656E6465722062696464696E6720686173206E6F7420737461727465642079 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1E DUP2 DUP7 ADD MSTORE PUSH32 0x54656E646572206973206E6F74206F70656E20666F722062696464696E670000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x15 DUP2 DUP5 ADD MSTORE PUSH21 0x42696420494420616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0xBB1 PUSH2 0x1C1D PUSH1 0x20 PUSH2 0xB84 PUSH2 0x55F SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH2 0x25B1 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x2 SLOAD PUSH2 0x1C49 DUP2 PUSH2 0x1FEF JUMP JUMPDEST PUSH2 0x1C56 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1DAF JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 DUP3 ADD PUSH1 0x2 PUSH1 0x0 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1C9F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x55F DUP8 DUP3 PUSH2 0x1F8D JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x1CAD DUP10 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x1C8A JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0xBB1 PUSH1 0x6 PUSH2 0x1CF8 PUSH1 0x20 PUSH2 0x468 PUSH2 0x55F SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 ADD PUSH1 0x3 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 ADD PUSH2 0x25B1 JUMP JUMPDEST CALLVALUE PUSH2 0x42E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x1D38 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1DD0 JUMP JUMPDEST PUSH2 0x1D54 PUSH1 0x20 PUSH1 0x24 CALLDATALOAD SWAP3 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x1E26 JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x42E JUMPI PUSH2 0xB2D PUSH2 0xB33 SWAP2 PUSH2 0x55F SWAP4 PUSH2 0x1E49 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x348 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x1A0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x348 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x348 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x42E JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x348 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E04 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1DAF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x42E JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1E39 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1E29 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xE48 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1E91 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1E7B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E70 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x1EAF DUP5 PUSH2 0x1E61 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1F1E JUMPI POP PUSH1 0x1 EQ PUSH2 0x1EDB JUMPI JUMPDEST POP POP PUSH2 0x1ED9 SWAP3 POP SUB DUP4 PUSH2 0x1DAF JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1F06 JUMPI POP POP PUSH2 0x1ED9 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECB JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1EEE JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1ED9 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1ECB JUMP JUMPDEST SWAP1 PUSH2 0x1F52 JUMPI PUSH2 0x1F4F SWAP1 PUSH2 0x1E9B JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x1F81 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 DUP2 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x1FC1 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1FDF PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x1F68 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x348 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x42E JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x201E DUP3 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 PUSH2 0x202C PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1DAF JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP3 DUP1 DUP5 GT PUSH2 0x42E JUMPI DUP5 DUP4 ADD SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x205A JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x42E JUMPI DUP7 SWAP2 PUSH2 0x207B DUP5 DUP5 DUP1 SWAP5 DUP10 ADD ADD PUSH2 0x1DD0 JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x204A JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI MSTORE JUMP JUMPDEST SWAP11 SWAP8 SWAP2 SWAP6 PUSH2 0x1F4F SWAP13 SWAP11 SWAP6 PUSH2 0x212D SWAP11 SWAP6 PUSH1 0x60 PUSH2 0x20E5 DUP16 SWAP11 SWAP8 PUSH2 0x20D7 DUP13 PUSH2 0x210A SWAP11 PUSH2 0x211E SWAP16 SWAP10 PUSH2 0x20C9 SWAP1 PUSH2 0x180 DUP1 DUP6 MSTORE DUP5 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x40 DUP15 ADD MSTORE SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP10 ADD MSTORE PUSH1 0x80 DUP14 ADD MSTORE PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xC0 DUP12 ADD MSTORE PUSH1 0xE0 DUP11 ADD SWAP1 PUSH2 0x2086 JUMP JUMPDEST PUSH2 0x100 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH2 0x120 DUP9 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH2 0x140 DUP7 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST SWAP2 PUSH2 0x160 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1F68 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x42E JUMPI JUMP JUMPDEST SWAP1 PUSH2 0x140 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x42E JUMPI PUSH1 0x4 DUP1 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x42E JUMPI DUP2 PUSH2 0x2181 SWAP2 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x42E JUMPI DUP3 PUSH2 0x2198 SWAP2 DUP6 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x42E JUMPI DUP4 PUSH2 0x21AF SWAP2 DUP7 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD SWAP4 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH1 0xC4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x42E JUMPI DUP4 PUSH2 0x21D2 SWAP2 DUP7 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH1 0xE4 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x42E JUMPI DUP5 PUSH2 0x21E9 SWAP2 DUP4 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH2 0x104 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x42E JUMPI DUP2 PUSH2 0x2201 SWAP2 DUP5 ADD PUSH2 0x1DD0 JUMP JUMPDEST SWAP4 PUSH2 0x124 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x42E JUMPI PUSH2 0x1F4F SWAP3 ADD PUSH2 0x2006 JUMP JUMPDEST SWAP1 PUSH1 0x4 DUP3 LT ISZERO PUSH2 0x3B3 JUMPI MSTORE JUMP JUMPDEST SWAP2 SWAP4 PUSH2 0x2245 PUSH1 0xA0 SWAP5 SWAP9 SWAP8 SWAP6 PUSH2 0x299 PUSH2 0x1ED9 SWAP9 SWAP5 PUSH1 0xC0 DUP8 MSTORE PUSH1 0xC0 DUP8 ADD SWAP1 PUSH2 0x1F68 JUMP JUMPDEST SWAP8 PUSH1 0x1 DUP1 DUP7 SHL SUB AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x2217 JUMP JUMPDEST ISZERO PUSH2 0x226A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F666669636572732063616E2063616C6C20746869732066756E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x3A34B7B7 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x22C2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742064617465206D757374206265206265666F726520656E64206461 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7465 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x231D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2312 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x348 JUMPI PUSH2 0x2346 DUP3 SLOAD PUSH2 0x1E61 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x23F0 JUMPI JUMPDEST POP PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x238C JUMPI POP DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2381 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x236B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 DUP5 PUSH1 0x0 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x23D8 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x23BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x23B5 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x241D SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x2423 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x2312 JUMP JUMPDEST CODESIZE PUSH2 0x234F JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST SWAP1 PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0xA0 SWAP2 SWAP1 SWAP2 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x348 JUMPI PUSH2 0x246E SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x1E49 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x1F52 JUMPI PUSH2 0x1ED9 SWAP2 PUSH2 0x2329 JUMP JUMPDEST ISZERO PUSH2 0x2485 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x15195B99195C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3B3 JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x24E1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x109A5908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x252C DUP4 PUSH2 0x1E61 JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x258E JUMPI POP PUSH1 0x1 EQ PUSH2 0x254E JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x257A JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2548 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x2563 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2548 JUMP JUMPDEST SWAP1 DUP2 SLOAD PUSH2 0x25BD DUP2 PUSH2 0x1FEF JUMP JUMPDEST SWAP3 PUSH2 0x25CB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1DAF JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 DUP2 DUP7 ADD JUMPDEST DUP5 DUP5 LT PUSH2 0x25EA JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP4 DUP2 SWAP3 PUSH2 0x25F8 DUP6 PUSH2 0x1E9B JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP4 ADD SWAP3 SWAP1 PUSH2 0x25DC JUMP INVALID PUSH12 0x65C6D5F7B922B9E476D69513 PUSH8 0x5DE9E14194D8D07E CALLVALUE SWAP8 0xBD TIMESTAMP PUSH32 0xD695866177162FCE656CD34B1FD506C44EF9FD09E7939A5C94A678A14C605566 DUP13 0xDD DUP11 LOG3 DUP15 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5D PUSH3 0x3BF3AF PUSH17 0xD0CF2CBDA92971D5CAC6749A1348153859 EXTCODEHASH MULMOD SWAP8 0xB6 PUSH13 0xBD216C5164736F6C6343000814 STOP CALLER ","sourceMap":"155:14615:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2476:65;155:14615;2324:68;2484:27;155:14615;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2332:10;:19;2324:68;;;:::i;:::-;155:14615;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;2484:27;155:14615;2484:31;;2476:65;:::i;:::-;155:14615;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5413:16;;;;155:14615;;;2332:10;;155:14615;;;;;;;5413:30;:53;;;;;155:14615;;;;;;;;;;;;;;;;;;;;5707:19;;155:14615;5707:19;155:14615;5707:19;;155:14615;;5707:19;155:14615;6088:16;5707:19;;;155:14615;5707:19;;5699:66;5707:19;;5699:66;:::i;:::-;5784:12;155:14615;:::i;:::-;5814:18;;;155:14615;:::i;:::-;5856:21;;;155:14615;;5904:16;;155:14615;5942:14;;;155:14615;5976:15;;;155:14615;:::i;:::-;6012:17;;;155:14615;:::i;:::-;6052:15;;;155:14615;:::i;:::-;6088:16;155:14615;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6140:45;155:14615;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;6140:45;;;155:14615;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;5413:53;;;;;;155:14615;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;:::i;:::-;;;;2619:58;155:14615;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2627:23;155:14615;2627:27;;2619:58;:::i;:::-;155:14615;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;13096:6;13116:12;;155:14615;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2332:10;:19;2324:68;;;;:::i;:::-;155:14615;;;;;;;2476:65;2484:27;155:14615;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2484:27;155:14615;2484:31;;2476:65;:::i;:::-;155:14615;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6587:16;;;;155:14615;;;2332:10;;155:14615;;;6587:30;:53;;;;;155:14615;;;;;;6754:32;;2484:7;;155:14615;;;;;;;;;;;;6925:14;155:14615;6906:15;:33;155:14615;;6750:761;;155:14615;6750:761;7529:22;-1:-1:-1;;;;;;;;;;;6750:761:11;;155:14615;6750:761;7529:22;:::i;:::-;155:14615;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;6750:761;7011:29;-1:-1:-1;7021:19:11;7011:29;;7021:19;;155:14615;;;;;;;;;;;7064:39;155:14615;;7007:504;;155:14615;7007:504;7529:22;-1:-1:-1;;;;;;;;;;;7007:504:11;;155:14615;7007:504;7529:22;:::i;155:14615::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;-1:-1:-1;;;;155:14615:11;;;;;;;;7007:504;155:14615;7165:30;;7175:20;;155:14615;;;;;;;;;;7021:19;7219:36;155:14615;;7161:350;;155:14615;7161:350;7529:22;-1:-1:-1;;;;;;;;;;;7161:350:11;;155:14615;7161:350;7529:22;:::i;155:14615::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;7161:350;155:14615;7314:32;;7310:201;;7161:350;;;;;155:14615;7161:350;7529:22;-1:-1:-1;;;;;;;;;;;7161:350:11;;155:14615;7161:350;7529:22;:::i;7310:201::-;155:14615;;;;;;;;;;;7427:37;155:14615;;7310:201;;;;155:14615;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;6587:53;;;;;;155:14615;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1262:34;;;:::i;:::-;155:14615;1262:34;;;;;:::i;:::-;155:14615;;;;;;1262:34;;;155:14615;;1262:34;155:14615;1262:34;;155:14615;;1262:34;155:14615;1262:34;;155:14615;1262:34;;155:14615;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;:::i;:::-;;;1083:40;155:14615;;;;;;1083:40;;;:::i;:::-;155:14615;1083:40;;;;;:::i;:::-;;;;;;;:::i;:::-;;155:14615;1083:40;;155:14615;1083:40;155:14615;1083:40;;155:14615;1083:40;;;;155:14615;1083:40;;;;155:14615;1083:40;;;;155:14615;1083:40;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;155:14615;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;;;:::i;:::-;-1:-1:-1;;;;;155:14615:11;;;;;1482:44;155:14615;;;;;;;;;;1482:44;;;;;;;;155:14615;1482:44;;:::i;:::-;;;:::i;:::-;155:14615;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;12430:27;155:14615;;;;;;;;;;:::i;:::-;;;;2476:65;2484:27;155:14615;;;;;;;;;;;;;;:::i;:::-;;;2484:7;155:14615;;;;;;12430:27;155:14615;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;2324:68;155:14615;;;;;;;;;;;;;;;;;2332:10;:19;2324:68;:::i;:::-;3673:27;155:14615;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3673:27;155:14615;;;3744:66;3752:19;;;3744:66;:::i;:::-;155:14615;;;;;;:::i;:::-;;;;3849:465;155:14615;3849:465;;155:14615;;3849:465;;155:14615;3849:465;;;155:14615;3849:465;;;155:14615;;3849:465;;155:14615;2332:10;3849:465;;;155:14615;;;3849:465;;155:14615;4154:15;3849:465;;;155:14615;3849:465;;;155:14615;3849:465;;;155:14615;3849:465;;;155:14615;3849:465;;;155:14615;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;3849:465;;155:14615;;;;;:::i;:::-;;;3849:465;;155:14615;;;;;:::i;:::-;3849:465;;;155:14615;;;;;3849:465;;;155:14615;;;;;;3849:465;;155:14615;;;;;;;;;;;;;;;;;3849:465;;;155:14615;;;;;;;;;;;;3849:465;;155:14615;;;;;;;;;;;3849:465;155:14615;;:::i;:::-;3849:465;;;155:14615;3673:27;155:14615;;;;3849:465;;;155:14615;;;;;:::i;:::-;;3849:465;;;155:14615;;;;;:::i;:::-;;3849:465;;;155:14615;;;;;:::i;:::-;;3849:465;;155:14615;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4381:42;155:14615;;;;;;;:::i;:::-;;;;;;3849:465;155:14615;;3849:465;155:14615;;;;:::i;:::-;;;;;;;;;;:::i;:::-;2332:10;155:14615;;;;4381:42;;;155:14615;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;155:14615:11;;;;2000:10;:19;155:14615;;;14693:22;;;155:14615;;-1:-1:-1;;;;;;155:14615:11;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;-1:-1:-1;;;;;155:14615:11;;:::i;:::-;;;;14070:8;155:14615;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;:::i;:::-;;;2484:7;155:14615;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;2484:7;155:14615;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2484:27;155:14615;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;11801:9;11824:12;;11850:18;;155:14615;;;;;;;;;;;;;;;;;;;;;12062:15;;12091:17;;12122:15;;155:14615;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;;14278:9;155:14615;;;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;2332:10;:19;2324:68;2332:19;2324:68;:::i;:::-;155:14615;;;;;2619:58;155:14615;;;;;;;;;;;;;;;:::i;2619:58::-;155:14615;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;9383:12;;;;155:14615;;;;;;;;;;;:::i;:::-;;;;;;9375:7;;;;155:14615;;;;;;;;;;9489:16;155:14615;;;;;;9489:16;155:14615;;;2332:10;;155:14615;;;9489:30;:53;;;;;155:14615;;;;;9663:31;;;9375:7;;9718:10;;;155:14615;9718:10;;;155:14615;;;;;;;;;;;;;;;9718:10;155:14615;;;;;9835:19;9818:36;155:14615;;-1:-1:-1;;;;;;;;;;;9659:899:11;;;;155:14615;9659:899;10576:19;155:14615;9659:899;;10576:10;155:14615;9659:899;;10576:10;:19;:::i;:::-;155:14615;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;9659:899;9929:18;9919:28;;9929:18;;9971:10;;155:14615;9971:10;;;155:14615;;;;;;;;;9971:33;;:72;;;;;9915:643;155:14615;;;;;-1:-1:-1;;;;;;;;;;;9915:643:11;;;;155:14615;9915:643;10576:19;155:14615;9915:643;;10576:10;155:14615;9915:643;9659:899;;155:14615;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;9971:72;10008:35;;-1:-1:-1;9971:72:11;;;;9915:643;10106:27;;155:14615;10106:27;;10102:456;;9915:643;;;;-1:-1:-1;;;;;;;;;;;9915:643:11;;;;155:14615;9915:643;10576:19;155:14615;9915:643;;10576:10;155:14615;9915:643;9659:899;;10102:456;155:14615;10157:10;;;155:14615;;;;;;;;10157:35;155:14615;;;;;;;10157:10;155:14615;;;;;9929:18;10257:36;155:14615;;-1:-1:-1;;;;;;;;;;;155:14615:11;;;10576:19;155:14615;10576:10;155:14615;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;155:14615:11;;;;;;;;;;;;:::i;:::-;;;;;;10492:55;;;10102:456;;;;;;;;;;;;;;155:14615;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;9489:53;;;;;;155:14615;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;-1:-1:-1;155:14615:11;;;;;;;-1:-1:-1;155:14615:11;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;1187:25;155:14615;1187:25;;;;;155:14615;;;1187:25;155:14615;;;;;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;2476:65;2484:27;155:14615;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;2484:27;155:14615;2484:31;;2476:65;:::i;:::-;155:14615;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8060:23;155:14615;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8255:13;155:14615;8255:13;;;155:14615;;;;;;;;;;;;;8255:39;;155:14615;;;8366:16;;155:14615;8347:15;:35;155:14615;;8458:14;;155:14615;8347:15;8439:33;155:14615;;;;;;;;;:::i;:::-;;;;8560:253;;155:14615;8560:253;;;155:14615;;;;;;8560:253;;8641:10;;155:14615;;;8560:253;;155:14615;;;;8560:253;;8347:15;;155:14615;;;8560:253;;155:14615;;;;8560:253;;;155:14615;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8255:13;155:14615;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9009:52;155:14615;;;;;;;8868:32;155:14615;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8868:32;:::i;:::-;8641:10;155:14615;;;;8953:32;155:14615;;;;8953:32;:::i;:::-;155:14615;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;8641:10;;155:14615;;;;;;;;9009:52;;;155:14615;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;14479:9;155:14615;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;14479:9;155:14615;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;13504:21;155:14615;;;;;;;;;;:::i;:::-;;;;;;;;;;13504:21;155:14615;:::i;:::-;;;;;;-1:-1:-1;;155:14615:11;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1364:45;;;;;;;;155:14615;1364:45;;:::i;155:14615::-;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;-1:-1:-1;;155:14615:11;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;155:14615:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;155:14615:11;;-1:-1:-1;155:14615:11;;;-1:-1:-1;155:14615:11;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;155:14615:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;155:14615:11;;;;-1:-1:-1;155:14615:11;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;155:14615:11;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;155:14615:11;;;;;;:::o;:::-;;;-1:-1:-1;;155:14615:11;;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;155:14615:11;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;155:14615:11;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;-1:-1:-1;;;;155:14615:11;;;;;;-1:-1:-1;;;155:14615:11;;;;:::o;:::-;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;-1:-1:-1;;;155:14615:11;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;155:14615:11;;;;-1:-1:-1;155:14615:11;;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;155:14615:11;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;"},"methodIdentifiers":{"admin()":"f851a440","bids(string)":"9e27af87","changeBidStatus(string,uint8)":"526f0300","changeTenderStatus(string,uint8)":"f7bf8b9e","createTender(string,string,string,uint256,uint256,uint256,string,string,string,string[])":"7ebd6019","getAllTenderIds()":"174f7692","getBid(string)":"f9853713","getBidDocuments(string)":"0f9fb388","getTender(string)":"62f058c8","getTenderBids(string)":"2d1faf7c","getTenderCount()":"5850b383","getTenderDocuments(string)":"83f668b7","getUserBids(address)":"6759789f","submitBid(string,string,uint256,string[])":"33f1f39d","tenderBids(string,uint256)":"01cc650c","tenderIds(uint256)":"39c776b6","tenders(string)":"997b737f","transferAdmin(address)":"75829def","updateTender(string,string,string,uint256,uint256,uint256,string,string,string,string[])":"fb0998e3","userBids(address,uint256)":"96ec50c3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"bidId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum TenderManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"BidStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"bidId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"name\":\"BidSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"}],\"name\":\"TenderCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum TenderManagement.TenderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"TenderStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum TenderManagement.TenderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"TenderUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum TenderManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bidId\",\"type\":\"string\"},{\"internalType\":\"enum TenderManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"changeBidStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"internalType\":\"enum TenderManagement.TenderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"changeTenderStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"estimatedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"documents\",\"type\":\"string[]\"}],\"name\":\"createTender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTenderIds\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bidId\",\"type\":\"string\"}],\"name\":\"getBid\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"submittedAt\",\"type\":\"uint256\"},{\"internalType\":\"enum TenderManagement.BidStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bidId\",\"type\":\"string\"}],\"name\":\"getBidDocuments\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"}],\"name\":\"getTender\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"estimatedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"enum TenderManagement.TenderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"}],\"name\":\"getTenderBids\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTenderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"}],\"name\":\"getTenderDocuments\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserBids\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"bidId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"documents\",\"type\":\"string[]\"}],\"name\":\"submitBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tenderBids\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tenderIds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"tenders\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"estimatedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"internalType\":\"enum TenderManagement.TenderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tenderId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"estimatedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endDate\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"category\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"department\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"documents\",\"type\":\"string[]\"}],\"name\":\"updateTender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userBids\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for managing tenders in the TrustChain system\",\"kind\":\"dev\",\"methods\":{\"changeBidStatus(string,uint8)\":{\"details\":\"Change the status of a bid\",\"params\":{\"bidId\":\"Bid ID to update\",\"status\":\"New status\"}},\"changeTenderStatus(string,uint8)\":{\"details\":\"Change the status of a tender\",\"params\":{\"status\":\"New status\",\"tenderId\":\"Tender ID to update\"}},\"createTender(string,string,string,uint256,uint256,uint256,string,string,string,string[])\":{\"details\":\"Create a new tender\",\"params\":{\"category\":\"Tender category\",\"department\":\"Department issuing the tender\",\"description\":\"Tender description\",\"documents\":\"IPFS hashes of tender documents\",\"endDate\":\"End date of the tender\",\"estimatedValue\":\"Estimated value of the tender\",\"location\":\"Location of the tender\",\"startDate\":\"Start date of the tender\",\"tenderId\":\"Unique identifier for the tender\",\"title\":\"Tender title\"}},\"getAllTenderIds()\":{\"details\":\"Get all tender IDs\",\"returns\":{\"_0\":\"Array of all tender IDs\"}},\"getBid(string)\":{\"details\":\"Get bid details\",\"params\":{\"bidId\":\"Bid ID to query\"},\"returns\":{\"bidAmount\":\"Bid amount\",\"bidder\":\"Bidder address\",\"id\":\"Bid ID\",\"status\":\"Bid status\",\"submittedAt\":\"Bid submission timestamp\",\"tenderId\":\"Associated tender ID\"}},\"getBidDocuments(string)\":{\"details\":\"Get bid documents\",\"params\":{\"bidId\":\"Bid ID to query\"},\"returns\":{\"_0\":\"Array of document IPFS hashes\"}},\"getTender(string)\":{\"details\":\"Get tender details\",\"params\":{\"tenderId\":\"Tender ID to query\"},\"returns\":{\"category\":\"Tender category\",\"createdAt\":\"Tender creation timestamp\",\"createdBy\":\"Tender creator address\",\"department\":\"Tender department\",\"description\":\"Tender description\",\"endDate\":\"Tender end date\",\"estimatedValue\":\"Tender estimated value\",\"id\":\"Tender ID\",\"location\":\"Tender location\",\"startDate\":\"Tender start date\",\"status\":\"Tender status\",\"title\":\"Tender title\"}},\"getTenderBids(string)\":{\"details\":\"Get all bids for a tender\",\"params\":{\"tenderId\":\"Tender ID to query\"},\"returns\":{\"_0\":\"Array of bid IDs\"}},\"getTenderCount()\":{\"details\":\"Get the total number of tenders\",\"returns\":{\"_0\":\"The number of tenders\"}},\"getTenderDocuments(string)\":{\"details\":\"Get tender documents\",\"params\":{\"tenderId\":\"Tender ID to query\"},\"returns\":{\"_0\":\"Array of document IPFS hashes\"}},\"getUserBids(address)\":{\"details\":\"Get all bids submitted by a user\",\"params\":{\"userAddress\":\"User address to query\"},\"returns\":{\"_0\":\"Array of bid IDs\"}},\"submitBid(string,string,uint256,string[])\":{\"details\":\"Submit a bid for a tender\",\"params\":{\"bidAmount\":\"Bid amount\",\"bidId\":\"Unique identifier for the bid\",\"documents\":\"IPFS hashes of bid documents\",\"tenderId\":\"Tender ID to bid on\"}},\"transferAdmin(address)\":{\"details\":\"Transfer admin rights to a new address\",\"params\":{\"newAdmin\":\"The new admin address\"}},\"updateTender(string,string,string,uint256,uint256,uint256,string,string,string,string[])\":{\"details\":\"Update an existing tender\",\"params\":{\"category\":\"New category\",\"department\":\"New department\",\"description\":\"New description\",\"documents\":\"New document IPFS hashes\",\"endDate\":\"New end date\",\"estimatedValue\":\"New estimated value\",\"location\":\"New location\",\"startDate\":\"New start date\",\"tenderId\":\"Tender ID to update\",\"title\":\"New title\"}}},\"title\":\"TenderManagement\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/TenderManagement.sol\":\"TenderManagement\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/TenderManagement.sol\":{\"keccak256\":\"0x8d4a65efd97e614f9b443404eba550699a87e43561a2ca86c4ecb54c8a8a716c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a7dbc9aa2e71993c2ea41150f1256311b57e187acb011f5146ccefd07c0fde5f\",\"dweb:/ipfs/QmNyAe98TYvZZzfp5oWrr8Ha88Xvw9PpPEKNxWPCL7TAii\"]}},\"version\":1}"}},"src/contracts/UserAuthentication.sol":{"UserAuthentication":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"bool","name":"isApproved","type":"bool"},{"indexed":false,"internalType":"string","name":"remark","type":"string"}],"name":"UserApprovalChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"string","name":"id","type":"string"},{"indexed":false,"internalType":"string","name":"username","type":"string"},{"indexed":false,"internalType":"string","name":"role","type":"string"}],"name":"UserRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"string","name":"id","type":"string"}],"name":"UserRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"walletAddress","type":"address"},{"indexed":false,"internalType":"string","name":"username","type":"string"}],"name":"UserUpdated","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllUserAddresses","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"getCompanyDetails","outputs":[{"internalType":"string","name":"companyName","type":"string"},{"internalType":"string","name":"registrationNumber","type":"string"},{"internalType":"string","name":"gstNumber","type":"string"},{"internalType":"string","name":"panNumber","type":"string"},{"internalType":"uint256","name":"establishmentYear","type":"uint256"},{"internalType":"string","name":"registeredAddress","type":"string"},{"internalType":"string","name":"state","type":"string"},{"internalType":"string","name":"city","type":"string"},{"internalType":"string","name":"pinCode","type":"string"},{"internalType":"string","name":"bidderType","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"getUserByAddress","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"role","type":"string"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"string","name":"approvalRemark","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"username","type":"string"}],"name":"getUserByUsername","outputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"role","type":"string"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"string","name":"approvalRemark","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getUserCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"isOfficer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"isUser","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"role","type":"string"},{"internalType":"string","name":"companyName","type":"string"},{"internalType":"string","name":"registrationNumber","type":"string"},{"internalType":"string","name":"gstNumber","type":"string"},{"internalType":"string","name":"panNumber","type":"string"},{"internalType":"uint256","name":"establishmentYear","type":"uint256"},{"internalType":"string","name":"registeredAddress","type":"string"},{"internalType":"string","name":"state","type":"string"},{"internalType":"string","name":"city","type":"string"},{"internalType":"string","name":"pinCode","type":"string"},{"internalType":"string","name":"bidderType","type":"string"}],"name":"registerUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"}],"name":"removeUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"string","name":"remark","type":"string"}],"name":"setUserApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAdmin","type":"address"}],"name":"transferAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"string","name":"companyName","type":"string"},{"internalType":"string","name":"registrationNumber","type":"string"},{"internalType":"string","name":"gstNumber","type":"string"},{"internalType":"string","name":"panNumber","type":"string"},{"internalType":"uint256","name":"establishmentYear","type":"uint256"},{"internalType":"string","name":"registeredAddress","type":"string"},{"internalType":"string","name":"state","type":"string"},{"internalType":"string","name":"city","type":"string"},{"internalType":"string","name":"pinCode","type":"string"},{"internalType":"string","name":"bidderType","type":"string"}],"name":"updateCompanyDetails","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"}],"name":"updateUser","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"userAddresses","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"usernameExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"usernameToAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"users","outputs":[{"internalType":"string","name":"id","type":"string"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"username","type":"string"},{"internalType":"string","name":"email","type":"string"},{"internalType":"string","name":"role","type":"string"},{"internalType":"bool","name":"isApproved","type":"bool"},{"internalType":"string","name":"approvalRemark","type":"string"},{"internalType":"uint256","name":"createdAt","type":"uint256"},{"internalType":"string","name":"companyName","type":"string"},{"internalType":"string","name":"registrationNumber","type":"string"},{"internalType":"string","name":"gstNumber","type":"string"},{"internalType":"string","name":"panNumber","type":"string"},{"internalType":"uint256","name":"establishmentYear","type":"uint256"},{"internalType":"string","name":"registeredAddress","type":"string"},{"internalType":"string","name":"state","type":"string"},{"internalType":"string","name":"city","type":"string"},{"internalType":"string","name":"pinCode","type":"string"},{"internalType":"string","name":"bidderType","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_encode_stringliteral_f23e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":6111,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_23652":{"entryPoint":6143,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"34620017da57600080546001600160a01b031916331790556102c060405262000027620017df565b600781526661646d696e2d3160c81b602082015260805262000048620017df565b600c81526b29bcb9ba32b69020b236b4b760a11b602082015260a0526200006e620017df565b600581526430b236b4b760d91b602082015260c0526200008d620017df565b601481527f61646d696e407472757374636861696e2e636f6d000000000000000000000000602082015260e052620000c4620017df565b600581526430b236b4b760d91b602082015261010052600161012052620000ea620017ff565b6000815261014052426101605262000101620017df565b600a8152692a393ab9ba21b430b4b760b11b60208201526101805262000126620017df565b6005815264544330303160d81b60208201526101a05262000146620017ff565b600081526101c05262000158620017ff565b600081526101e0526107e76102005262000171620017df565b600d81526c426c6f636b636861696e20485160981b60208201526102205262000199620017df565b600c81526b111958d95b9d1c985b185b9960a21b602082015261024052620001c0620017df565b600b81526a43727970746f204369747960a81b602082015261026052620001e6620017df565b600681526503030303030360d41b60208201526102805262000207620017ff565b60008082526102a0919091523381526001602052604090206080518051906001600160401b03821162000a4b578254908160011c916001811615620017cf575b600116602083101462000b2e5781601f8493116200177a575b50602090601f83116001146200170957600092620016fd575b50508160011b916000199060031b1c19161781555b60a0518051906001600160401b03821162000a4b57600183015490600182811c92168015620016f2575b602083101462000b2e5781601f8493116200169a575b50602090601f8311600114620016235760009262001617575b50508160011b916000199060031b1c19161760018201555b60c0518051906001600160401b03821162000a4b57600283015490600182811c921680156200160c575b602083101462000b2e5781601f849311620015b4575b50602090601f83116001146200153d5760009262001531575b50508160011b916000199060031b1c19161760028201555b60e0518051906001600160401b03821162000a4b57600383015490600182811c9216801562001526575b602083101462000b2e5781601f849311620014ce575b50602090601f831160011462001457576000926200144b575b50508160011b916000199060031b1c19161760038201555b610100518051906001600160401b03821162000a4b57600483015490600182811c9216801562001440575b602083101462000b2e5781601f849311620013e8575b50602090601f8311600114620013715760009262001365575b50508160011b916000199060031b1c19161760048201555b6101205160058201805460ff191691151560ff16919091179055610140518051906001600160401b03821162000a4b57600683015490600182811c921680156200135a575b602083101462000b2e5781601f84931162001302575b50602090601f83116001146200128b576000926200127f575b50508160011b916000199060031b1c19161760068201555b610160516007820155610180518051906001600160401b03821162000a4b57600883015490600182811c9216801562001274575b602083101462000b2e5781601f8493116200121c575b50602090601f8311600114620011a55760009262001199575b50508160011b916000199060031b1c19161760088201555b6101a0518051906001600160401b03821162000a4b57600983015490600182811c921680156200118e575b602083101462000b2e5781601f84931162001136575b50602090601f8311600114620010bf57600092620010b3575b50508160011b916000199060031b1c19161760098201555b6101c0518051906001600160401b03821162000a4b57600a83015490600182811c92168015620010a8575b602083101462000b2e5781601f84931162001050575b50602090601f831160011462000fd95760009262000fcd575b50508160011b916000199060031b1c191617600a8201555b6101e0518051906001600160401b03821162000a4b57600b83015490600182811c9216801562000fc2575b602083101462000b2e5781601f84931162000f6a575b50602090601f831160011462000ef35760009262000ee7575b50508160011b916000199060031b1c191617600b8201555b61020051600c820155610220518051906001600160401b03821162000a4b57600d83015490600182811c9216801562000edc575b602083101462000b2e5781601f84931162000e84575b50602090601f831160011462000e0d5760009262000e01575b50508160011b916000199060031b1c191617600d8201555b610240518051906001600160401b03821162000a4b57600e83015490600182811c9216801562000df6575b602083101462000b2e5781601f84931162000d9e575b50602090601f831160011462000d275760009262000d1b575b50508160011b916000199060031b1c191617600e8201555b610260518051906001600160401b03821162000a4b57600f83015490600182811c9216801562000d10575b602083101462000b2e5781601f84931162000cb8575b50602090601f831160011462000c415760009262000c35575b50508160011b916000199060031b1c191617600f8201555b610280518051906001600160401b03821162000a4b57601083015490600182811c9216801562000c2a575b602083101462000b2e5781601f84931162000bd2575b50602090601f831160011462000b5b5760009262000b4f575b50508160011b916000199060031b1c19161760108201555b6102a0518051906001600160401b03821162000a4b576011830154600181811c9116801562000b44575b602082101462000b2e57601f811162000ae2575b50602090601f831160011462000a6d57601192916000918362000a61575b50508160011b916000199060031b1c1916179101555b60256040516430b236b4b760d91b815260026005820152203360018060a01b031982541617905560256040516430b236b4b760d91b81526004600582015220600160ff198254161790556003546801000000000000000081101562000a4b57600181018060035581101562000a355760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319163317905560405160608082526007908201526661646d696e2d3160c81b608082015260a0602082018190526005908201526430b236b4b760d91b60c08201527f509c70f523067009f7db7f46db6956d7af8b679323680dc3821a8bad001ac1e160e082019180830360408201528062000a223394604090600581526430b236b4b760d91b60208201520190565b0390a26040516141ec9081620018208239f35b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b015190503880620008dd565b906011840160005260206000209160005b601f198516811062000ac95750918391600193601195601f1981161062000aaf575b505050811b01910155620008f3565b015160001960f88460031b161c1916905538808062000aa0565b9192602060018192868501518155019401920162000a7e565b601184016000526020600020601f840160051c81016020851062000b26575b601f830160051c8201811062000b19575050620008bf565b6000815560010162000b01565b508062000b01565b634e487b7160e01b600052602260045260246000fd5b90607f1690620008ab565b01519050388062000869565b9250601084016000526020600020906000935b601f198416851062000bb6576001945083601f1981161062000b9c575b505050811b01601082015562000881565b015160001960f88460031b161c1916905538808062000b8b565b8181015183556020948501946001909301929091019062000b6e565b909150601084016000526020600020601f840160051c81016020851062000c22575b90849392915b601f830160051c8201811062000c1257505062000850565b6000815585945060010162000bfa565b508062000bf4565b91607f16916200083a565b015190503880620007f7565b9250600f84016000526020600020906000935b601f198416851062000c9c576001945083601f1981161062000c82575b505050811b01600f8201556200080f565b015160001960f88460031b161c1916905538808062000c71565b8181015183556020948501946001909301929091019062000c54565b909150600f84016000526020600020601f840160051c81016020851062000d08575b90849392915b601f830160051c8201811062000cf8575050620007de565b6000815585945060010162000ce0565b508062000cda565b91607f1691620007c8565b01519050388062000785565b9250600e84016000526020600020906000935b601f198416851062000d82576001945083601f1981161062000d68575b505050811b01600e8201556200079d565b015160001960f88460031b161c1916905538808062000d57565b8181015183556020948501946001909301929091019062000d3a565b909150600e84016000526020600020601f840160051c81016020851062000dee575b90849392915b601f830160051c8201811062000dde5750506200076c565b6000815585945060010162000dc6565b508062000dc0565b91607f169162000756565b01519050388062000713565b9250600d84016000526020600020906000935b601f198416851062000e68576001945083601f1981161062000e4e575b505050811b01600d8201556200072b565b015160001960f88460031b161c1916905538808062000e3d565b8181015183556020948501946001909301929091019062000e20565b909150600d84016000526020600020601f840160051c81016020851062000ed4575b90849392915b601f830160051c8201811062000ec4575050620006fa565b6000815585945060010162000eac565b508062000ea6565b91607f1691620006e4565b01519050388062000698565b9250600b84016000526020600020906000935b601f198416851062000f4e576001945083601f1981161062000f34575b505050811b01600b820155620006b0565b015160001960f88460031b161c1916905538808062000f23565b8181015183556020948501946001909301929091019062000f06565b909150600b84016000526020600020601f840160051c81016020851062000fba575b90849392915b601f830160051c8201811062000faa5750506200067f565b6000815585945060010162000f92565b508062000f8c565b91607f169162000669565b01519050388062000626565b9250600a84016000526020600020906000935b601f198416851062001034576001945083601f198116106200101a575b505050811b01600a8201556200063e565b015160001960f88460031b161c1916905538808062001009565b8181015183556020948501946001909301929091019062000fec565b909150600a84016000526020600020601f840160051c810160208510620010a0575b90849392915b601f830160051c82018110620010905750506200060d565b6000815585945060010162001078565b508062001072565b91607f1691620005f7565b015190503880620005b4565b9250600984016000526020600020906000935b601f19841685106200111a576001945083601f1981161062001100575b505050811b016009820155620005cc565b015160001960f88460031b161c19169055388080620010ef565b81810151835560209485019460019093019290910190620010d2565b909150600984016000526020600020601f840160051c81016020851062001186575b90849392915b601f830160051c82018110620011765750506200059b565b600081558594506001016200115e565b508062001158565b91607f169162000585565b01519050388062000542565b9250600884016000526020600020906000935b601f198416851062001200576001945083601f19811610620011e6575b505050811b0160088201556200055a565b015160001960f88460031b161c19169055388080620011d5565b81810151835560209485019460019093019290910190620011b8565b909150600884016000526020600020601f840160051c8101602085106200126c575b90849392915b601f830160051c820181106200125c57505062000529565b6000815585945060010162001244565b50806200123e565b91607f169162000513565b015190503880620004c7565b9250600684016000526020600020906000935b601f1984168510620012e6576001945083601f19811610620012cc575b505050811b016006820155620004df565b015160001960f88460031b161c19169055388080620012bb565b818101518355602094850194600190930192909101906200129e565b909150600684016000526020600020601f840160051c81016020851062001352575b90849392915b601f830160051c8201811062001342575050620004ae565b600081558594506001016200132a565b508062001324565b91607f169162000498565b0151905038806200043b565b9250600484016000526020600020906000935b601f1984168510620013cc576001945083601f19811610620013b2575b505050811b01600482015562000453565b015160001960f88460031b161c19169055388080620013a1565b8181015183556020948501946001909301929091019062001384565b909150600484016000526020600020601f840160051c81016020851062001438575b90849392915b601f830160051c820181106200142857505062000422565b6000815585945060010162001410565b50806200140a565b91607f16916200040c565b015190503880620003c9565b9250600384016000526020600020906000935b601f1984168510620014b2576001945083601f1981161062001498575b505050811b016003820155620003e1565b015160001960f88460031b161c1916905538808062001487565b818101518355602094850194600190930192909101906200146a565b909150600384016000526020600020601f840160051c8101602085106200151e575b90849392915b601f830160051c820181106200150e575050620003b0565b60008155859450600101620014f6565b5080620014f0565b91607f16916200039a565b01519050388062000358565b9250600284016000526020600020906000935b601f198416851062001598576001945083601f198116106200157e575b505050811b01600282015562000370565b015160001960f88460031b161c191690553880806200156d565b8181015183556020948501946001909301929091019062001550565b909150600284016000526020600020601f840160051c81016020851062001604575b90849392915b601f830160051c82018110620015f45750506200033f565b60008155859450600101620015dc565b5080620015d6565b91607f169162000329565b015190503880620002e7565b9250600184016000526020600020906000935b601f19841685106200167e576001945083601f1981161062001664575b505050811b016001820155620002ff565b015160001960f88460031b161c1916905538808062001653565b8181015183556020948501946001909301929091019062001636565b909150600184016000526020600020601f840160051c810160208510620016ea575b90849392915b601f830160051c82018110620016da575050620002ce565b60008155859450600101620016c2565b5080620016bc565b91607f1691620002b8565b01519050388062000279565b9250836000526020600020906000935b601f19841685106200175e576001945083601f1981161062001744575b505050811b0181556200028e565b015160001960f88460031b161c1916905538808062001736565b8181015183556020948501946001909301929091019062001719565b909150836000526020600020601f840160051c810160208510620017c7575b90849392915b601f830160051c82018110620017b757505062000260565b600081558594506001016200179f565b508062001799565b91607f169162000247565b600080fd5b60408051919082016001600160401b0381118382101762000a4b57604052565b60405190602082016001600160401b0381118382101762000a4b5760405256fe61012080604052600436101561001457600080fd5b60003560e01c9081630558d3e914613ab8575080630da4578b1461352d57806324d7806c146134d95780632f3300231461341157806337a1bba2146128325780634209fff1146127ee578063502c9bd5146127ac5780636816442d1461274957806369c212f6146124a357806375829def146123d457806398575188146120975780639d4d134214610b715780639f42af631461080e578063a87430ba1461047b578063b5cb15f71461045d578063b979cc2f146101e8578063f309e3f914610187578063f825f1431461011f5763f851a440146100f157600080fd5b3461011a57600036600319011261011a576000546040516001600160a01b039091168152602090f35b600080fd5b3461011a57602036600319011261011a576004356001600160401b03811161011a576101516020913690600401613e9b565b816101656040519283815193849201613dfb565b600290820190815281900382019020546040516001600160a01b039091168152f35b3461011a57602036600319011261011a576004356001600160401b03811161011a5760ff6101d260206101bf81943690600401613e9b565b8160405193828580945193849201613dfb565b8101600481520301902054166040519015158152f35b3461011a57606036600319011261011a57610201613de5565b6024358015159081810361011a576001600160401b039160443583811161011a57610230903690600401613e9b565b60005490946001600160a01b0391821633148015610411575b610252906140f7565b169283600052600190600660209483865261027b610274604060002054613f3e565b15156140b5565b866000528386526102a0604060002091600583019060ff801983541691151516179055565b019186519182116103fb576102b58354613f3e565b601f81116103c0575b5084601f83116001146103365791808061032695937f925b0343b9085747d26a9125c88206057343a6e2db8d4fe70cee25da0220aac1999a9560009361032b575b501b916000199060031b1c19161790555b6040805194859485528401526040830190613e1e565b0390a2005b86015192508b6102ff565b601f9291921982169084600052866000209160005b8181106103ab575091839161032696947f925b0343b9085747d26a9125c88206057343a6e2db8d4fe70cee25da0220aac19a9b969410610392575b5050811b019055610310565b85015160001960f88460031b161c191690558980610386565b8a83015184559285019291880191880161034b565b6103eb908460005286600020601f850160051c8101918886106103f1575b601f0160051c019061409e565b876102be565b90915081906103de565b634e487b7160e01b600052604160045260246000fd5b5033600052600160205261025261043861043f600460406000200160405192838092613f78565b0382613e7a565b6020815191012061044e614031565b60208151910120149050610249565b3461011a57600036600319011261011a576020600354604051908152f35b3461011a57602036600319011261011a576001600160a01b0361049c613de5565b16600052600160205260406000208080604051806104ba8184613f78565b036104c59082613e7a565b60405160a08190526104da8160018501613f78565b0360a051906104e891613e7a565b60405160808190526104fd8160028501613f78565b036080519061050b91613e7a565b6040518061051c8160038601613f78565b036105279082613e7a565b604051806105388160048701613f78565b036105439082613e7a565b600584015460ff166040518080600688019061055e91613f78565b036105699082613e7a565b600786015460405191826105808160088b01613f78565b0361058b9084613e7a565b604051938461059d8160098c01613f78565b036105a89086613e7a565b60405195866105ba81600a8d01613f78565b036105c59088613e7a565b60405197886105d781600b8e01613f78565b036105e2908a613e7a565b600c8b01549960405180600d819e01906105fb91613f78565b03610606908d613e7a565b60405180809e600e8291019061061b91613f78565b0361062591613e7a565b6040519d8e8061063881600f8501613f78565b0361064291613e7a565b60405160c08190526106578160108401613f78565b0360c0519061066591613e7a565b60405180918160e0526011019061067b91613f78565b0360e0519061068991613e7a565b604051806101005261024080915261010051016106a591613e1e565b61010051808203906020015260a051906106be91613e1e565b610100518082039060400152608051906106d791613e1e565b6101005180820390606001526106ec91613e1e565b61010051808203906080015261070191613e1e565b9015156101005160a00152610100518082039060c0015261072191613e1e565b906101005160e001526101005180820390610100015261074091613e1e565b6101005180820390610120015261075691613e1e565b6101005180820390610140015261076c91613e1e565b6101005180820390610160015261078291613e1e565b9061010051610180015261010051808203906101a001526107a291613e1e565b61010051808203906101c001526107b891613e1e565b61010051808203906101e001526107ce91613e1e565b6101005180820390610200015260c051906107e891613e1e565b61010051808203906102200152610100519060e0519061080791613e1e565b0361010051f35b3461011a5760208060031936011261011a576004356001600160401b03811161011a5761083f903690600401613e9b565b816108536040519283815193849201613dfb565b600290820190815281900382019020546001600160a01b03168015610b37578060005260018252604060002060405161088b81613e43565b604051806108998185613f78565b036108a49082613e7a565b8152604051806108b78160018601613f78565b036108c29082613e7a565b818501908152604051806108d98160028701613f78565b036108e49082613e7a565b6040830152604051808060038601906108fc91613f78565b036109079082613e7a565b606083019081526040518061091f8160048801613f78565b0361092a9082613e7a565b60808401908152600585015460ff169160a085019215158352604051938480600689019061095791613f78565b036109629086613e7a565b60c0860194855260078701549560e08101968752604051978880600883019061098a91613f78565b03610995908a613e7a565b6101009889830152604051808060098401906109b091613f78565b036109bb9082613e7a565b610120830152604051806109d281600a8501613f78565b036109dd9082613e7a565b610140830152604051806109f481600b8501613f78565b036109ff9082613e7a565b610160830152600c81015461018083015260405180610a2181600d8501613f78565b03610a2c9082613e7a565b6101a083015260405180610a4381600e8501613f78565b03610a4e9082613e7a565b6101c083015260405180610a6581600f8501613f78565b03610a709082613e7a565b6101e083015260405180610a878160108501613f78565b03610a929082613e7a565b61020083015260405180601181930190610aab91613f78565b03610ab69082613e7a565b61022082015251905191519251935115159451955196806040519a8b9a8b528a01528801610ae391613e1e565b8781036040890152610af491613e1e565b8681036060880152610b0591613e1e565b8581036080870152610b1691613e1e565b9060a085015283810360c0850152610b2d91613e1e565b9060e08301520390f35b60405162461bcd60e51b8152600481018390526012602482015271155cd95c9b985b59481b9bdd08199bdd5b9960721b6044820152606490fd5b3461011a5761020036600319011261011a57610b8b613de5565b6024356001600160401b03811161011a57610baa903690600401613e9b565b906044356001600160401b03811161011a57610bca903690600401613e9b565b916064356001600160401b03811161011a57610bea903690600401613e9b565b906084356001600160401b03811161011a57610c0a903690600401613e9b565b9360a4356001600160401b03811161011a57610c2a903690600401613e9b565b9460c4356001600160401b03811161011a57610c4a903690600401613e9b565b60e4356001600160401b03811161011a57610c69903690600401613e9b565b610104356001600160401b03811161011a57610c89903690600401613e9b565b6001600160401b03610124351161011a57610caa3661012435600401613e9b565b6001600160401b03610164351161011a57610ccb3661016435600401613e9b565b906001600160401b03610184351161011a57610ced3661018435600401613e9b565b926001600160401b036101a4351161011a57610d0f366101a435600401613e9b565b946001600160401b036101c4351161011a57610d31366101c435600401613e9b565b966001600160401b036101e4351161011a578d98610d55366101e435600401613e9b565b9960208151910120610d6561400e565b6020815191012014611ffa575b6001600160a01b038e16600090815260016020526040902054610d9490613f3e565b611fa9578e8c918e60405180825181816020860191610db292613dfb565b8101600481520360200190205460ff1615610dcc90614052565b82516020840120610ddb61400e565b8051906020012014936040519e8f91610df383613e43565b825260208201526040015260608d015260808c015260a08b0152604051806020810110602082016001600160401b0310176103fb57602081016040526000815260c08b01524260e08b01526101008a0152610120890152610140880152610160870152610144356101808701526101a08601526101c08501526101e084015261020083015261022082015260018060a01b038416600052600160205260406000209080518051906001600160401b0382116103fb578190610eb48554613f3e565b601f8111611f77575b50602090601f8311600114611f0b57600092611f00575b50508160011b916000199060031b1c19161782555b60208101518051906001600160401b0382116103fb578190610f0e6001860154613f3e565b601f8111611ecb575b50602090601f8311600114611e5957600092611e4e575b50508160011b916000199060031b1c19161760018301555b60408101518051906001600160401b0382116103fb578190610f6b6002860154613f3e565b601f8111611e19575b50602090601f8311600114611da757600092611d9c575b50508160011b916000199060031b1c19161760028301555b60608101518051906001600160401b0382116103fb578190610fc86003860154613f3e565b601f8111611d67575b50602090601f8311600114611cf557600092611cea575b50508160011b916000199060031b1c19161760038301555b60808101518051906001600160401b0382116103fb5781906110256004860154613f3e565b601f8111611cb5575b50602090601f8311600114611c4357600092611c38575b50508160011b916000199060031b1c19161760048301555b61107c60a08201511515600584019060ff801983541691151516179055565b60c08101518051906001600160401b0382116103fb5781906110a16006860154613f3e565b601f8111611c03575b50602090601f8311600114611b9157600092611b86575b50508160011b916000199060031b1c19161760068301555b60e081015160078301556101008101518051906001600160401b0382116103fb5781906111096008860154613f3e565b601f8111611b51575b50602090601f8311600114611adf57600092611ad4575b50508160011b916000199060031b1c19161760088301555b6101208101518051906001600160401b0382116103fb5781906111676009860154613f3e565b601f8111611a9f575b50602090601f8311600114611a2d57600092611a22575b50508160011b916000199060031b1c19161760098301555b6101408101518051906001600160401b0382116103fb5781906111c5600a860154613f3e565b601f81116119ed575b50602090601f831160011461197b57600092611970575b50508160011b916000199060031b1c191617600a8301555b6101608101518051906001600160401b0382116103fb578190611223600b860154613f3e565b601f811161193b575b50602090601f83116001146118c9576000926118be575b50508160011b916000199060031b1c191617600b8301555b610180810151600c8301556101a08101518051906001600160401b0382116103fb57819061128c600d860154613f3e565b601f8111611889575b50602090601f83116001146118175760009261180c575b50508160011b916000199060031b1c191617600d8301555b6101c08101518051906001600160401b0382116103fb5781906112ea600e860154613f3e565b601f81116117d7575b50602090601f83116001146117655760009261175a575b50508160011b916000199060031b1c191617600e8301555b6101e08101518051906001600160401b0382116103fb578190611348600f860154613f3e565b601f8111611725575b50602090601f83116001146116b3576000926116a8575b50508160011b916000199060031b1c191617600f8301555b6102008101518051906001600160401b0382116103fb576113a46010850154613f3e565b601f8111611673575b50602090601f83116001146115ff57610220939291600091836115f4575b50508160011b916000199060031b1c19161760108401555b0151908151906001600160401b0382116103fb576011829101926114078454613f3e565b601f81116115c2575b50602090601f831160011461155c57600092611551575b50508160011b916000199060031b1c19161790555b60035491680100000000000000008310156103fb5783611538610326926114b07f509c70f523067009f7db7f46db6956d7af8b679323680dc3821a8bad001ac1e19761149188600161152a9a01600355613ef1565b90919082549060031b9160018060a01b03809116831b921b1916179055565b60405160208183516114c58183858801613dfb565b60029082019081520301902080546001600160a01b0319166001600160a01b038516179055604051815160209082906115018183878601613dfb565b81016004815203019020600160ff19825416179055604051958695606087526060870190613e1e565b908582036020870152613e1e565b83810360408501526001600160a01b0390911695613e1e565b015190508780611427565b6000858152602081209350601f198516905b8181106115aa5750908460019594939210611591575b505050811b01905561143c565b015160001960f88460031b161c19169055878080611584565b9293602060018192878601518155019501930161156e565b6115ee90856000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b88611410565b0151905089806113cb565b906010850160005260206000209160005b601f198516811061165b57509183916001936102209695601f19811610611642575b505050811b0160108401556113e3565b015160001960f88460031b161c19169055898080611632565b91926020600181928685015181550194019201611610565b6116a290601086016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b886113ad565b015190508880611368565b9250600f85016000526020600020906000935b601f198416851061170a576001945083601f198116106116f1575b505050811b01600f830155611380565b015160001960f88460031b161c191690558880806116e1565b818101518355602094850194600190930192909101906116c6565b61175490600f87016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89611351565b01519050888061130a565b9250600e85016000526020600020906000935b601f19841685106117bc576001945083601f198116106117a3575b505050811b01600e830155611322565b015160001960f88460031b161c19169055888080611793565b81810151835560209485019460019093019290910190611778565b61180690600e87016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b896112f3565b0151905088806112ac565b9250600d85016000526020600020906000935b601f198416851061186e576001945083601f19811610611855575b505050811b01600d8301556112c4565b015160001960f88460031b161c19169055888080611845565b8181015183556020948501946001909301929091019061182a565b6118b890600d87016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89611295565b015190508880611243565b9250600b85016000526020600020906000935b601f1984168510611920576001945083601f19811610611907575b505050811b01600b83015561125b565b015160001960f88460031b161c191690558880806118f7565b818101518355602094850194600190930192909101906118dc565b61196a90600b87016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b8961122c565b0151905088806111e5565b9250600a85016000526020600020906000935b601f19841685106119d2576001945083601f198116106119b9575b505050811b01600a8301556111fd565b015160001960f88460031b161c191690558880806119a9565b8181015183556020948501946001909301929091019061198e565b611a1c90600a87016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b896111ce565b015190508880611187565b9250600985016000526020600020906000935b601f1984168510611a84576001945083601f19811610611a6b575b505050811b01600983015561119f565b015160001960f88460031b161c19169055888080611a5b565b81810151835560209485019460019093019290910190611a40565b611ace90600987016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89611170565b015190508880611129565b9250600885016000526020600020906000935b601f1984168510611b36576001945083601f19811610611b1d575b505050811b016008830155611141565b015160001960f88460031b161c19169055888080611b0d565b81810151835560209485019460019093019290910190611af2565b611b8090600887016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89611112565b0151905088806110c1565b9250600685016000526020600020906000935b601f1984168510611be8576001945083601f19811610611bcf575b505050811b0160068301556110d9565b015160001960f88460031b161c19169055888080611bbf565b81810151835560209485019460019093019290910190611ba4565b611c3290600687016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b896110aa565b015190508880611045565b9250600485016000526020600020906000935b601f1984168510611c9a576001945083601f19811610611c81575b505050811b01600483015561105d565b015160001960f88460031b161c19169055888080611c71565b81810151835560209485019460019093019290910190611c56565b611ce490600487016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b8961102e565b015190508880610fe8565b9250600385016000526020600020906000935b601f1984168510611d4c576001945083601f19811610611d33575b505050811b016003830155611000565b015160001960f88460031b161c19169055888080611d23565b81810151835560209485019460019093019290910190611d08565b611d9690600387016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89610fd1565b015190508880610f8b565b9250600285016000526020600020906000935b601f1984168510611dfe576001945083601f19811610611de5575b505050811b016002830155610fa3565b015160001960f88460031b161c19169055888080611dd5565b81810151835560209485019460019093019290910190611dba565b611e4890600287016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89610f74565b015190508880610f2e565b9250600185016000526020600020906000935b601f1984168510611eb0576001945083601f19811610611e97575b505050811b016001830155610f46565b015160001960f88460031b161c19169055888080611e87565b81810151835560209485019460019093019290910190611e6c565b611efa90600187016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89610f17565b015190508880610ed4565b9250846000526020600020906000935b601f1984168510611f5c576001945083601f19811610611f43575b505050811b018255610ee9565b015160001960f88460031b161c19169055888080611f36565b81810151835560209485019460019093019290910190611f1b565b611fa390866000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89610ebd565b60405162461bcd60e51b8152602060048201526024808201527f5573657220616c72656164792065786973747320666f722074686973206164646044820152637265737360e01b6064820152608490fd5b6000546001600160a01b031633148015612057575b610d7257606460405162461bcd60e51b815260206004820152602060248201527f4f6e6c792061646d696e2063616e207265676973746572206f666669636572736044820152fd5b5033600052600160205261043861207b600460406000200160405192838092613f78565b6020815191012061208a614031565b602081519101201461200f565b3461011a5760208060031936011261011a576120b1613de5565b9061213360018060a01b038093816000541633148015612392575b6120d5906140f7565b169182600052600180948183526120f3610274604060002054613f3e565b8460005281835261218283610438612118600260406000200160405192838092613f78565b8760005284825261213a604060002060405198898092613f78565b0388613e7a565b60405190805191838181840194612152818388613dfb565b810160028152030190206bffffffffffffffffffffffff60a01b8154169055604051938492839251928391613dfb565b8101600481520301902060ff1981541690556000915b6122a6575b5050612292601184957f89fcfa7c85bf81269953b23469028afbdb9913b80af31b7c931a42009fb252bd956000528084526121e76040600020916121e08361414d565b820161414d565b6121f36002820161414d565b6121ff6003820161414d565b61220b6004820161414d565b6000600582015561221e6006820161414d565b600060078201556122316008820161414d565b61223d6009820161414d565b612249600a820161414d565b612255600b820161414d565b6000600c820155612268600d820161414d565b612274600e820161414d565b612280600f820161414d565b61228c6010820161414d565b0161414d565b610326604051928284938452830190613e1e565b600380548084101561238b5786836122bd86613ef1565b905490851b1c16146122f457505060001982146122de578580920191612198565b634e487b7160e01b600052601160045260246000fd5b95969095600019938185019182116122de576114918461231661232394613ef1565b9054908b1b1c1691613ef1565b8554918215612375577f89fcfa7c85bf81269953b23469028afbdb9913b80af31b7c931a42009fb252bd9661229294601194019161236083613ef1565b9091825491841b1b191690555595945061219d565b634e487b7160e01b600052603160045260246000fd5b505061219d565b5033600052600184526120d56104386123b8600460406000200160405192838092613f78565b8581519101206123c6614031565b8681519101201490506120cc565b3461011a57602036600319011261011a576123ed613de5565b600054906001600160a01b03903382841614801561245e575b61240f906140f7565b16908115612427576001600160a01b03191617600055005b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b5033600052600160205261240f610438612485600460406000200160405192838092613f78565b60208151910120612494614031565b60208151910120149050612406565b3461011a57602036600319011261011a576001600160a01b036124c4613de5565b1660005260016020526040600020604051906124df82613e43565b604051806124ed8184613f78565b036124f89082613e7a565b8252604051918261250c8160018501613f78565b036125179084613e7a565b6020810192835260405190816125308160028601613f78565b0361253b9083613e7a565b604081810192835251806125528160038701613f78565b0361255d9082613e7a565b60608201908152604051806125758160048801613f78565b036125809082613e7a565b60808301908152600585015460ff169060a08401911515825260405192838060068901906125ad91613f78565b036125b89085613e7a565b60c0850193845260078701549460e0810195865260405197888060088301906125e091613f78565b036125eb908a613e7a565b61010098898301526040518080600984019061260691613f78565b036126119082613e7a565b6101208301526040518061262881600a8501613f78565b036126339082613e7a565b6101408301526040518061264a81600b8501613f78565b036126559082613e7a565b610160830152600c8101546101808301526040518061267781600d8501613f78565b036126829082613e7a565b6101a08301526040518061269981600e8501613f78565b036126a49082613e7a565b6101c0830152604051806126bb81600f8501613f78565b036126c69082613e7a565b6101e0830152604051806126dd8160108501613f78565b036126e89082613e7a565b6102008301526040518060118193019061270191613f78565b0361270c9082613e7a565b61022082015251975195519051915192511515935194519560405198888a998a52890161273891613e1e565b88810360208a0152610ae391613e1e565b3461011a57602036600319011261011a576001600160a01b0361276a613de5565b166000526001602052602061043861278f600460406000200160405192838092613f78565b81815191012061279d61400e565b82815191012014604051908152f35b3461011a57602036600319011261011a5760043560035481101561011a576127d5602091613ef1565b905460405160039290921b1c6001600160a01b03168152f35b3461011a57602036600319011261011a576001600160a01b0361280f613de5565b1660005260016020526020612828604060002054613f3e565b1515604051908152f35b3461011a5761016036600319011261011a5761284c613de5565b6024356001600160401b03811161011a5761286b903690600401613e9b565b6044356001600160401b03811161011a5761288a903690600401613e9b565b916064356001600160401b03811161011a576128aa903690600401613e9b565b6084356001600160401b03811161011a576128c9903690600401613e9b565b60c4356001600160401b03811161011a576128e8903690600401613e9b565b60e4356001600160401b03811161011a57612907903690600401613e9b565b90610104356001600160401b03811161011a57612928903690600401613e9b565b92610124356001600160401b03811161011a57612949903690600401613e9b565b94610144356001600160401b03811161011a5761296a903690600401613e9b565b9860018060a01b038816600052600160205261298d610274604060002054613f3e565b6000546001600160a01b0316331480156133d1575b80156133bf575b15613354576001600160a01b0388166000908152600160205260409020895190996001600160401b0382116103fb5781908b6129e86008820154613f3e565b601f811161331f575b5050602090601f83116001146132ad576000926132a2575b50508160011b916000199060031b1c19161760088a01555b8051906001600160401b0382116103fb578190612a4160098c0154613f3e565b601f811161326d575b50602090601f83116001146131fb576000926131f0575b50508160011b916000199060031b1c19161760098901555b8051906001600160401b0382116103fb578190612a99600a8b0154613f3e565b601f81116131bb575b50602090601f83116001146131495760009261313e575b50508160011b916000199060031b1c191617600a8801555b8051906001600160401b0382116103fb578190612af1600b8a0154613f3e565b601f8111613109575b50602090601f83116001146130975760009261308c575b50508160011b916000199060031b1c191617600b8701555b60a435600c8701558051906001600160401b0382116103fb578190612b51600d890154613f3e565b601f8111613057575b50602090601f8311600114612fe557600092612fda575b50508160011b916000199060031b1c191617600d8601555b8051906001600160401b0382116103fb578190612ba9600e880154613f3e565b601f8111612fa5575b50602090601f8311600114612f3357600092612f28575b50508160011b916000199060031b1c191617600e8501555b8051906001600160401b0382116103fb578190612c01600f870154613f3e565b601f8111612ef3575b50602090601f8311600114612e8157600092612e76575b50508160011b916000199060031b1c191617600f8401555b805160108401916001600160401b0382116103fb578190612c5a8454613f3e565b601f8111612e44575b50602090601f8311600114612dde57600092612dd3575b50508160011b916000199060031b1c19161790555b6011820183516001600160401b0381116103fb57612cad8254613f3e565b601f8111612da1575b506020601f8211600114612d255790806103269493926000805160206141978339815191529697600092612d1a575b50508160011b916000199060031b1c19161790555b6040519182916020835260018060a01b0316946002602084019101613f78565b015190508780612ce5565b601f198216958360005260206000209660005b818110612d895750966001928492610326979695600080516020614197833981519152999a10612d70575b505050811b019055612cfa565b015160001960f88460031b161c19169055878080612d63565b83830151895560019098019760209384019301612d38565b612dcd90836000526020600020601f840160051c810191602085106103f157601f0160051c019061409e565b85612cb6565b015190508680612c7a565b6000858152602081209350601f198516905b818110612e2c5750908460019594939210612e13575b505050811b019055612c8f565b015160001960f88460031b161c19169055868080612e06565b92936020600181928786015181550195019301612df0565b612e7090856000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b87612c63565b015190508680612c21565b9250600f86016000526020600020906000935b601f1984168510612ed8576001945083601f19811610612ebf575b505050811b01600f840155612c39565b015160001960f88460031b161c19169055868080612eaf565b81810151835560209485019460019093019290910190612e94565b612f2290600f88016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b87612c0a565b015190508780612bc9565b9250600e87016000526020600020906000935b601f1984168510612f8a576001945083601f19811610612f71575b505050811b01600e850155612be1565b015160001960f88460031b161c19169055878080612f61565b81810151835560209485019460019093019290910190612f46565b612fd490600e89016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b88612bb2565b015190508880612b71565b9250600d88016000526020600020906000935b601f198416851061303c576001945083601f19811610613023575b505050811b01600d860155612b89565b015160001960f88460031b161c19169055888080613013565b81810151835560209485019460019093019290910190612ff8565b61308690600d8a016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b89612b5a565b015190508980612b11565b9250600b89016000526020600020906000935b601f19841685106130ee576001945083601f198116106130d5575b505050811b01600b870155612b29565b015160001960f88460031b161c191690558980806130c5565b818101518355602094850194600190930192909101906130aa565b61313890600b8b016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b8a612afa565b015190508a80612ab9565b9250600a8a016000526020600020906000935b601f19841685106131a0576001945083601f19811610613187575b505050811b01600a880155612ad1565b015160001960f88460031b161c191690558a8080613177565b8181015183556020948501946001909301929091019061315c565b6131ea90600a8c016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b8b612aa2565b015190508b80612a61565b925060098b016000526020600020906000935b601f1984168510613252576001945083601f19811610613239575b505050811b016009890155612a79565b015160001960f88460031b161c191690558b8080613229565b8181015183556020948501946001909301929091019061320e565b61329c9060098d016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b8c612a4a565b015190508c80612a09565b925060088c016000526020600020906000935b601f1984168510613304576001945083601f198116106132eb575b505050811b0160088a0155612a21565b015160001960f88460031b161c191690558c80806132db565b818101518355602094850194600190930192909101906132c0565b600861334d92016000526020600020601f850160051c810191602086106103f157601f0160051c019061409e565b8b8e6129f1565b60405162461bcd60e51b815260206004820152603c60248201527f4f6e6c792061646d696e206f72207468652075736572207468656d73656c766560448201527f732063616e2075706461746520636f6d70616e792064657461696c73000000006064820152608490fd5b50336001600160a01b038916146129a9565b503360005260016020526104386133f5600460406000200160405192838092613f78565b60208151910120613404614031565b60208151910120146129a2565b3461011a57600036600319011261011a57604051806003548083526020809301809160036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9060005b868282106134bc57868661347382880383613e7a565b604051928392818401908285525180915260408401929160005b82811061349c57505050500390f35b83516001600160a01b03168552869550938101939281019260010161348d565b83546001600160a01b03168552909301926001928301920161345d565b3461011a57602036600319011261011a576001600160a01b036134fa613de5565b166000526001602052602061043861351f600460406000200160405192838092613f78565b81815191012061279d614031565b3461011a57608036600319011261011a57613546613de5565b6001600160401b0360243581811161011a57613566903690600401613e9b565b9160443582811161011a5761357f903690600401613e9b565b9060643583811161011a57613598903690600401613e9b565b60018060a01b03809216938460005260016020938185526135c0610274604060002054613f3e565b6000541633148015613a7c575b8015613a73575b15613a0857856000528084526104386135fa600260406000200160405192838092613f78565b86815186808401918220938951828b019581872003613925575b5050505090506000528084528060406000200187518381116103fb578061363b8354613f3e565b99601f9a8b81116138f7575b5087908b831160011461389457600092613889575b5050600019600383901b1c191690831b1790555b85600052808452600260406000200185518381116103fb576136928254613f3e565b89811161385b575b5080868a82116001146137f9576000916137ee575b50600019600383901b1c191690831b1790555b8560005280845260036040600020019280519283116103fb576136e58454613f3e565b8881116137b6575b50849783116001146137465782916000805160206141978339815191529798839260009461373b575b50501b916000199060031b1c1916179055610326604051928284938452830190613e1e565b015192508980613716565b601f9291921982169784600052856000209160005b8a81106137a1575083600080516020614197833981519152999a10613788575b505050811b019055612292565b015160001960f88460031b161c1916905587808061377b565b8183015184559285019291870191870161375b565b6137df9085600052866000208a80870160051c8201928988106137e5575b0160051c019061409e565b886136ed565b925081926137d4565b90508701518a6136af565b849250601f1982169084600052886000209160005b8a8c83831061384657505050831161382d575b5050811b0190556136c2565b89015160001960f88460031b161c191690558a80613821565b8401518555889690940193928301920161380e565b6138839083600052876000208b80850160051c8201928a86106137e5570160051c019061409e565b8961369a565b015190508a8061365c565b90859350601f1983169185600052896000209260005b8b8282106138e157505084116138c8575b505050811b019055613670565b015160001960f88460031b161c191690558a80806138bb565b83850151865589979095019493840193016138aa565b61391f9085600052896000208d80860160051c8201928c87106137e5570160051c019061409e565b8b613647565b6139ec936139b99261395860ff84878b819761394660405194858094613dfb565b81016004815203019020541615614052565b8c89613997858b6040518281885161397181838d613dfb565b810160048152030190209460ff1995868154169055604051938492839251928391613dfb565b8101600481520301902091825416179055604051938492839251928391613dfb565b81016002815203019020936bffffffffffffffffffffffff60a01b94858154169055604051809381928c51928391613dfb565b8101600281520301902091825416179055878681868180613614565b60405162461bcd60e51b815260048101859052603960248201527f4f6e6c792061646d696e206f72207468652075736572207468656d73656c766560448201527f732063616e2075706461746520757365722064657461696c73000000000000006064820152608490fd5b508533146135d4565b5033600052808452610438613a9e600460406000200160405192838092613f78565b848151910120613aac614031565b858151910120146135cd565b3461011a57602036600319011261011a576001600160a01b03613ad9613de5565b1660005260016020526040600020613af082613e43565b60405180613afe8184613f78565b03613b099082613e7a565b825260405180613b1c8160018501613f78565b03613b279082613e7a565b602083015260405180613b3d8160028501613f78565b03613b489082613e7a565b604083015260405180806003840190613b6091613f78565b03613b6b9082613e7a565b606083015260405180613b818160048501613f78565b03613b8c9082613e7a565b6080830152600581015460ff16151560a083015260405180613bb18160068501613f78565b03613bbc9082613e7a565b60c0830152600781015460e08301526040519182613bdd8160088501613f78565b03613be89084613e7a565b61010081810193845260405180613c028160098701613f78565b03613c0d9082613e7a565b61012091828401918252604051948580600a830190613c2b91613f78565b03613c369087613e7a565b6101409687968787019081526040518080600b860190613c5591613f78565b03613c609082613e7a565b6101608801908152600c84015461018089019081526040519182613c8781600d8901613f78565b03613c929084613e7a565b6101a08a019283526040519384613cac81600e8a01613f78565b03613cb79086613e7a565b6101c08b019485526040519586613cd181600f8b01613f78565b03613cdc9088613e7a565b6101e08c019687526040519788613cf68160108401613f78565b03613d01908a613e7a565b6102008d019889526040519c8d80601181940190613d1e91613f78565b03613d299083613e7a565b61022001525198519051915192519351945195519651986040519d8e9d8e528d01613d5391613e1e565b8c810360208e0152613d6491613e1e565b8b810360408d0152613d7591613e1e565b8a810360608c0152613d8691613e1e565b9060808a015288810360a08a0152613d9d91613e1e565b87810360c0890152613dae91613e1e565b86810360e0880152613dbf91613e1e565b9085820390860152613dd091613e1e565b9083820390840152613de191613e1e565b0390f35b600435906001600160a01b038216820361011a57565b60005b838110613e0e5750506000910152565b8181015183820152602001613dfe565b90602091613e3781518092818552858086019101613dfb565b601f01601f1916010190565b61024081019081106001600160401b038211176103fb57604052565b604081019081106001600160401b038211176103fb57604052565b90601f801991011681019081106001600160401b038211176103fb57604052565b81601f8201121561011a578035906001600160401b0382116103fb5760405192613ecf601f8401601f191660200185613e7a565b8284526020838301011161011a57816000926020809301838601378301015290565b600354811015613f285760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b90600182811c92168015613f6e575b6020831014613f5857565b634e487b7160e01b600052602260045260246000fd5b91607f1691613f4d565b9060009291805491613f8983613f3e565b918282526001938481169081600014613feb5750600114613fab575b50505050565b90919394506000526020928360002092846000945b838610613fd7575050505001019038808080613fa5565b805485870183015294019385908201613fc0565b9294505050602093945060ff191683830152151560051b01019038808080613fa5565b6040519061401b82613e5f565b600782526637b33334b1b2b960c91b6020830152565b6040519061403e82613e5f565b600582526430b236b4b760d91b6020830152565b1561405957565b60405162461bcd60e51b815260206004820152601760248201527f557365726e616d6520616c7265616479206578697374730000000000000000006044820152606490fd5b8181106140a9575050565b6000815560010161409e565b156140bc57565b60405162461bcd60e51b8152602060048201526013602482015272155cd95c88191bd95cc81b9bdd08195e1a5cdd606a1b6044820152606490fd5b156140fe57565b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b6141578154613f3e565b9081614161575050565b81601f60009311600114614173575055565b908083918252614192601f60208420940160051c84016001850161409e565b555556fed6136f3cad7c60bfc24bbf1548f39f766ca8bce104bf9adde3deb6237dec51dfa264697066735822122022f6cacf8a5d4e8d780a5ab8740111f219e22ac15614e8f99bb28fd0353ae65264736f6c63430008140033","opcodes":"CALLVALUE PUSH3 0x17DA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x2C0 PUSH1 0x40 MSTORE PUSH3 0x27 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0x7 DUP2 MSTORE PUSH7 0x61646D696E2D31 PUSH1 0xC8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 MSTORE PUSH3 0x48 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x29BCB9BA32B69020B236B4B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 MSTORE PUSH3 0x6E PUSH3 0x17DF JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xC0 MSTORE PUSH3 0x8D PUSH3 0x17DF JUMP JUMPDEST PUSH1 0x14 DUP2 MSTORE PUSH32 0x61646D696E407472757374636861696E2E636F6D000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xE0 MSTORE PUSH3 0xC4 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x100 MSTORE PUSH1 0x1 PUSH2 0x120 MSTORE PUSH3 0xEA PUSH3 0x17FF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x140 MSTORE TIMESTAMP PUSH2 0x160 MSTORE PUSH3 0x101 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0xA DUP2 MSTORE PUSH10 0x2A393AB9BA21B430B4B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x180 MSTORE PUSH3 0x126 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x5443303031 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x1A0 MSTORE PUSH3 0x146 PUSH3 0x17FF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x1C0 MSTORE PUSH3 0x158 PUSH3 0x17FF JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH2 0x1E0 MSTORE PUSH2 0x7E7 PUSH2 0x200 MSTORE PUSH3 0x171 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0xD DUP2 MSTORE PUSH13 0x426C6F636B636861696E204851 PUSH1 0x98 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x220 MSTORE PUSH3 0x199 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0xC DUP2 MSTORE PUSH12 0x111958D95B9D1C985B185B99 PUSH1 0xA2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x240 MSTORE PUSH3 0x1C0 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0xB DUP2 MSTORE PUSH11 0x43727970746F2043697479 PUSH1 0xA8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x260 MSTORE PUSH3 0x1E6 PUSH3 0x17DF JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH6 0x30303030303 PUSH1 0xD4 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x280 MSTORE PUSH3 0x207 PUSH3 0x17FF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MSTORE PUSH2 0x2A0 SWAP2 SWAP1 SWAP2 MSTORE CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x80 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI DUP3 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND ISZERO PUSH3 0x17CF JUMPI JUMPDEST PUSH1 0x1 AND PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x177A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x1709 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x16FD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP2 SSTORE JUMPDEST PUSH1 0xA0 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x16F2 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x169A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x1623 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1617 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP3 ADD SSTORE JUMPDEST PUSH1 0xC0 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x2 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x160C JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x15B4 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x153D JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1531 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP3 ADD SSTORE JUMPDEST PUSH1 0xE0 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x3 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1526 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x14CE JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x1457 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x144B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP3 ADD SSTORE JUMPDEST PUSH2 0x100 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x4 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1440 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x13E8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x1371 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1365 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP3 ADD SSTORE JUMPDEST PUSH2 0x120 MLOAD PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO PUSH1 0xFF AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x140 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x6 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x135A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x1302 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x128B JUMPI PUSH1 0x0 SWAP3 PUSH3 0x127F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP3 ADD SSTORE JUMPDEST PUSH2 0x160 MLOAD PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x180 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x8 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1274 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x121C JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x11A5 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x1199 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP3 ADD SSTORE JUMPDEST PUSH2 0x1A0 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x9 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x118E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x1136 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x10BF JUMPI PUSH1 0x0 SWAP3 PUSH3 0x10B3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 DUP3 ADD SSTORE JUMPDEST PUSH2 0x1C0 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0xA DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x10A8 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0x1050 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xFD9 JUMPI PUSH1 0x0 SWAP3 PUSH3 0xFCD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA DUP3 ADD SSTORE JUMPDEST PUSH2 0x1E0 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0xB DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xFC2 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xF6A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xEF3 JUMPI PUSH1 0x0 SWAP3 PUSH3 0xEE7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB DUP3 ADD SSTORE JUMPDEST PUSH2 0x200 MLOAD PUSH1 0xC DUP3 ADD SSTORE PUSH2 0x220 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0xD DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xEDC JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xE84 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xE0D JUMPI PUSH1 0x0 SWAP3 PUSH3 0xE01 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD DUP3 ADD SSTORE JUMPDEST PUSH2 0x240 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0xE DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xDF6 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xD9E JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xD27 JUMPI PUSH1 0x0 SWAP3 PUSH3 0xD1B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE DUP3 ADD SSTORE JUMPDEST PUSH2 0x260 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0xF DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xD10 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xCB8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xC41 JUMPI PUSH1 0x0 SWAP3 PUSH3 0xC35 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF DUP3 ADD SSTORE JUMPDEST PUSH2 0x280 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x10 DUP4 ADD SLOAD SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0xC2A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0xB2E JUMPI DUP2 PUSH1 0x1F DUP5 SWAP4 GT PUSH3 0xBD2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xB5B JUMPI PUSH1 0x0 SWAP3 PUSH3 0xB4F JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 DUP3 ADD SSTORE JUMPDEST PUSH2 0x2A0 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH3 0xA4B JUMPI PUSH1 0x11 DUP4 ADD SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0xB44 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH3 0xB2E JUMPI PUSH1 0x1F DUP2 GT PUSH3 0xAE2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xA6D JUMPI PUSH1 0x11 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH3 0xA61 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP2 ADD SSTORE JUMPDEST PUSH1 0x25 PUSH1 0x40 MLOAD PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x2 PUSH1 0x5 DUP3 ADD MSTORE KECCAK256 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x25 PUSH1 0x40 MLOAD PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL DUP2 MSTORE PUSH1 0x4 PUSH1 0x5 DUP3 ADD MSTORE KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH3 0xA4B JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x3 SSTORE DUP2 LT ISZERO PUSH3 0xA35 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x61646D696E2D31 PUSH1 0xC8 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x5 SWAP1 DUP3 ADD MSTORE PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH32 0x509C70F523067009F7DB7F46DB6956D7AF8B679323680DC3821A8BAD001AC1E1 PUSH1 0xE0 DUP3 ADD SWAP2 DUP1 DUP4 SUB PUSH1 0x40 DUP3 ADD MSTORE DUP1 PUSH3 0xA22 CALLER SWAP5 PUSH1 0x40 SWAP1 PUSH1 0x5 DUP2 MSTORE PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH1 0x40 MLOAD PUSH2 0x41EC SWAP1 DUP2 PUSH3 0x1820 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x8DD JUMP JUMPDEST SWAP1 PUSH1 0x11 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH3 0xAC9 JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH1 0x11 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0xAAF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP2 ADD SSTORE PUSH3 0x8F3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xAA0 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH3 0xA7E JUMP JUMPDEST PUSH1 0x11 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0xB26 JUMPI JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xB19 JUMPI POP POP PUSH3 0x8BF JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xB01 JUMP JUMPDEST POP DUP1 PUSH3 0xB01 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0x8AB JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x869 JUMP JUMPDEST SWAP3 POP PUSH1 0x10 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0xBB6 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0xB9C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 DUP3 ADD SSTORE PUSH3 0x881 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xB8B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xB6E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x10 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0xC22 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xC12 JUMPI POP POP PUSH3 0x850 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0xBFA JUMP JUMPDEST POP DUP1 PUSH3 0xBF4 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x83A JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x7F7 JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0xC9C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0xC82 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF DUP3 ADD SSTORE PUSH3 0x80F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xC71 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xC54 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xF DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0xD08 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xCF8 JUMPI POP POP PUSH3 0x7DE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0xCE0 JUMP JUMPDEST POP DUP1 PUSH3 0xCDA JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x7C8 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x785 JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0xD82 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0xD68 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE DUP3 ADD SSTORE PUSH3 0x79D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xD57 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xD3A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xE DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0xDEE JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xDDE JUMPI POP POP PUSH3 0x76C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0xDC6 JUMP JUMPDEST POP DUP1 PUSH3 0xDC0 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x756 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x713 JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0xE68 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0xE4E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD DUP3 ADD SSTORE PUSH3 0x72B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xE3D JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xE20 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xD DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0xED4 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xEC4 JUMPI POP POP PUSH3 0x6FA JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0xEAC JUMP JUMPDEST POP DUP1 PUSH3 0xEA6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x6E4 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x698 JUMP JUMPDEST SWAP3 POP PUSH1 0xB DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0xF4E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0xF34 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB DUP3 ADD SSTORE PUSH3 0x6B0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xF23 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xF06 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xB DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0xFBA JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0xFAA JUMPI POP POP PUSH3 0x67F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0xF92 JUMP JUMPDEST POP DUP1 PUSH3 0xF8C JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x669 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x626 JUMP JUMPDEST SWAP3 POP PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x1034 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x101A JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP3 ADD SSTORE PUSH3 0x63E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1009 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0xFEC JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0xA DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x10A0 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x1090 JUMPI POP POP PUSH3 0x60D JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x1078 JUMP JUMPDEST POP DUP1 PUSH3 0x1072 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x5F7 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x5B4 JUMP JUMPDEST SWAP3 POP PUSH1 0x9 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x111A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x1100 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 DUP3 ADD SSTORE PUSH3 0x5CC JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x10EF JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x10D2 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x9 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x1186 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x1176 JUMPI POP POP PUSH3 0x59B JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x115E JUMP JUMPDEST POP DUP1 PUSH3 0x1158 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x585 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x542 JUMP JUMPDEST SWAP3 POP PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x1200 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x11E6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP3 ADD SSTORE PUSH3 0x55A JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x11D5 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x11B8 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x8 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x126C JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x125C JUMPI POP POP PUSH3 0x529 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x1244 JUMP JUMPDEST POP DUP1 PUSH3 0x123E JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x513 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x4C7 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x12E6 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x12CC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 DUP3 ADD SSTORE PUSH3 0x4DF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x12BB JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x129E JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x6 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x1352 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x1342 JUMPI POP POP PUSH3 0x4AE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x132A JUMP JUMPDEST POP DUP1 PUSH3 0x1324 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x498 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x43B JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x13CC JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x13B2 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP3 ADD SSTORE PUSH3 0x453 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x13A1 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1384 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x4 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x1438 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x1428 JUMPI POP POP PUSH3 0x422 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x1410 JUMP JUMPDEST POP DUP1 PUSH3 0x140A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x40C JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x3C9 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x14B2 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x1498 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP3 ADD SSTORE PUSH3 0x3E1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1487 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x146A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x3 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x151E JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x150E JUMPI POP POP PUSH3 0x3B0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x14F6 JUMP JUMPDEST POP DUP1 PUSH3 0x14F0 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x39A JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x358 JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x1598 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x157E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP3 ADD SSTORE PUSH3 0x370 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x156D JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1550 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x1604 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x15F4 JUMPI POP POP PUSH3 0x33F JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x15DC JUMP JUMPDEST POP DUP1 PUSH3 0x15D6 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x329 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x2E7 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x167E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x1664 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP3 ADD SSTORE PUSH3 0x2FF JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1653 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1636 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x1 DUP5 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x16EA JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x16DA JUMPI POP POP PUSH3 0x2CE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x16C2 JUMP JUMPDEST POP DUP1 PUSH3 0x16BC JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x2B8 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x279 JUMP JUMPDEST SWAP3 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH3 0x175E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH3 0x1744 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH3 0x28E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x1736 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x1719 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH3 0x17C7 JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH3 0x17B7 JUMPI POP POP PUSH3 0x260 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH3 0x179F JUMP JUMPDEST POP DUP1 PUSH3 0x1799 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x247 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0xA4B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0xA4B JUMPI PUSH1 0x40 MSTORE JUMP INVALID PUSH2 0x120 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x558D3E9 EQ PUSH2 0x3AB8 JUMPI POP DUP1 PUSH4 0xDA4578B EQ PUSH2 0x352D JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x34D9 JUMPI DUP1 PUSH4 0x2F330023 EQ PUSH2 0x3411 JUMPI DUP1 PUSH4 0x37A1BBA2 EQ PUSH2 0x2832 JUMPI DUP1 PUSH4 0x4209FFF1 EQ PUSH2 0x27EE JUMPI DUP1 PUSH4 0x502C9BD5 EQ PUSH2 0x27AC JUMPI DUP1 PUSH4 0x6816442D EQ PUSH2 0x2749 JUMPI DUP1 PUSH4 0x69C212F6 EQ PUSH2 0x24A3 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x23D4 JUMPI DUP1 PUSH4 0x98575188 EQ PUSH2 0x2097 JUMPI DUP1 PUSH4 0x9D4D1342 EQ PUSH2 0xB71 JUMPI DUP1 PUSH4 0x9F42AF63 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xB979CC2F EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF309E3F9 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xF825F143 EQ PUSH2 0x11F JUMPI PUSH4 0xF851A440 EQ PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x151 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST DUP2 PUSH2 0x165 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH1 0xFF PUSH2 0x1D2 PUSH1 0x20 PUSH2 0x1BF DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x201 PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x230 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x411 JUMPI JUMPDEST PUSH2 0x252 SWAP1 PUSH2 0x40F7 JUMP JUMPDEST AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x6 PUSH1 0x20 SWAP5 DUP4 DUP7 MSTORE PUSH2 0x27B PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST ISZERO ISZERO PUSH2 0x40B5 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP4 DUP7 MSTORE PUSH2 0x2A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SWAP2 DUP7 MLOAD SWAP2 DUP3 GT PUSH2 0x3FB JUMPI PUSH2 0x2B5 DUP4 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3C0 JUMPI JUMPDEST POP DUP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x336 JUMPI SWAP2 DUP1 DUP1 PUSH2 0x326 SWAP6 SWAP4 PUSH32 0x925B0343B9085747D26A9125C88206057343A6E2DB8D4FE70CEE25DA0220AAC1 SWAP10 SWAP11 SWAP6 PUSH1 0x0 SWAP4 PUSH2 0x32B JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST DUP7 ADD MLOAD SWAP3 POP DUP12 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3AB JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x326 SWAP7 SWAP5 PUSH32 0x925B0343B9085747D26A9125C88206057343A6E2DB8D4FE70CEE25DA0220AAC1 SWAP11 SWAP12 SWAP7 SWAP5 LT PUSH2 0x392 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x310 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 PUSH2 0x386 JUMP JUMPDEST DUP11 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x3EB SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP9 DUP7 LT PUSH2 0x3F1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP8 PUSH2 0x2BE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x252 PUSH2 0x438 PUSH2 0x43F PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST SUB DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x44E PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x249 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x49C PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BA DUP2 DUP5 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x4C5 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH2 0x4DA DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0xA0 MLOAD SWAP1 PUSH2 0x4E8 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH2 0x4FD DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0x80 MLOAD SWAP1 PUSH2 0x50B SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x51C DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x527 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x538 DUP2 PUSH1 0x4 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x543 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x6 DUP9 ADD SWAP1 PUSH2 0x55E SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x569 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x580 DUP2 PUSH1 0x8 DUP12 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x58B SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x59D DUP2 PUSH1 0x9 DUP13 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x5A8 SWAP1 DUP7 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x5BA DUP2 PUSH1 0xA DUP14 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x5C5 SWAP1 DUP9 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x5D7 DUP2 PUSH1 0xB DUP15 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x5E2 SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC DUP12 ADD SLOAD SWAP10 PUSH1 0x40 MLOAD DUP1 PUSH1 0xD DUP2 SWAP15 ADD SWAP1 PUSH2 0x5FB SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x606 SWAP1 DUP14 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 SWAP15 PUSH1 0xE DUP3 SWAP2 ADD SWAP1 PUSH2 0x61B SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x625 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP14 DUP15 DUP1 PUSH2 0x638 DUP2 PUSH1 0xF DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x642 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH2 0x657 DUP2 PUSH1 0x10 DUP5 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0xC0 MLOAD SWAP1 PUSH2 0x665 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 DUP2 PUSH1 0xE0 MSTORE PUSH1 0x11 ADD SWAP1 PUSH2 0x67B SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0xE0 MLOAD SWAP1 PUSH2 0x689 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 MSTORE PUSH2 0x240 DUP1 SWAP2 MSTORE PUSH2 0x100 MLOAD ADD PUSH2 0x6A5 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x20 ADD MSTORE PUSH1 0xA0 MLOAD SWAP1 PUSH2 0x6BE SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x40 ADD MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH2 0x6D7 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x60 ADD MSTORE PUSH2 0x6EC SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x80 ADD MSTORE PUSH2 0x701 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH2 0x100 MLOAD PUSH1 0xA0 ADD MSTORE PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0xC0 ADD MSTORE PUSH2 0x721 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH2 0x100 MLOAD PUSH1 0xE0 ADD MSTORE PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x100 ADD MSTORE PUSH2 0x740 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x120 ADD MSTORE PUSH2 0x756 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x140 ADD MSTORE PUSH2 0x76C SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x160 ADD MSTORE PUSH2 0x782 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH2 0x100 MLOAD PUSH2 0x180 ADD MSTORE PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x1A0 ADD MSTORE PUSH2 0x7A2 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x1C0 ADD MSTORE PUSH2 0x7B8 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x1E0 ADD MSTORE PUSH2 0x7CE SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x200 ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 PUSH2 0x7E8 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x220 ADD MSTORE PUSH2 0x100 MLOAD SWAP1 PUSH1 0xE0 MLOAD SWAP1 PUSH2 0x807 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SUB PUSH2 0x100 MLOAD RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x83F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST DUP2 PUSH2 0x853 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB37 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x88B DUP2 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x899 DUP2 DUP6 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x8A4 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x8B7 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x8C2 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x8D9 DUP2 PUSH1 0x2 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x8E4 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x3 DUP7 ADD SWAP1 PUSH2 0x8FC SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x907 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x91F DUP2 PUSH1 0x4 DUP9 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x92A SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP2 PUSH1 0xA0 DUP6 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 PUSH1 0x6 DUP10 ADD SWAP1 PUSH2 0x957 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x962 SWAP1 DUP7 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD SWAP5 DUP6 MSTORE PUSH1 0x7 DUP8 ADD SLOAD SWAP6 PUSH1 0xE0 DUP2 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 PUSH1 0x8 DUP4 ADD SWAP1 PUSH2 0x98A SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x995 SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x100 SWAP9 DUP10 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x9 DUP5 ADD SWAP1 PUSH2 0x9B0 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x9BB SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x9D2 DUP2 PUSH1 0xA DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x9DD SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x9F4 DUP2 PUSH1 0xB DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x9FF SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA21 DUP2 PUSH1 0xD DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA2C SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA43 DUP2 PUSH1 0xE DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA4E SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA65 DUP2 PUSH1 0xF DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA70 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA87 DUP2 PUSH1 0x10 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA92 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x11 DUP2 SWAP4 ADD SWAP1 PUSH2 0xAAB SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xAB6 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x220 DUP3 ADD MSTORE MLOAD SWAP1 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD ISZERO ISZERO SWAP5 MLOAD SWAP6 MLOAD SWAP7 DUP1 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE DUP11 ADD MSTORE DUP9 ADD PUSH2 0xAE3 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP8 DUP2 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0xAF4 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0xB05 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0xB16 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xB2D SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155CD95C9B985B59481B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH2 0x200 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0xB8B PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xBAA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xBCA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xBEA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC0A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC2A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP5 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC4A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC69 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC89 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x124 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xCAA CALLDATASIZE PUSH2 0x124 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x164 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xCCB CALLDATASIZE PUSH2 0x164 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x184 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xCED CALLDATASIZE PUSH2 0x184 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1A4 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xD0F CALLDATASIZE PUSH2 0x1A4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1C4 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xD31 CALLDATASIZE PUSH2 0x1C4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1E4 CALLDATALOAD GT PUSH2 0x11A JUMPI DUP14 SWAP9 PUSH2 0xD55 CALLDATASIZE PUSH2 0x1E4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP10 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xD65 PUSH2 0x400E JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x1FFA JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD94 SWAP1 PUSH2 0x3F3E JUMP JUMPDEST PUSH2 0x1FA9 JUMPI DUP15 DUP13 SWAP2 DUP15 PUSH1 0x40 MLOAD DUP1 DUP3 MLOAD DUP2 DUP2 PUSH1 0x20 DUP7 ADD SWAP2 PUSH2 0xDB2 SWAP3 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDCC SWAP1 PUSH2 0x4052 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 PUSH2 0xDDB PUSH2 0x400E JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP4 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP2 PUSH2 0xDF3 DUP4 PUSH2 0x3E43 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP2 ADD LT PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB LT OR PUSH2 0x3FB JUMPI PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0xC0 DUP12 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP12 ADD MSTORE PUSH2 0x100 DUP11 ADD MSTORE PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x140 DUP9 ADD MSTORE PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x180 DUP8 ADD MSTORE PUSH2 0x1A0 DUP7 ADD MSTORE PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1E0 DUP5 ADD MSTORE PUSH2 0x200 DUP4 ADD MSTORE PUSH2 0x220 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xEB4 DUP6 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1F77 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F0B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1F00 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xF0E PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1ECB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1E59 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E4E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xF6B PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1E19 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1DA7 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1D9C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xFC8 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D67 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1CF5 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1CEA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1025 PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1CB5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1C43 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1C38 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH2 0x107C PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x10A1 PUSH1 0x6 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C03 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1B91 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1B86 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP4 ADD SSTORE JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1109 PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B51 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1ADF JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1AD4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP4 ADD SSTORE JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1167 PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A9F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1A2D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1A22 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 DUP4 ADD SSTORE JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x11C5 PUSH1 0xA DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19ED JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x197B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1970 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA DUP4 ADD SSTORE JUMPDEST PUSH2 0x160 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1223 PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x193B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x18C9 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x18BE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB DUP4 ADD SSTORE JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0xC DUP4 ADD SSTORE PUSH2 0x1A0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x128C PUSH1 0xD DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1889 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x180C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD DUP4 ADD SSTORE JUMPDEST PUSH2 0x1C0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x12EA PUSH1 0xE DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x17D7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1765 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x175A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE DUP4 ADD SSTORE JUMPDEST PUSH2 0x1E0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1348 PUSH1 0xF DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1725 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x16B3 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x16A8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF DUP4 ADD SSTORE JUMPDEST PUSH2 0x200 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI PUSH2 0x13A4 PUSH1 0x10 DUP6 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1673 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x15FF JUMPI PUSH2 0x220 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x15F4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 DUP5 ADD SSTORE JUMPDEST ADD MLOAD SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI PUSH1 0x11 DUP3 SWAP2 ADD SWAP3 PUSH2 0x1407 DUP5 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15C2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x155C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1551 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x3FB JUMPI DUP4 PUSH2 0x1538 PUSH2 0x326 SWAP3 PUSH2 0x14B0 PUSH32 0x509C70F523067009F7DB7F46DB6956D7AF8B679323680DC3821A8BAD001AC1E1 SWAP8 PUSH2 0x1491 DUP9 PUSH1 0x1 PUSH2 0x152A SWAP11 ADD PUSH1 0x3 SSTORE PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x14C5 DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 MLOAD PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH2 0x1501 DUP2 DUP4 DUP8 DUP7 ADD PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x60 DUP8 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x3E1E JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP6 PUSH2 0x3E1E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15AA JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1591 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x143C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x156E JUMP JUMPDEST PUSH2 0x15EE SWAP1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x1410 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x13CB JUMP JUMPDEST SWAP1 PUSH1 0x10 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x165B JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x220 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1642 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 DUP5 ADD SSTORE PUSH2 0x13E3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x1632 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1610 JUMP JUMPDEST PUSH2 0x16A2 SWAP1 PUSH1 0x10 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x13AD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1368 JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x170A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x16F1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF DUP4 ADD SSTORE PUSH2 0x1380 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x16E1 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x1754 SWAP1 PUSH1 0xF DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1351 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x130A JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x17BC JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x17A3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE DUP4 ADD SSTORE PUSH2 0x1322 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1793 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x1806 SWAP1 PUSH1 0xE DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x12F3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x186E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1855 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD DUP4 ADD SSTORE PUSH2 0x12C4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1845 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x18B8 SWAP1 PUSH1 0xD DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1295 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1243 JUMP JUMPDEST SWAP3 POP PUSH1 0xB DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1920 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1907 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB DUP4 ADD SSTORE PUSH2 0x125B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x18F7 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x196A SWAP1 PUSH1 0xB DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x122C JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x11E5 JUMP JUMPDEST SWAP3 POP PUSH1 0xA DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x19D2 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x19B9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP4 ADD SSTORE PUSH2 0x11FD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x19A9 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x1A1C SWAP1 PUSH1 0xA DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x11CE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1187 JUMP JUMPDEST SWAP3 POP PUSH1 0x9 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1A84 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1A6B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x119F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1A5B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x1ACE SWAP1 PUSH1 0x9 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1170 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1129 JUMP JUMPDEST SWAP3 POP PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1B36 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1B1D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x1141 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1B0D JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x1B80 SWAP1 PUSH1 0x8 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1112 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x10C1 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1BE8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1BCF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 DUP4 ADD SSTORE PUSH2 0x10D9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1BBF JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1C32 SWAP1 PUSH1 0x6 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x10AA JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1045 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1C9A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1C81 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x105D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1C71 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1C56 JUMP JUMPDEST PUSH2 0x1CE4 SWAP1 PUSH1 0x4 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x102E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1D4C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1D33 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x1000 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1D23 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0x1D96 SWAP1 PUSH1 0x3 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xFD1 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xF8B JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1DFE JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1DE5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xFA3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x1E48 SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xF74 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1EB0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1E97 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xF46 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1E87 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH2 0x1EFA SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xF17 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xED4 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1F5C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1F43 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xEE9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1F36 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1FA3 SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792065786973747320666F72207468697320616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x2057 JUMPI JUMPDEST PUSH2 0xD72 JUMPI PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E207265676973746572206F66666963657273 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x438 PUSH2 0x207B PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x208A PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x200F JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH2 0x20B1 PUSH2 0x3DE5 JUMP JUMPDEST SWAP1 PUSH2 0x2133 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 DUP2 PUSH1 0x0 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x2392 JUMPI JUMPDEST PUSH2 0x20D5 SWAP1 PUSH2 0x40F7 JUMP JUMPDEST AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 SWAP5 DUP2 DUP4 MSTORE PUSH2 0x20F3 PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP2 DUP4 MSTORE PUSH2 0x2182 DUP4 PUSH2 0x438 PUSH2 0x2118 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP5 DUP3 MSTORE PUSH2 0x213A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP9 DUP10 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST SUB DUP9 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD SWAP2 DUP4 DUP2 DUP2 DUP5 ADD SWAP5 PUSH2 0x2152 DUP2 DUP4 DUP9 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 SWAP2 JUMPDEST PUSH2 0x22A6 JUMPI JUMPDEST POP POP PUSH2 0x2292 PUSH1 0x11 DUP5 SWAP6 PUSH32 0x89FCFA7C85BF81269953B23469028AFBDB9913B80AF31B7C931A42009FB252BD SWAP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH2 0x21E7 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x21E0 DUP4 PUSH2 0x414D JUMP JUMPDEST DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x21F3 PUSH1 0x2 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x21FF PUSH1 0x3 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x220B PUSH1 0x4 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x221E PUSH1 0x6 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x2231 PUSH1 0x8 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x223D PUSH1 0x9 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2249 PUSH1 0xA DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2255 PUSH1 0xB DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP3 ADD SSTORE PUSH2 0x2268 PUSH1 0xD DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2274 PUSH1 0xE DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2280 PUSH1 0xF DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x228C PUSH1 0x10 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x326 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 DUP5 LT ISZERO PUSH2 0x238B JUMPI DUP7 DUP4 PUSH2 0x22BD DUP7 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP6 SHL SHR AND EQ PUSH2 0x22F4 JUMPI POP POP PUSH1 0x0 NOT DUP3 EQ PUSH2 0x22DE JUMPI DUP6 DUP1 SWAP3 ADD SWAP2 PUSH2 0x2198 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP6 SWAP7 SWAP1 SWAP6 PUSH1 0x0 NOT SWAP4 DUP2 DUP6 ADD SWAP2 DUP3 GT PUSH2 0x22DE JUMPI PUSH2 0x1491 DUP5 PUSH2 0x2316 PUSH2 0x2323 SWAP5 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP12 SHL SHR AND SWAP2 PUSH2 0x3EF1 JUMP JUMPDEST DUP6 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x2375 JUMPI PUSH32 0x89FCFA7C85BF81269953B23469028AFBDB9913B80AF31B7C931A42009FB252BD SWAP7 PUSH2 0x2292 SWAP5 PUSH1 0x11 SWAP5 ADD SWAP2 PUSH2 0x2360 DUP4 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 DUP5 SHL SHL NOT AND SWAP1 SSTORE SSTORE SWAP6 SWAP5 POP PUSH2 0x219D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x219D JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH2 0x20D5 PUSH2 0x438 PUSH2 0x23B8 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP6 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x23C6 PUSH2 0x4031 JUMP JUMPDEST DUP7 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x20CC JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x23ED PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLER DUP3 DUP5 AND EQ DUP1 ISZERO PUSH2 0x245E JUMPI JUMPDEST PUSH2 0x240F SWAP1 PUSH2 0x40F7 JUMP JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x2427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x240F PUSH2 0x438 PUSH2 0x2485 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2494 PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x2406 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24C4 PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x24DF DUP3 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x24ED DUP2 DUP5 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x24F8 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x250C DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2517 SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x2530 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x253B SWAP1 DUP4 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP2 DUP2 ADD SWAP3 DUP4 MSTORE MLOAD DUP1 PUSH2 0x2552 DUP2 PUSH1 0x3 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x255D SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2575 DUP2 PUSH1 0x4 DUP9 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2580 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0xA0 DUP5 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 PUSH1 0x6 DUP10 ADD SWAP1 PUSH2 0x25AD SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x25B8 SWAP1 DUP6 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD SWAP4 DUP5 MSTORE PUSH1 0x7 DUP8 ADD SLOAD SWAP5 PUSH1 0xE0 DUP2 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 PUSH1 0x8 DUP4 ADD SWAP1 PUSH2 0x25E0 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x25EB SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x100 SWAP9 DUP10 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x9 DUP5 ADD SWAP1 PUSH2 0x2606 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2611 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2628 DUP2 PUSH1 0xA DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2633 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x264A DUP2 PUSH1 0xB DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2655 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2677 DUP2 PUSH1 0xD DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2682 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2699 DUP2 PUSH1 0xE DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x26A4 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x26BB DUP2 PUSH1 0xF DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x26C6 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x26DD DUP2 PUSH1 0x10 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x26E8 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x11 DUP2 SWAP4 ADD SWAP1 PUSH2 0x2701 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x270C SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x220 DUP3 ADD MSTORE MLOAD SWAP8 MLOAD SWAP6 MLOAD SWAP1 MLOAD SWAP2 MLOAD SWAP3 MLOAD ISZERO ISZERO SWAP4 MLOAD SWAP5 MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP9 DUP9 DUP11 SWAP10 DUP11 MSTORE DUP10 ADD PUSH2 0x2738 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0xAE3 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x276A PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x438 PUSH2 0x278F PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP2 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x279D PUSH2 0x400E JUMP JUMPDEST DUP3 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH2 0x27D5 PUSH1 0x20 SWAP2 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280F PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x2828 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x284C PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x286B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x288A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x28AA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x28C9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x28E8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x2907 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x2928 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP3 PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x2949 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP5 PUSH2 0x144 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x296A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x298D PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x33D1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x33BF JUMPI JUMPDEST ISZERO PUSH2 0x3354 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP10 MLOAD SWAP1 SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 DUP12 PUSH2 0x29E8 PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x331F JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x32AD JUMPI PUSH1 0x0 SWAP3 PUSH2 0x32A2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP11 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2A41 PUSH1 0x9 DUP13 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x326D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x31FB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x31F0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 DUP10 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2A99 PUSH1 0xA DUP12 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x31BB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3149 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x313E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA DUP9 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2AF1 PUSH1 0xB DUP11 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3109 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3097 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x308C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB DUP8 ADD SSTORE JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH1 0xC DUP8 ADD SSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2B51 PUSH1 0xD DUP10 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3057 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2FE5 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2FDA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD DUP7 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2BA9 PUSH1 0xE DUP9 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2FA5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2F33 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2F28 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE DUP6 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2C01 PUSH1 0xF DUP8 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2EF3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2E81 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2E76 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF DUP5 ADD SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x10 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2C5A DUP5 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2E44 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2DDE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2DD3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x11 DUP3 ADD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3FB JUMPI PUSH2 0x2CAD DUP3 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2DA1 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2D25 JUMPI SWAP1 DUP1 PUSH2 0x326 SWAP5 SWAP4 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0x2D1A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH1 0x2 PUSH1 0x20 DUP5 ADD SWAP2 ADD PUSH2 0x3F78 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2D89 JUMPI POP SWAP7 PUSH1 0x1 SWAP3 DUP5 SWAP3 PUSH2 0x326 SWAP8 SWAP7 SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 SWAP11 LT PUSH2 0x2D70 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2CFA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2D63 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP10 SSTORE PUSH1 0x1 SWAP1 SWAP9 ADD SWAP8 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0x2DCD SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP6 PUSH2 0x2CB6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2C7A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2E2C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x2E13 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2C8F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x2E06 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2DF0 JUMP JUMPDEST PUSH2 0x2E70 SWAP1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP8 PUSH2 0x2C63 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2C21 JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2ED8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2EBF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF DUP5 ADD SSTORE PUSH2 0x2C39 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x2EAF JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH2 0x2F22 SWAP1 PUSH1 0xF DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP8 PUSH2 0x2C0A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2F8A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2F71 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE DUP6 ADD SSTORE PUSH2 0x2BE1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2F61 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2F46 JUMP JUMPDEST PUSH2 0x2FD4 SWAP1 PUSH1 0xE DUP10 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x2BB2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x2B71 JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x303C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3023 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD DUP7 ADD SSTORE PUSH2 0x2B89 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x3013 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2FF8 JUMP JUMPDEST PUSH2 0x3086 SWAP1 PUSH1 0xD DUP11 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x2B5A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x2B11 JUMP JUMPDEST SWAP3 POP PUSH1 0xB DUP10 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x30EE JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x30D5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB DUP8 ADD SSTORE PUSH2 0x2B29 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x30C5 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH2 0x3138 SWAP1 PUSH1 0xB DUP12 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP11 PUSH2 0x2AFA JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x2AB9 JUMP JUMPDEST SWAP3 POP PUSH1 0xA DUP11 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x31A0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3187 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP9 ADD SSTORE PUSH2 0x2AD1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x3177 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x315C JUMP JUMPDEST PUSH2 0x31EA SWAP1 PUSH1 0xA DUP13 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP12 PUSH2 0x2AA2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP PUSH1 0x9 DUP12 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3252 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3239 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 DUP10 ADD SSTORE PUSH2 0x2A79 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3229 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x320E JUMP JUMPDEST PUSH2 0x329C SWAP1 PUSH1 0x9 DUP14 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP13 PUSH2 0x2A4A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x2A09 JUMP JUMPDEST SWAP3 POP PUSH1 0x8 DUP13 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3304 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x32EB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP11 ADD SSTORE PUSH2 0x2A21 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x32DB JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x32C0 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x334D SWAP3 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP12 DUP15 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E206F72207468652075736572207468656D73656C7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x732063616E2075706461746520636F6D70616E792064657461696C7300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EQ PUSH2 0x29A9 JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x438 PUSH2 0x33F5 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x3404 PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x29A2 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x3 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x34BC JUMPI DUP7 DUP7 PUSH2 0x3473 DUP3 DUP9 SUB DUP4 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x349C JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x348D JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x345D JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x34FA PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x438 PUSH2 0x351F PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP2 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x279D PUSH2 0x4031 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x3546 PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x3566 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x357F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x3598 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP4 DUP2 DUP6 MSTORE PUSH2 0x35C0 PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x0 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x3A7C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x3A73 JUMPI JUMPDEST ISZERO PUSH2 0x3A08 JUMPI DUP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH2 0x438 PUSH2 0x35FA PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP7 DUP2 MLOAD DUP7 DUP1 DUP5 ADD SWAP2 DUP3 KECCAK256 SWAP4 DUP10 MLOAD DUP3 DUP12 ADD SWAP6 DUP2 DUP8 KECCAK256 SUB PUSH2 0x3925 JUMPI JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP8 MLOAD DUP4 DUP2 GT PUSH2 0x3FB JUMPI DUP1 PUSH2 0x363B DUP4 SLOAD PUSH2 0x3F3E JUMP JUMPDEST SWAP10 PUSH1 0x1F SWAP11 DUP12 DUP2 GT PUSH2 0x38F7 JUMPI JUMPDEST POP DUP8 SWAP1 DUP12 DUP4 GT PUSH1 0x1 EQ PUSH2 0x3894 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3889 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP6 MLOAD DUP4 DUP2 GT PUSH2 0x3FB JUMPI PUSH2 0x3692 DUP3 SLOAD PUSH2 0x3F3E JUMP JUMPDEST DUP10 DUP2 GT PUSH2 0x385B JUMPI JUMPDEST POP DUP1 DUP7 DUP11 DUP3 GT PUSH1 0x1 EQ PUSH2 0x37F9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x37EE JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP3 DUP1 MLOAD SWAP3 DUP4 GT PUSH2 0x3FB JUMPI PUSH2 0x36E5 DUP5 SLOAD PUSH2 0x3F3E JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x37B6 JUMPI JUMPDEST POP DUP5 SWAP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x3746 JUMPI DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP9 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x373B JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x326 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST ADD MLOAD SWAP3 POP DUP10 DUP1 PUSH2 0x3716 JUMP JUMPDEST PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND SWAP8 DUP5 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP11 DUP2 LT PUSH2 0x37A1 JUMPI POP DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 SWAP11 LT PUSH2 0x3788 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2292 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x377B JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x375B JUMP JUMPDEST PUSH2 0x37DF SWAP1 DUP6 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP11 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP9 LT PUSH2 0x37E5 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x36ED JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x37D4 JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP11 PUSH2 0x36AF JUMP JUMPDEST DUP5 SWAP3 POP PUSH1 0x1F NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP11 DUP13 DUP4 DUP4 LT PUSH2 0x3846 JUMPI POP POP POP DUP4 GT PUSH2 0x382D JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x36C2 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 PUSH2 0x3821 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x380E JUMP JUMPDEST PUSH2 0x3883 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP12 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH2 0x37E5 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x369A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x365C JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH2 0x38E1 JUMPI POP POP DUP5 GT PUSH2 0x38C8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3670 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x38BB JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x391F SWAP1 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP14 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP8 LT PUSH2 0x37E5 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP12 PUSH2 0x3647 JUMP JUMPDEST PUSH2 0x39EC SWAP4 PUSH2 0x39B9 SWAP3 PUSH2 0x3958 PUSH1 0xFF DUP5 DUP8 DUP12 DUP2 SWAP8 PUSH2 0x3946 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x4052 JUMP JUMPDEST DUP13 DUP10 PUSH2 0x3997 DUP6 DUP12 PUSH1 0x40 MLOAD DUP3 DUP2 DUP9 MLOAD PUSH2 0x3971 DUP2 DUP4 DUP14 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP5 PUSH1 0xFF NOT SWAP6 DUP7 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP5 DUP6 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 DUP7 DUP2 DUP7 DUP2 DUP1 PUSH2 0x3614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E206F72207468652075736572207468656D73656C7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x732063616E2075706461746520757365722064657461696C7300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP6 CALLER EQ PUSH2 0x35D4 JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH2 0x438 PUSH2 0x3A9E PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP5 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x3AAC PUSH2 0x4031 JUMP JUMPDEST DUP6 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x35CD JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3AD9 PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3AF0 DUP3 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x3AFE DUP2 DUP5 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B09 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP3 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3B1C DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B27 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3B3D DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B48 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x3 DUP5 ADD SWAP1 PUSH2 0x3B60 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B6B SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3B81 DUP2 PUSH1 0x4 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B8C SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3BB1 DUP2 PUSH1 0x6 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3BBC SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x3BDD DUP2 PUSH1 0x8 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3BE8 SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x100 DUP2 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3C02 DUP2 PUSH1 0x9 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C0D SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x120 SWAP2 DUP3 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 PUSH1 0xA DUP4 ADD SWAP1 PUSH2 0x3C2B SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C36 SWAP1 DUP8 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x140 SWAP7 DUP8 SWAP7 DUP8 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0xB DUP7 ADD SWAP1 PUSH2 0x3C55 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C60 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x160 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0xC DUP5 ADD SLOAD PUSH2 0x180 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x3C87 DUP2 PUSH1 0xD DUP10 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C92 SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1A0 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3CAC DUP2 PUSH1 0xE DUP11 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3CB7 SWAP1 DUP7 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1C0 DUP12 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x3CD1 DUP2 PUSH1 0xF DUP12 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3CDC SWAP1 DUP9 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1E0 DUP13 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x3CF6 DUP2 PUSH1 0x10 DUP5 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3D01 SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x200 DUP14 ADD SWAP9 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP13 DUP14 DUP1 PUSH1 0x11 DUP2 SWAP5 ADD SWAP1 PUSH2 0x3D1E SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3D29 SWAP1 DUP4 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x220 ADD MSTORE MLOAD SWAP9 MLOAD SWAP1 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP7 MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 ADD PUSH2 0x3D53 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE PUSH2 0x3D64 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x3D75 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x3D86 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP11 ADD MSTORE DUP9 DUP2 SUB PUSH1 0xA0 DUP11 ADD MSTORE PUSH2 0x3D9D SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP8 DUP2 SUB PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x3DAE SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x3DBF SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB SWAP1 DUP7 ADD MSTORE PUSH2 0x3DD0 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB SWAP1 DUP5 ADD MSTORE PUSH2 0x3DE1 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11A JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3E0E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DFE JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3E37 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x240 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x3FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x3FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x3FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x11A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3ECF PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x3E7A JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x11A JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x3F28 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3F6E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3F58 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3F4D JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x3F89 DUP4 PUSH2 0x3F3E JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x3FEB JUMPI POP PUSH1 0x1 EQ PUSH2 0x3FAB JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x3FD7 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x3FA5 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x3FC0 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x3FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x401B DUP3 PUSH2 0x3E5F JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x37B33334B1B2B9 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x403E DUP3 PUSH2 0x3E5F JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x4059 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365726E616D6520616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x40A9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x409E JUMP JUMPDEST ISZERO PUSH2 0x40BC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x4157 DUP2 SLOAD PUSH2 0x3F3E JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x4161 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x4173 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x4192 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x409E JUMP JUMPDEST SSTORE SSTORE JUMP INVALID 0xD6 SGT PUSH16 0x3CAD7C60BFC24BBF1548F39F766CA8BC 0xE1 DIV 0xBF SWAP11 0xDD 0xE3 0xDE 0xB6 0x23 PUSH30 0xEC51DFA264697066735822122022F6CACF8A5D4E8D780A5AB8740111F219 0xE2 0x2A 0xC1 JUMP EQ 0xE8 0xF9 SWAP12 0xB2 DUP16 0xD0 CALLDATALOAD GASPRICE 0xE6 MSTORE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"169:15506:12:-:0;;;1965:18;169:15506;;-1:-1:-1;;;;;;169:15506:12;1973:10;169:15506;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;;;;;;;;;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;2074:626;169:15506;;;:::i;:::-;1965:18;169:15506;;2074:626;169:15506;2328:15;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;1965:18;169:15506;;2074:626;169:15506;;;:::i;:::-;1965:18;169:15506;;2074:626;169:15506;2510:4;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;2074:626;169:15506;;;:::i;:::-;1965:18;169:15506;;;2074:626;169:15506;;;;1973:10;169:15506;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;2074:626;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;1973:10;169:15506;;;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;-1:-1:-1;;;;;;169:15506:12;1973:10;169:15506;;;;;2074:626;169:15506;;;;;;;;-1:-1:-1;;;2074:626:12;169:15506;;;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;2862:55;169:15506;;;;;;;;;;;1973:10;169:15506;1973:10;169:15506;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;2862:55;;;169:15506;;;;;;;;;;;;;1965:18;169:15506;;;;;1965:18;169:15506;;;;;1965:18;169:15506;;;;;1965:18;169:15506;;;;;-1:-1:-1;169:15506:12;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;;;;-1:-1:-1;169:15506:12;;;;;;;1965:18;169:15506;;;;;1965:18;169:15506;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;1965:18;169:15506;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;1965:18;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1965:18;169:15506;;;;-1:-1:-1;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":15845,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_string":{"entryPoint":16027,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":15902,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":16248,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":16542,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_f1aaef0d35cb26a46bccc715cd62704f9d812dcafe522c449d44d2096f7f5cdc":{"entryPoint":16398,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_f23ec0bb4210edd5cba85afd05127efcd2fc6a781bfed49188da1081670b22d8":{"entryPoint":16433,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":15867,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":16190,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":15994,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_47487":{"entryPoint":15939,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_77178":{"entryPoint":15967,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8c91":{"entryPoint":16466,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bde1":{"entryPoint":16565,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_e0ef":{"entryPoint":16631,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":16113,"id":null,"parameterSlots":1,"returnSlots":2},"storage_set_to_zero_string":{"entryPoint":16717,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH2 0x120 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x558D3E9 EQ PUSH2 0x3AB8 JUMPI POP DUP1 PUSH4 0xDA4578B EQ PUSH2 0x352D JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x34D9 JUMPI DUP1 PUSH4 0x2F330023 EQ PUSH2 0x3411 JUMPI DUP1 PUSH4 0x37A1BBA2 EQ PUSH2 0x2832 JUMPI DUP1 PUSH4 0x4209FFF1 EQ PUSH2 0x27EE JUMPI DUP1 PUSH4 0x502C9BD5 EQ PUSH2 0x27AC JUMPI DUP1 PUSH4 0x6816442D EQ PUSH2 0x2749 JUMPI DUP1 PUSH4 0x69C212F6 EQ PUSH2 0x24A3 JUMPI DUP1 PUSH4 0x75829DEF EQ PUSH2 0x23D4 JUMPI DUP1 PUSH4 0x98575188 EQ PUSH2 0x2097 JUMPI DUP1 PUSH4 0x9D4D1342 EQ PUSH2 0xB71 JUMPI DUP1 PUSH4 0x9F42AF63 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xB5CB15F7 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xB979CC2F EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xF309E3F9 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xF825F143 EQ PUSH2 0x11F JUMPI PUSH4 0xF851A440 EQ PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x151 PUSH1 0x20 SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST DUP2 PUSH2 0x165 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH1 0xFF PUSH2 0x1D2 PUSH1 0x20 PUSH2 0x1BF DUP2 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x201 PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO SWAP1 DUP2 DUP2 SUB PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x230 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x411 JUMPI JUMPDEST PUSH2 0x252 SWAP1 PUSH2 0x40F7 JUMP JUMPDEST AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x6 PUSH1 0x20 SWAP5 DUP4 DUP7 MSTORE PUSH2 0x27B PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST ISZERO ISZERO PUSH2 0x40B5 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP4 DUP7 MSTORE PUSH2 0x2A0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST ADD SWAP2 DUP7 MLOAD SWAP2 DUP3 GT PUSH2 0x3FB JUMPI PUSH2 0x2B5 DUP4 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3C0 JUMPI JUMPDEST POP DUP5 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x336 JUMPI SWAP2 DUP1 DUP1 PUSH2 0x326 SWAP6 SWAP4 PUSH32 0x925B0343B9085747D26A9125C88206057343A6E2DB8D4FE70CEE25DA0220AAC1 SWAP10 SWAP11 SWAP6 PUSH1 0x0 SWAP4 PUSH2 0x32B JUMPI JUMPDEST POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 SWAP5 DUP6 MSTORE DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST DUP7 ADD MLOAD SWAP3 POP DUP12 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3AB JUMPI POP SWAP2 DUP4 SWAP2 PUSH2 0x326 SWAP7 SWAP5 PUSH32 0x925B0343B9085747D26A9125C88206057343A6E2DB8D4FE70CEE25DA0220AAC1 SWAP11 SWAP12 SWAP7 SWAP5 LT PUSH2 0x392 JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x310 JUMP JUMPDEST DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 PUSH2 0x386 JUMP JUMPDEST DUP11 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0x34B JUMP JUMPDEST PUSH2 0x3EB SWAP1 DUP5 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 DUP9 DUP7 LT PUSH2 0x3F1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP8 PUSH2 0x2BE JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x3DE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x252 PUSH2 0x438 PUSH2 0x43F PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST SUB DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x44E PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x249 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x49C PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH2 0x4BA DUP2 DUP5 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x4C5 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH2 0x4DA DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0xA0 MLOAD SWAP1 PUSH2 0x4E8 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH2 0x4FD DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0x80 MLOAD SWAP1 PUSH2 0x50B SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x51C DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x527 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x538 DUP2 PUSH1 0x4 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x543 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x5 DUP5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x6 DUP9 ADD SWAP1 PUSH2 0x55E SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x569 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x580 DUP2 PUSH1 0x8 DUP12 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x58B SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x59D DUP2 PUSH1 0x9 DUP13 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x5A8 SWAP1 DUP7 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x5BA DUP2 PUSH1 0xA DUP14 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x5C5 SWAP1 DUP9 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x5D7 DUP2 PUSH1 0xB DUP15 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x5E2 SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC DUP12 ADD SLOAD SWAP10 PUSH1 0x40 MLOAD DUP1 PUSH1 0xD DUP2 SWAP15 ADD SWAP1 PUSH2 0x5FB SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x606 SWAP1 DUP14 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 SWAP15 PUSH1 0xE DUP3 SWAP2 ADD SWAP1 PUSH2 0x61B SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x625 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP14 DUP15 DUP1 PUSH2 0x638 DUP2 PUSH1 0xF DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x642 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xC0 DUP2 SWAP1 MSTORE PUSH2 0x657 DUP2 PUSH1 0x10 DUP5 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0xC0 MLOAD SWAP1 PUSH2 0x665 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 DUP2 PUSH1 0xE0 MSTORE PUSH1 0x11 ADD SWAP1 PUSH2 0x67B SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH1 0xE0 MLOAD SWAP1 PUSH2 0x689 SWAP2 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 MSTORE PUSH2 0x240 DUP1 SWAP2 MSTORE PUSH2 0x100 MLOAD ADD PUSH2 0x6A5 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x20 ADD MSTORE PUSH1 0xA0 MLOAD SWAP1 PUSH2 0x6BE SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x40 ADD MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH2 0x6D7 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x60 ADD MSTORE PUSH2 0x6EC SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0x80 ADD MSTORE PUSH2 0x701 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 ISZERO ISZERO PUSH2 0x100 MLOAD PUSH1 0xA0 ADD MSTORE PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH1 0xC0 ADD MSTORE PUSH2 0x721 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH2 0x100 MLOAD PUSH1 0xE0 ADD MSTORE PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x100 ADD MSTORE PUSH2 0x740 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x120 ADD MSTORE PUSH2 0x756 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x140 ADD MSTORE PUSH2 0x76C SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x160 ADD MSTORE PUSH2 0x782 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH2 0x100 MLOAD PUSH2 0x180 ADD MSTORE PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x1A0 ADD MSTORE PUSH2 0x7A2 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x1C0 ADD MSTORE PUSH2 0x7B8 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x1E0 ADD MSTORE PUSH2 0x7CE SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x200 ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 PUSH2 0x7E8 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST PUSH2 0x100 MLOAD DUP1 DUP3 SUB SWAP1 PUSH2 0x220 ADD MSTORE PUSH2 0x100 MLOAD SWAP1 PUSH1 0xE0 MLOAD SWAP1 PUSH2 0x807 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SUB PUSH2 0x100 MLOAD RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x83F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST DUP2 PUSH2 0x853 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP2 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE DUP2 SWAP1 SUB DUP3 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xB37 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x88B DUP2 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x899 DUP2 DUP6 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x8A4 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x8B7 DUP2 PUSH1 0x1 DUP7 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x8C2 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP2 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x8D9 DUP2 PUSH1 0x2 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x8E4 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x3 DUP7 ADD SWAP1 PUSH2 0x8FC SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x907 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x91F DUP2 PUSH1 0x4 DUP9 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x92A SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP2 PUSH1 0xA0 DUP6 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 PUSH1 0x6 DUP10 ADD SWAP1 PUSH2 0x957 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x962 SWAP1 DUP7 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC0 DUP7 ADD SWAP5 DUP6 MSTORE PUSH1 0x7 DUP8 ADD SLOAD SWAP6 PUSH1 0xE0 DUP2 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 PUSH1 0x8 DUP4 ADD SWAP1 PUSH2 0x98A SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x995 SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x100 SWAP9 DUP10 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x9 DUP5 ADD SWAP1 PUSH2 0x9B0 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x9BB SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x9D2 DUP2 PUSH1 0xA DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x9DD SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x9F4 DUP2 PUSH1 0xB DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x9FF SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA21 DUP2 PUSH1 0xD DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA2C SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA43 DUP2 PUSH1 0xE DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA4E SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA65 DUP2 PUSH1 0xF DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA70 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0xA87 DUP2 PUSH1 0x10 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xA92 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x11 DUP2 SWAP4 ADD SWAP1 PUSH2 0xAAB SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0xAB6 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x220 DUP3 ADD MSTORE MLOAD SWAP1 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD ISZERO ISZERO SWAP5 MLOAD SWAP6 MLOAD SWAP7 DUP1 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE DUP11 ADD MSTORE DUP9 ADD PUSH2 0xAE3 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP8 DUP2 SUB PUSH1 0x40 DUP10 ADD MSTORE PUSH2 0xAF4 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0xB05 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 DUP8 ADD MSTORE PUSH2 0xB16 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP6 ADD MSTORE DUP4 DUP2 SUB PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0xB2D SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH1 0xE0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155CD95C9B985B59481B9BDD08199BDD5B99 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH2 0x200 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0xB8B PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xBAA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xBCA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xBEA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC0A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC2A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP5 PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC4A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC69 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0xC89 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x124 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xCAA CALLDATASIZE PUSH2 0x124 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x164 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xCCB CALLDATASIZE PUSH2 0x164 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x184 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xCED CALLDATASIZE PUSH2 0x184 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1A4 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xD0F CALLDATASIZE PUSH2 0x1A4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1C4 CALLDATALOAD GT PUSH2 0x11A JUMPI PUSH2 0xD31 CALLDATASIZE PUSH2 0x1C4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0x1E4 CALLDATALOAD GT PUSH2 0x11A JUMPI DUP14 SWAP9 PUSH2 0xD55 CALLDATASIZE PUSH2 0x1E4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP10 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0xD65 PUSH2 0x400E JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x1FFA JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xD94 SWAP1 PUSH2 0x3F3E JUMP JUMPDEST PUSH2 0x1FA9 JUMPI DUP15 DUP13 SWAP2 DUP15 PUSH1 0x40 MLOAD DUP1 DUP3 MLOAD DUP2 DUP2 PUSH1 0x20 DUP7 ADD SWAP2 PUSH2 0xDB2 SWAP3 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDCC SWAP1 PUSH2 0x4052 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD KECCAK256 PUSH2 0xDDB PUSH2 0x400E JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ SWAP4 PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP2 PUSH2 0xDF3 DUP4 PUSH2 0x3E43 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD MSTORE PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0x80 DUP13 ADD MSTORE PUSH1 0xA0 DUP12 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 DUP2 ADD LT PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB LT OR PUSH2 0x3FB JUMPI PUSH1 0x20 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0xC0 DUP12 ADD MSTORE TIMESTAMP PUSH1 0xE0 DUP12 ADD MSTORE PUSH2 0x100 DUP11 ADD MSTORE PUSH2 0x120 DUP10 ADD MSTORE PUSH2 0x140 DUP9 ADD MSTORE PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH2 0x180 DUP8 ADD MSTORE PUSH2 0x1A0 DUP7 ADD MSTORE PUSH2 0x1C0 DUP6 ADD MSTORE PUSH2 0x1E0 DUP5 ADD MSTORE PUSH2 0x200 DUP4 ADD MSTORE PUSH2 0x220 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xEB4 DUP6 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1F77 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1F0B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1F00 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP3 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xF0E PUSH1 0x1 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1ECB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1E59 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1E4E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 DUP4 ADD SSTORE JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xF6B PUSH1 0x2 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1E19 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1DA7 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1D9C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 DUP4 ADD SSTORE JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0xFC8 PUSH1 0x3 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1D67 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1CF5 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1CEA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP4 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1025 PUSH1 0x4 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1CB5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1C43 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1C38 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 DUP4 ADD SSTORE JUMPDEST PUSH2 0x107C PUSH1 0xA0 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x5 DUP5 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x10A1 PUSH1 0x6 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1C03 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1B91 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1B86 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x6 DUP4 ADD SSTORE JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1109 PUSH1 0x8 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1B51 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1ADF JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1AD4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP4 ADD SSTORE JUMPDEST PUSH2 0x120 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1167 PUSH1 0x9 DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A9F JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1A2D JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1A22 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 DUP4 ADD SSTORE JUMPDEST PUSH2 0x140 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x11C5 PUSH1 0xA DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19ED JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x197B JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1970 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA DUP4 ADD SSTORE JUMPDEST PUSH2 0x160 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1223 PUSH1 0xB DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x193B JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x18C9 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x18BE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB DUP4 ADD SSTORE JUMPDEST PUSH2 0x180 DUP2 ADD MLOAD PUSH1 0xC DUP4 ADD SSTORE PUSH2 0x1A0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x128C PUSH1 0xD DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1889 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1817 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x180C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD DUP4 ADD SSTORE JUMPDEST PUSH2 0x1C0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x12EA PUSH1 0xE DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x17D7 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1765 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x175A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE DUP4 ADD SSTORE JUMPDEST PUSH2 0x1E0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x1348 PUSH1 0xF DUP7 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1725 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x16B3 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x16A8 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF DUP4 ADD SSTORE JUMPDEST PUSH2 0x200 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI PUSH2 0x13A4 PUSH1 0x10 DUP6 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1673 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x15FF JUMPI PUSH2 0x220 SWAP4 SWAP3 SWAP2 PUSH1 0x0 SWAP2 DUP4 PUSH2 0x15F4 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 DUP5 ADD SSTORE JUMPDEST ADD MLOAD SWAP1 DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI PUSH1 0x11 DUP3 SWAP2 ADD SWAP3 PUSH2 0x1407 DUP5 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x15C2 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x155C JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1551 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x3FB JUMPI DUP4 PUSH2 0x1538 PUSH2 0x326 SWAP3 PUSH2 0x14B0 PUSH32 0x509C70F523067009F7DB7F46DB6956D7AF8B679323680DC3821A8BAD001AC1E1 SWAP8 PUSH2 0x1491 DUP9 PUSH1 0x1 PUSH2 0x152A SWAP11 ADD PUSH1 0x3 SSTORE PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 MLOAD PUSH2 0x14C5 DUP2 DUP4 DUP6 DUP9 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP3 ADD SWAP1 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 MLOAD PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH2 0x1501 DUP2 DUP4 DUP8 DUP7 ADD PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x60 DUP8 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB PUSH1 0x20 DUP8 ADD MSTORE PUSH2 0x3E1E JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP6 PUSH2 0x3E1E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x1427 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x15AA JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x1591 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x143C JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x1584 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x156E JUMP JUMPDEST PUSH2 0x15EE SWAP1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x1410 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x13CB JUMP JUMPDEST SWAP1 PUSH1 0x10 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x165B JUMPI POP SWAP2 DUP4 SWAP2 PUSH1 0x1 SWAP4 PUSH2 0x220 SWAP7 SWAP6 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1642 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 DUP5 ADD SSTORE PUSH2 0x13E3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x1632 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1610 JUMP JUMPDEST PUSH2 0x16A2 SWAP1 PUSH1 0x10 DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x13AD JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1368 JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x170A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x16F1 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF DUP4 ADD SSTORE PUSH2 0x1380 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x16E1 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x1754 SWAP1 PUSH1 0xF DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1351 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x130A JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x17BC JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x17A3 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE DUP4 ADD SSTORE PUSH2 0x1322 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1793 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1778 JUMP JUMPDEST PUSH2 0x1806 SWAP1 PUSH1 0xE DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x12F3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x186E JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1855 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD DUP4 ADD SSTORE PUSH2 0x12C4 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1845 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x182A JUMP JUMPDEST PUSH2 0x18B8 SWAP1 PUSH1 0xD DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1295 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1243 JUMP JUMPDEST SWAP3 POP PUSH1 0xB DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1920 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1907 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB DUP4 ADD SSTORE PUSH2 0x125B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x18F7 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x18DC JUMP JUMPDEST PUSH2 0x196A SWAP1 PUSH1 0xB DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x122C JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x11E5 JUMP JUMPDEST SWAP3 POP PUSH1 0xA DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x19D2 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x19B9 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP4 ADD SSTORE PUSH2 0x11FD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x19A9 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x198E JUMP JUMPDEST PUSH2 0x1A1C SWAP1 PUSH1 0xA DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x11CE JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1187 JUMP JUMPDEST SWAP3 POP PUSH1 0x9 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1A84 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1A6B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 DUP4 ADD SSTORE PUSH2 0x119F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1A5B JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1A40 JUMP JUMPDEST PUSH2 0x1ACE SWAP1 PUSH1 0x9 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1170 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1129 JUMP JUMPDEST SWAP3 POP PUSH1 0x8 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1B36 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1B1D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP4 ADD SSTORE PUSH2 0x1141 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1B0D JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1AF2 JUMP JUMPDEST PUSH2 0x1B80 SWAP1 PUSH1 0x8 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x1112 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x10C1 JUMP JUMPDEST SWAP3 POP PUSH1 0x6 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1BE8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1BCF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x6 DUP4 ADD SSTORE PUSH2 0x10D9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1BBF JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1BA4 JUMP JUMPDEST PUSH2 0x1C32 SWAP1 PUSH1 0x6 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x10AA JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x1045 JUMP JUMPDEST SWAP3 POP PUSH1 0x4 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1C9A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1C81 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 DUP4 ADD SSTORE PUSH2 0x105D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1C71 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1C56 JUMP JUMPDEST PUSH2 0x1CE4 SWAP1 PUSH1 0x4 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x102E JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xFE8 JUMP JUMPDEST SWAP3 POP PUSH1 0x3 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1D4C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1D33 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP4 ADD SSTORE PUSH2 0x1000 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1D23 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1D08 JUMP JUMPDEST PUSH2 0x1D96 SWAP1 PUSH1 0x3 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xFD1 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xF8B JUMP JUMPDEST SWAP3 POP PUSH1 0x2 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1DFE JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1DE5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 DUP4 ADD SSTORE PUSH2 0xFA3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1DD5 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DBA JUMP JUMPDEST PUSH2 0x1E48 SWAP1 PUSH1 0x2 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xF74 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xF2E JUMP JUMPDEST SWAP3 POP PUSH1 0x1 DUP6 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1EB0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1E97 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 DUP4 ADD SSTORE PUSH2 0xF46 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1E87 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E6C JUMP JUMPDEST PUSH2 0x1EFA SWAP1 PUSH1 0x1 DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xF17 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0xED4 JUMP JUMPDEST SWAP3 POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x1F5C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1F43 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP3 SSTORE PUSH2 0xEE9 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x1F36 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1FA3 SWAP1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5573657220616C72656164792065786973747320666F72207468697320616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x2057 JUMPI JUMPDEST PUSH2 0xD72 JUMPI PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E207265676973746572206F66666963657273 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x438 PUSH2 0x207B PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x208A PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x200F JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x11A JUMPI PUSH2 0x20B1 PUSH2 0x3DE5 JUMP JUMPDEST SWAP1 PUSH2 0x2133 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 DUP2 PUSH1 0x0 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x2392 JUMPI JUMPDEST PUSH2 0x20D5 SWAP1 PUSH2 0x40F7 JUMP JUMPDEST AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x1 DUP1 SWAP5 DUP2 DUP4 MSTORE PUSH2 0x20F3 PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST DUP5 PUSH1 0x0 MSTORE DUP2 DUP4 MSTORE PUSH2 0x2182 DUP4 PUSH2 0x438 PUSH2 0x2118 PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP5 DUP3 MSTORE PUSH2 0x213A PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP9 DUP10 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST SUB DUP9 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 MLOAD SWAP2 DUP4 DUP2 DUP2 DUP5 ADD SWAP5 PUSH2 0x2152 DUP2 DUP4 DUP9 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 SWAP2 JUMPDEST PUSH2 0x22A6 JUMPI JUMPDEST POP POP PUSH2 0x2292 PUSH1 0x11 DUP5 SWAP6 PUSH32 0x89FCFA7C85BF81269953B23469028AFBDB9913B80AF31B7C931A42009FB252BD SWAP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH2 0x21E7 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0x21E0 DUP4 PUSH2 0x414D JUMP JUMPDEST DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x21F3 PUSH1 0x2 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x21FF PUSH1 0x3 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x220B PUSH1 0x4 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x221E PUSH1 0x6 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 ADD SSTORE PUSH2 0x2231 PUSH1 0x8 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x223D PUSH1 0x9 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2249 PUSH1 0xA DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2255 PUSH1 0xB DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC DUP3 ADD SSTORE PUSH2 0x2268 PUSH1 0xD DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2274 PUSH1 0xE DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x2280 PUSH1 0xF DUP3 ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x228C PUSH1 0x10 DUP3 ADD PUSH2 0x414D JUMP JUMPDEST ADD PUSH2 0x414D JUMP JUMPDEST PUSH2 0x326 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD DUP1 DUP5 LT ISZERO PUSH2 0x238B JUMPI DUP7 DUP4 PUSH2 0x22BD DUP7 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP6 SHL SHR AND EQ PUSH2 0x22F4 JUMPI POP POP PUSH1 0x0 NOT DUP3 EQ PUSH2 0x22DE JUMPI DUP6 DUP1 SWAP3 ADD SWAP2 PUSH2 0x2198 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP6 SWAP7 SWAP1 SWAP6 PUSH1 0x0 NOT SWAP4 DUP2 DUP6 ADD SWAP2 DUP3 GT PUSH2 0x22DE JUMPI PUSH2 0x1491 DUP5 PUSH2 0x2316 PUSH2 0x2323 SWAP5 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SLOAD SWAP1 DUP12 SHL SHR AND SWAP2 PUSH2 0x3EF1 JUMP JUMPDEST DUP6 SLOAD SWAP2 DUP3 ISZERO PUSH2 0x2375 JUMPI PUSH32 0x89FCFA7C85BF81269953B23469028AFBDB9913B80AF31B7C931A42009FB252BD SWAP7 PUSH2 0x2292 SWAP5 PUSH1 0x11 SWAP5 ADD SWAP2 PUSH2 0x2360 DUP4 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 DUP5 SHL SHL NOT AND SWAP1 SSTORE SSTORE SWAP6 SWAP5 POP PUSH2 0x219D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP PUSH2 0x219D JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE PUSH2 0x20D5 PUSH2 0x438 PUSH2 0x23B8 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP6 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x23C6 PUSH2 0x4031 JUMP JUMPDEST DUP7 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x20CC JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x23ED PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 CALLER DUP3 DUP5 AND EQ DUP1 ISZERO PUSH2 0x245E JUMPI JUMPDEST PUSH2 0x240F SWAP1 PUSH2 0x40F7 JUMP JUMPDEST AND SWAP1 DUP2 ISZERO PUSH2 0x2427 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x0 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x240F PUSH2 0x438 PUSH2 0x2485 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x2494 PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ SWAP1 POP PUSH2 0x2406 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24C4 PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x24DF DUP3 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x24ED DUP2 DUP5 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x24F8 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP3 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x250C DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2517 SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH2 0x2530 DUP2 PUSH1 0x2 DUP7 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x253B SWAP1 DUP4 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP2 DUP2 ADD SWAP3 DUP4 MSTORE MLOAD DUP1 PUSH2 0x2552 DUP2 PUSH1 0x3 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x255D SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2575 DUP2 PUSH1 0x4 DUP9 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2580 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0xFF AND SWAP1 PUSH1 0xA0 DUP5 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 PUSH1 0x6 DUP10 ADD SWAP1 PUSH2 0x25AD SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x25B8 SWAP1 DUP6 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC0 DUP6 ADD SWAP4 DUP5 MSTORE PUSH1 0x7 DUP8 ADD SLOAD SWAP5 PUSH1 0xE0 DUP2 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 PUSH1 0x8 DUP4 ADD SWAP1 PUSH2 0x25E0 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x25EB SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x100 SWAP9 DUP10 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x9 DUP5 ADD SWAP1 PUSH2 0x2606 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2611 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2628 DUP2 PUSH1 0xA DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2633 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x264A DUP2 PUSH1 0xB DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2655 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xC DUP2 ADD SLOAD PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2677 DUP2 PUSH1 0xD DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x2682 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x2699 DUP2 PUSH1 0xE DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x26A4 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x26BB DUP2 PUSH1 0xF DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x26C6 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x26DD DUP2 PUSH1 0x10 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x26E8 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x11 DUP2 SWAP4 ADD SWAP1 PUSH2 0x2701 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x270C SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x220 DUP3 ADD MSTORE MLOAD SWAP8 MLOAD SWAP6 MLOAD SWAP1 MLOAD SWAP2 MLOAD SWAP3 MLOAD ISZERO ISZERO SWAP4 MLOAD SWAP5 MLOAD SWAP6 PUSH1 0x40 MLOAD SWAP9 DUP9 DUP11 SWAP10 DUP11 MSTORE DUP10 ADD PUSH2 0x2738 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP9 DUP2 SUB PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0xAE3 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x276A PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x438 PUSH2 0x278F PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP2 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x279D PUSH2 0x400E JUMP JUMPDEST DUP3 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH2 0x27D5 PUSH1 0x20 SWAP2 PUSH2 0x3EF1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x280F PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x2828 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x284C PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x286B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x288A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x28AA SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x28C9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x28E8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0xE4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x2907 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH2 0x104 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x2928 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP3 PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x2949 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP5 PUSH2 0x144 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x296A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP9 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x298D PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x33D1 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x33BF JUMPI JUMPDEST ISZERO PUSH2 0x3354 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP10 MLOAD SWAP1 SWAP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 DUP12 PUSH2 0x29E8 PUSH1 0x8 DUP3 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x331F JUMPI JUMPDEST POP POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x32AD JUMPI PUSH1 0x0 SWAP3 PUSH2 0x32A2 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x8 DUP11 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2A41 PUSH1 0x9 DUP13 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x326D JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x31FB JUMPI PUSH1 0x0 SWAP3 PUSH2 0x31F0 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x9 DUP10 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2A99 PUSH1 0xA DUP12 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x31BB JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3149 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x313E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xA DUP9 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2AF1 PUSH1 0xB DUP11 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3109 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3097 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x308C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xB DUP8 ADD SSTORE JUMPDEST PUSH1 0xA4 CALLDATALOAD PUSH1 0xC DUP8 ADD SSTORE DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2B51 PUSH1 0xD DUP10 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3057 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2FE5 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2FDA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD DUP7 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2BA9 PUSH1 0xE DUP9 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2FA5 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2F33 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2F28 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE DUP6 ADD SSTORE JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2C01 PUSH1 0xF DUP8 ADD SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2EF3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2E81 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2E76 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF DUP5 ADD SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x10 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI DUP2 SWAP1 PUSH2 0x2C5A DUP5 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2E44 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2DDE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x2DD3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x11 DUP3 ADD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3FB JUMPI PUSH2 0x2CAD DUP3 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2DA1 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2D25 JUMPI SWAP1 DUP1 PUSH2 0x326 SWAP5 SWAP4 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP7 SWAP8 PUSH1 0x0 SWAP3 PUSH2 0x2D1A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP5 PUSH1 0x2 PUSH1 0x20 DUP5 ADD SWAP2 ADD PUSH2 0x3F78 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x2CE5 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP7 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x2D89 JUMPI POP SWAP7 PUSH1 0x1 SWAP3 DUP5 SWAP3 PUSH2 0x326 SWAP8 SWAP7 SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 SWAP11 LT PUSH2 0x2D70 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2CFA JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2D63 JUMP JUMPDEST DUP4 DUP4 ADD MLOAD DUP10 SSTORE PUSH1 0x1 SWAP1 SWAP9 ADD SWAP8 PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x2D38 JUMP JUMPDEST PUSH2 0x2DCD SWAP1 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP6 PUSH2 0x2CB6 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2C7A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2E2C JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x2E13 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2C8F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x2E06 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x2DF0 JUMP JUMPDEST PUSH2 0x2E70 SWAP1 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP8 PUSH2 0x2C63 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x2C21 JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP7 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2ED8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2EBF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF DUP5 ADD SSTORE PUSH2 0x2C39 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x2EAF JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH2 0x2F22 SWAP1 PUSH1 0xF DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP8 PUSH2 0x2C0A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP8 DUP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP8 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x2F8A JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2F71 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE DUP6 ADD SSTORE PUSH2 0x2BE1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x2F61 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2F46 JUMP JUMPDEST PUSH2 0x2FD4 SWAP1 PUSH1 0xE DUP10 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x2BB2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP9 DUP1 PUSH2 0x2B71 JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP9 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x303C JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3023 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD DUP7 ADD SSTORE PUSH2 0x2B89 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP9 DUP1 DUP1 PUSH2 0x3013 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2FF8 JUMP JUMPDEST PUSH2 0x3086 SWAP1 PUSH1 0xD DUP11 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x2B5A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP10 DUP1 PUSH2 0x2B11 JUMP JUMPDEST SWAP3 POP PUSH1 0xB DUP10 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x30EE JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x30D5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB DUP8 ADD SSTORE PUSH2 0x2B29 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP10 DUP1 DUP1 PUSH2 0x30C5 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x30AA JUMP JUMPDEST PUSH2 0x3138 SWAP1 PUSH1 0xB DUP12 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP11 PUSH2 0x2AFA JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x2AB9 JUMP JUMPDEST SWAP3 POP PUSH1 0xA DUP11 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x31A0 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3187 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xA DUP9 ADD SSTORE PUSH2 0x2AD1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x3177 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x315C JUMP JUMPDEST PUSH2 0x31EA SWAP1 PUSH1 0xA DUP13 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP12 PUSH2 0x2AA2 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP12 DUP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP PUSH1 0x9 DUP12 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3252 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x3239 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x9 DUP10 ADD SSTORE PUSH2 0x2A79 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP12 DUP1 DUP1 PUSH2 0x3229 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x320E JUMP JUMPDEST PUSH2 0x329C SWAP1 PUSH1 0x9 DUP14 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP13 PUSH2 0x2A4A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x2A09 JUMP JUMPDEST SWAP3 POP PUSH1 0x8 DUP13 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x3304 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x32EB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x8 DUP11 ADD SSTORE PUSH2 0x2A21 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x32DB JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x32C0 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x334D SWAP3 ADD PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x3F1 JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP12 DUP15 PUSH2 0x29F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E206F72207468652075736572207468656D73656C7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x732063616E2075706461746520636F6D70616E792064657461696C7300000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND EQ PUSH2 0x29A9 JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x438 PUSH2 0x33F5 PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x3404 PUSH2 0x4031 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x29A2 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x3 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 SWAP4 ADD DUP1 SWAP2 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP1 PUSH1 0x0 JUMPDEST DUP7 DUP3 DUP3 LT PUSH2 0x34BC JUMPI DUP7 DUP7 PUSH2 0x3473 DUP3 DUP9 SUB DUP4 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP2 DUP5 ADD SWAP1 DUP3 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP5 ADD SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x349C JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 SWAP6 POP SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x348D JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x345D JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x34FA PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0x438 PUSH2 0x351F PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP2 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x279D PUSH2 0x4031 JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH2 0x3546 PUSH2 0x3DE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x3566 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x357F SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x11A JUMPI PUSH2 0x3598 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3E9B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP4 DUP2 DUP6 MSTORE PUSH2 0x35C0 PUSH2 0x274 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x3F3E JUMP JUMPDEST PUSH1 0x0 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x3A7C JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x3A73 JUMPI JUMPDEST ISZERO PUSH2 0x3A08 JUMPI DUP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH2 0x438 PUSH2 0x35FA PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP7 DUP2 MLOAD DUP7 DUP1 DUP5 ADD SWAP2 DUP3 KECCAK256 SWAP4 DUP10 MLOAD DUP3 DUP12 ADD SWAP6 DUP2 DUP8 KECCAK256 SUB PUSH2 0x3925 JUMPI JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP8 MLOAD DUP4 DUP2 GT PUSH2 0x3FB JUMPI DUP1 PUSH2 0x363B DUP4 SLOAD PUSH2 0x3F3E JUMP JUMPDEST SWAP10 PUSH1 0x1F SWAP11 DUP12 DUP2 GT PUSH2 0x38F7 JUMPI JUMPDEST POP DUP8 SWAP1 DUP12 DUP4 GT PUSH1 0x1 EQ PUSH2 0x3894 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x3889 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH1 0x2 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD DUP6 MLOAD DUP4 DUP2 GT PUSH2 0x3FB JUMPI PUSH2 0x3692 DUP3 SLOAD PUSH2 0x3F3E JUMP JUMPDEST DUP10 DUP2 GT PUSH2 0x385B JUMPI JUMPDEST POP DUP1 DUP7 DUP11 DUP3 GT PUSH1 0x1 EQ PUSH2 0x37F9 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x37EE JUMPI JUMPDEST POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP4 SHL OR SWAP1 SSTORE JUMPDEST DUP6 PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH1 0x3 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP3 DUP1 MLOAD SWAP3 DUP4 GT PUSH2 0x3FB JUMPI PUSH2 0x36E5 DUP5 SLOAD PUSH2 0x3F3E JUMP JUMPDEST DUP9 DUP2 GT PUSH2 0x37B6 JUMPI JUMPDEST POP DUP5 SWAP8 DUP4 GT PUSH1 0x1 EQ PUSH2 0x3746 JUMPI DUP3 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP8 SWAP9 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH2 0x373B JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE PUSH2 0x326 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x3E1E JUMP JUMPDEST ADD MLOAD SWAP3 POP DUP10 DUP1 PUSH2 0x3716 JUMP JUMPDEST PUSH1 0x1F SWAP3 SWAP2 SWAP3 NOT DUP3 AND SWAP8 DUP5 PUSH1 0x0 MSTORE DUP6 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP11 DUP2 LT PUSH2 0x37A1 JUMPI POP DUP4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4197 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP10 SWAP11 LT PUSH2 0x3788 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x2292 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP8 DUP1 DUP1 PUSH2 0x377B JUMP JUMPDEST DUP2 DUP4 ADD MLOAD DUP5 SSTORE SWAP3 DUP6 ADD SWAP3 SWAP2 DUP8 ADD SWAP2 DUP8 ADD PUSH2 0x375B JUMP JUMPDEST PUSH2 0x37DF SWAP1 DUP6 PUSH1 0x0 MSTORE DUP7 PUSH1 0x0 KECCAK256 DUP11 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP10 DUP9 LT PUSH2 0x37E5 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP9 PUSH2 0x36ED JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x37D4 JUMP JUMPDEST SWAP1 POP DUP8 ADD MLOAD DUP11 PUSH2 0x36AF JUMP JUMPDEST DUP5 SWAP3 POP PUSH1 0x1F NOT DUP3 AND SWAP1 DUP5 PUSH1 0x0 MSTORE DUP9 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP11 DUP13 DUP4 DUP4 LT PUSH2 0x3846 JUMPI POP POP POP DUP4 GT PUSH2 0x382D JUMPI JUMPDEST POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x36C2 JUMP JUMPDEST DUP10 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 PUSH2 0x3821 JUMP JUMPDEST DUP5 ADD MLOAD DUP6 SSTORE DUP9 SWAP7 SWAP1 SWAP5 ADD SWAP4 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x380E JUMP JUMPDEST PUSH2 0x3883 SWAP1 DUP4 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP12 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH2 0x37E5 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP10 PUSH2 0x369A JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP11 DUP1 PUSH2 0x365C JUMP JUMPDEST SWAP1 DUP6 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH2 0x38E1 JUMPI POP POP DUP5 GT PUSH2 0x38C8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x3670 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP11 DUP1 DUP1 PUSH2 0x38BB JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP10 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH2 0x38AA JUMP JUMPDEST PUSH2 0x391F SWAP1 DUP6 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 DUP14 DUP1 DUP7 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP13 DUP8 LT PUSH2 0x37E5 JUMPI ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x409E JUMP JUMPDEST DUP12 PUSH2 0x3647 JUMP JUMPDEST PUSH2 0x39EC SWAP4 PUSH2 0x39B9 SWAP3 PUSH2 0x3958 PUSH1 0xFF DUP5 DUP8 DUP12 DUP2 SWAP8 PUSH2 0x3946 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x4052 JUMP JUMPDEST DUP13 DUP10 PUSH2 0x3997 DUP6 DUP12 PUSH1 0x40 MLOAD DUP3 DUP2 DUP9 MLOAD PUSH2 0x3971 DUP2 DUP4 DUP14 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP5 PUSH1 0xFF NOT SWAP6 DUP7 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x4 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL SWAP5 DUP6 DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x40 MLOAD DUP1 SWAP4 DUP2 SWAP3 DUP13 MLOAD SWAP3 DUP4 SWAP2 PUSH2 0x3DFB JUMP JUMPDEST DUP2 ADD PUSH1 0x2 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP2 DUP3 SLOAD AND OR SWAP1 SSTORE DUP8 DUP7 DUP2 DUP7 DUP2 DUP1 PUSH2 0x3614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E206F72207468652075736572207468656D73656C7665 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x732063616E2075706461746520757365722064657461696C7300000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP6 CALLER EQ PUSH2 0x35D4 JUMP JUMPDEST POP CALLER PUSH1 0x0 MSTORE DUP1 DUP5 MSTORE PUSH2 0x438 PUSH2 0x3A9E PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x3F78 JUMP JUMPDEST DUP5 DUP2 MLOAD SWAP2 ADD KECCAK256 PUSH2 0x3AAC PUSH2 0x4031 JUMP JUMPDEST DUP6 DUP2 MLOAD SWAP2 ADD KECCAK256 EQ PUSH2 0x35CD JUMP JUMPDEST CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x11A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3AD9 PUSH2 0x3DE5 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x3AF0 DUP3 PUSH2 0x3E43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x3AFE DUP2 DUP5 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B09 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST DUP3 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3B1C DUP2 PUSH1 0x1 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B27 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3B3D DUP2 PUSH1 0x2 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B48 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x3 DUP5 ADD SWAP1 PUSH2 0x3B60 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B6B SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3B81 DUP2 PUSH1 0x4 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3B8C SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3BB1 DUP2 PUSH1 0x6 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3BBC SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x3BDD DUP2 PUSH1 0x8 DUP6 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3BE8 SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x100 DUP2 DUP2 ADD SWAP4 DUP5 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH2 0x3C02 DUP2 PUSH1 0x9 DUP8 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C0D SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x120 SWAP2 DUP3 DUP5 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 PUSH1 0xA DUP4 ADD SWAP1 PUSH2 0x3C2B SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C36 SWAP1 DUP8 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x140 SWAP7 DUP8 SWAP7 DUP8 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0xB DUP7 ADD SWAP1 PUSH2 0x3C55 SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C60 SWAP1 DUP3 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x160 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0xC DUP5 ADD SLOAD PUSH2 0x180 DUP10 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x3C87 DUP2 PUSH1 0xD DUP10 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3C92 SWAP1 DUP5 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1A0 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x3CAC DUP2 PUSH1 0xE DUP11 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3CB7 SWAP1 DUP7 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1C0 DUP12 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x3CD1 DUP2 PUSH1 0xF DUP12 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3CDC SWAP1 DUP9 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x1E0 DUP13 ADD SWAP7 DUP8 MSTORE PUSH1 0x40 MLOAD SWAP8 DUP9 PUSH2 0x3CF6 DUP2 PUSH1 0x10 DUP5 ADD PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3D01 SWAP1 DUP11 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x200 DUP14 ADD SWAP9 DUP10 MSTORE PUSH1 0x40 MLOAD SWAP13 DUP14 DUP1 PUSH1 0x11 DUP2 SWAP5 ADD SWAP1 PUSH2 0x3D1E SWAP2 PUSH2 0x3F78 JUMP JUMPDEST SUB PUSH2 0x3D29 SWAP1 DUP4 PUSH2 0x3E7A JUMP JUMPDEST PUSH2 0x220 ADD MSTORE MLOAD SWAP9 MLOAD SWAP1 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 MLOAD SWAP5 MLOAD SWAP6 MLOAD SWAP7 MLOAD SWAP9 PUSH1 0x40 MLOAD SWAP14 DUP15 SWAP14 DUP15 MSTORE DUP14 ADD PUSH2 0x3D53 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x20 DUP15 ADD MSTORE PUSH2 0x3D64 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP12 DUP2 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x3D75 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x3D86 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP11 ADD MSTORE DUP9 DUP2 SUB PUSH1 0xA0 DUP11 ADD MSTORE PUSH2 0x3D9D SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP8 DUP2 SUB PUSH1 0xC0 DUP10 ADD MSTORE PUSH2 0x3DAE SWAP2 PUSH2 0x3E1E JUMP JUMPDEST DUP7 DUP2 SUB PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x3DBF SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 DUP6 DUP3 SUB SWAP1 DUP7 ADD MSTORE PUSH2 0x3DD0 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB SWAP1 DUP5 ADD MSTORE PUSH2 0x3DE1 SWAP2 PUSH2 0x3E1E JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x11A JUMPI JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x3E0E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3DFE JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x3E37 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x3DFB JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x240 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x3FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x3FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x3FB JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x11A JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3FB JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x3ECF PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x3E7A JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x11A JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x3F28 JUMPI PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3F6E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3F58 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3F4D JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP3 SWAP2 DUP1 SLOAD SWAP2 PUSH2 0x3F89 DUP4 PUSH2 0x3F3E JUMP JUMPDEST SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 SWAP4 DUP5 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x3FEB JUMPI POP PUSH1 0x1 EQ PUSH2 0x3FAB JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP3 DUP4 PUSH1 0x0 KECCAK256 SWAP3 DUP5 PUSH1 0x0 SWAP5 JUMPDEST DUP4 DUP7 LT PUSH2 0x3FD7 JUMPI POP POP POP POP ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x3FA5 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD DUP4 ADD MSTORE SWAP5 ADD SWAP4 DUP6 SWAP1 DUP3 ADD PUSH2 0x3FC0 JUMP JUMPDEST SWAP3 SWAP5 POP POP POP PUSH1 0x20 SWAP4 SWAP5 POP PUSH1 0xFF NOT AND DUP4 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL ADD ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x3FA5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x401B DUP3 PUSH2 0x3E5F JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x37B33334B1B2B9 PUSH1 0xC9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x403E DUP3 PUSH2 0x3E5F JUMP JUMPDEST PUSH1 0x5 DUP3 MSTORE PUSH5 0x30B236B4B7 PUSH1 0xD9 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x4059 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365726E616D6520616C726561647920657869737473000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 LT PUSH2 0x40A9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x409E JUMP JUMPDEST ISZERO PUSH2 0x40BC JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x155CD95C88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x40FE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x4157 DUP2 SLOAD PUSH2 0x3F3E JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x4161 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x4173 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x4192 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x409E JUMP JUMPDEST SSTORE SSTORE JUMP INVALID 0xD6 SGT PUSH16 0x3CAD7C60BFC24BBF1548F39F766CA8BC 0xE1 DIV 0xBF SWAP11 0xDD 0xE3 0xDE 0xB6 0x23 PUSH30 0xEC51DFA264697066735822122022F6CACF8A5D4E8D780A5AB8740111F219 0xE2 0x2A 0xC1 JUMP EQ 0xE8 0xF9 SWAP12 0xB2 DUP16 0xD0 CALLDATALOAD GASPRICE 0xE6 MSTORE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"169:15506:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;942:51;169:15506;;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;169:15506:12;;;1629:10;:19;:92;;;;169:15506;1621:138;;;:::i;:::-;169:15506;;;;;;;9426:35;169:15506;;;;;1840:73;169:15506;;;;;;:::i;:::-;1848:41;;1840:73;:::i;:::-;169:15506;;;;;;9372:44;169:15506;;;9372:31;;;;169:15506;;;;;;;;;;;;;;;9372:44;9426:35;169:15506;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;9494:54;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9494:54;;;169:15506;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9494:54;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9372:31;169:15506;;;;;;;;;;;;9372:31;169:15506;;;;:::i;:::-;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;1629:92;:10;;169:15506;;;;;1621:138;169:15506;;;;;;1668:22;169:15506;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;1652:40;169:15506;;:::i;:::-;;;;;;1696:25;1652:69;1629:92;;;;169:15506;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;-1:-1:-1;;;;;169:15506:12;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;847:37;;169:15506;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;847:37;;;169:15506;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;847:37;;169:15506;:::i;:::-;;;;;;:::i;:::-;;;;;;;847:37;;169:15506;:::i;:::-;;;;;;:::i;:::-;847:37;;;169:15506;;;;;847:37;;;;;169:15506;;;;:::i;:::-;;;;;;:::i;:::-;847:37;;;169:15506;;;;;;;847:37;;;169:15506;:::i;:::-;;;;;;:::i;:::-;;;;;;;847:37;;;169:15506;:::i;:::-;;;;;;:::i;:::-;;;;;;;847:37;;;169:15506;:::i;:::-;;;;;;:::i;:::-;;;;;;;847:37;;;169:15506;:::i;:::-;;;;;;:::i;:::-;847:37;;;169:15506;;;;847:37;;;;;169:15506;;;;:::i;:::-;;;;;;:::i;:::-;;;847:37;;;;;;;169:15506;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;847:37;;;169:15506;:::i;:::-;;;;;:::i;:::-;;;;;;;;;847:37;;;169:15506;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;847:37;;169:15506;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12312:17;169:15506;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;12357:25;;169:15506;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;12312:17;169:15506;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;12517:7;12538:9;;12561:10;;12585:9;;169:15506;;;;12637:19;;169:15506;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;:::i;:::-;;;;;;;4276:22;169:15506;;:::i;:::-;;;;;;4302:27;4276:53;4272:221;;169:15506;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;4620:25;4612:61;;;:::i;:::-;169:15506;;;;;4781:22;169:15506;;:::i;:::-;;;;;;4807:27;4781:53;169:15506;;;;;;;;;:::i;:::-;;;;4876:624;;169:15506;;4876:624;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;;;;;;;;;;;-1:-1:-1;;;;;;169:15506:12;;;;;;;;;;;;4876:624;;169:15506;5100:15;169:15506;4876:624;;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;;;;4876:624;;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;;4876:624;;169:15506;4876:624;;;169:15506;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4876:624;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:624;169:15506;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5670:49;169:15506;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;;169:15506:12;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;:::i;:::-;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;4876:624;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;4272:221;169:15506;;-1:-1:-1;;;;;169:15506:12;4353:10;:19;:92;;;;4272:221;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;4353:92;:10;;169:15506;;;;;;;;;;;4392:22;169:15506;;;;;;;:::i;:::-;;;;;;4376:40;169:15506;;:::i;:::-;;;;;;4420:25;4376:69;4353:92;;169:15506;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1629:10;:19;:92;;;;169:15506;1621:138;;;:::i;:::-;169:15506;;;;;;;;;;;1840:73;169:15506;;;;;;:::i;1840:73::-;169:15506;;;;;;;;;;9782:29;169:15506;;;9782:29;169:15506;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;9782:29;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;10057:319;169:15506;;;10057:319;169:15506;;;;;;10473:30;169:15506;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;9782:29;169:15506;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;10100:3::-;169:15506;;;10074:24;;;;;;10123:16;;;;;:::i;:::-;169:15506;;;;;;;10123:33;10119:247;;-1:-1:-1;;;;169:15506:12;;;;;;;;10062:10;;;169:15506;;;;;;;;;;;;10119:247;169:15506;;;;-1:-1:-1;;169:15506:12;;;;;;;;;10233:16;10252:39;;10233:58;10252:39;;:::i;:::-;169:15506;;;;;;;10233:16;;:::i;:58::-;169:15506;;;;;;;10473:30;169:15506;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;10346:5;;;;;169:15506;;;;;;;;;;;;10074:24;;;;;1629:92;:10;;169:15506;;;;;1621:138;169:15506;;;;;;1668:22;169:15506;;;;;;;:::i;:::-;;;;;;1652:40;169:15506;;:::i;:::-;;;;;;1696:25;1652:69;1629:92;;;;169:15506;;;;;;-1:-1:-1;;169:15506:12;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;1629:10;169:15506;;;1629:19;:92;;;;169:15506;1621:138;;;:::i;:::-;169:15506;15598:22;;;169:15506;;-1:-1:-1;;;;;;169:15506:12;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;1629:92;:10;;169:15506;;;;;1621:138;169:15506;;;;;;1668:22;169:15506;;;;;;;:::i;:::-;;;;;;1652:40;169:15506;;:::i;:::-;;;;;;1696:25;1652:69;1629:92;;;;169:15506;;;;;;-1:-1:-1;;169:15506:12;;;;-1:-1:-1;;;;;169:15506:12;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;11329:7;11350:9;;11373:13;;11400:10;;11424:9;;169:15506;;;;11476:19;;169:15506;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;169:15506:12;;;;-1:-1:-1;;;;;169:15506:12;;:::i;:::-;;;;;;;;;;;;;;14923:25;169:15506;;;;;;;:::i;:::-;;;;;;14907:43;169:15506;;:::i;:::-;;;;;;14954:27;14907:74;169:15506;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;1061:30;;;;;;169:15506;1061:30;;:::i;:::-;169:15506;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;-1:-1:-1;;;;;169:15506:12;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;14260:41;;169:15506;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1840:73;169:15506;;;;;;:::i;1840:73::-;169:15506;;-1:-1:-1;;;;;169:15506:12;8255:10;:19;:92;;;;169:15506;8255:123;;;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;8538:16;;;169:15506;8538:16;;;169:15506;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8538:16;;;169:15506;;;;;-1:-1:-1;;;;;169:15506:12;;;;8578:23;;169:15506;8578:23;;;169:15506;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8578:23;;;169:15506;;;;;-1:-1:-1;;;;;169:15506:12;;;;8632:14;;169:15506;8632:14;;;169:15506;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8632:14;;;169:15506;;;;;-1:-1:-1;;;;;169:15506:12;;;;8668:14;;169:15506;8668:14;;;169:15506;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8668:14;;;169:15506;;;;8704:22;;;169:15506;;;;-1:-1:-1;;;;;169:15506:12;;;;8756:22;;169:15506;8756:22;;;169:15506;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8756:22;;;169:15506;;;;;-1:-1:-1;;;;;169:15506:12;;;;8808:10;;169:15506;8808:10;;;169:15506;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8808:10;;;169:15506;;;;;-1:-1:-1;;;;;169:15506:12;;;;8836:9;;169:15506;8836:9;;;169:15506;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8836:9;;;169:15506;;;;8862:12;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8894:15;;;169:15506;;-1:-1:-1;;;;;169:15506:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8973:13;169:15506;;;8973:13;;169:15506;:::i;:::-;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;8836:9;;;;;169:15506;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;8836:9;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8836:9;;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;8808:10;;;;;169:15506;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;8808:10;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8808:10;;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;8756:22;;;;;169:15506;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;8756:22;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8756:22;;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;8668:14;;;;;169:15506;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;8668:14;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8668:14;;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;8632:14;;;;;169:15506;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;8632:14;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8632:14;;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;8578:23;;;;;169:15506;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;8578:23;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8578:23;;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;8538:16;;;;;169:15506;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;8538:16;;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8538:16;169:15506;8538:16;;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;8255:123;-1:-1:-1;8255:10:12;-1:-1:-1;;;;;169:15506:12;;8351:27;8255:123;;:92;:10;;169:15506;;;;;;;;;;;8294:22;169:15506;;;;;;;:::i;:::-;;;;;;8278:40;169:15506;;:::i;:::-;;;;;;8322:25;8278:69;8255:92;;169:15506;;;;;;-1:-1:-1;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;-1:-1:-1;;;;;169:15506:12;;:::i;:::-;;;;;;;;;;;;;;14581:25;169:15506;;;;;;;:::i;:::-;;;;;;14565:43;169:15506;;:::i;:::-;;;;;;-1:-1:-1;;169:15506:12;;;;;;:::i;:::-;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1840:73;169:15506;;;;;;:::i;1840:73::-;169:15506;;;6213:10;:19;:92;;;;169:15506;6213:123;;;;169:15506;;;;;;;;;;;;6466:29;169:15506;;;6466:29;169:15506;;;;;;;:::i;:::-;;;;;;;;6588:33;;;169:15506;;;;;;6625:26;;;;6588:63;6584:417;;169:15506;;;;;;;;;;;;;;;;7019:25;169:15506;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;6466:29;169:15506;;;7061:29;169:15506;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;7111:26;169:15506;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;6584:417;169:15506;;;;6667:61;169:15506;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;6675:25;6667:61;:::i;:::-;169:15506;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6466:29;169:15506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6466:29;169:15506;;;;;;;;;;;;;6584:417;;;;;;;;169:15506;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;6213:123;:10;;;6309:27;6213:123;;:92;:10;;169:15506;;;;;;;;;;;6252:22;169:15506;;;;;;;:::i;:::-;;;;;;6236:40;169:15506;;:::i;:::-;;;;;;6280:25;6236:69;6213:92;;169:15506;;;;;;-1:-1:-1;;169:15506:12;;;;-1:-1:-1;;;;;169:15506:12;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;13708:16;13738:23;;13775:14;;13803;;169:15506;;13867:22;;13903:10;;13927:9;;13950:12;;169:15506;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;169:15506:12;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;169:15506:12;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;169:15506:12;;;;;;;;;;;-1:-1:-1;;169:15506:12;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;:::o;:::-;1061:30;169:15506;;;;;;1061:30;-1:-1:-1;169:15506:12;;;;-1:-1:-1;169:15506:12;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;169:15506:12;;;;-1:-1:-1;169:15506:12;;;-1:-1:-1;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;:::o;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;;169:15506:12;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;;;;;;-1:-1:-1;;;169:15506:12;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o"},"methodIdentifiers":{"admin()":"f851a440","getAllUserAddresses()":"2f330023","getCompanyDetails(address)":"0558d3e9","getUserByAddress(address)":"69c212f6","getUserByUsername(string)":"9f42af63","getUserCount()":"b5cb15f7","isAdmin(address)":"24d7806c","isOfficer(address)":"6816442d","isUser(address)":"4209fff1","registerUser(address,string,string,string,string,string,string,string,string,string,uint256,string,string,string,string,string)":"9d4d1342","removeUser(address)":"98575188","setUserApproval(address,bool,string)":"b979cc2f","transferAdmin(address)":"75829def","updateCompanyDetails(address,string,string,string,string,uint256,string,string,string,string,string)":"37a1bba2","updateUser(address,string,string,string)":"0da4578b","userAddresses(uint256)":"502c9bd5","usernameExists(string)":"f309e3f9","usernameToAddress(string)":"f825f143","users(address)":"a87430ba"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"}],\"name\":\"UserApprovalChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"}],\"name\":\"UserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"UserUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUserAddresses\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getCompanyDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gstNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"panNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"establishmentYear\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registeredAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pinCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bidderType\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"getUserByAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"approvalRemark\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"}],\"name\":\"getUserByUsername\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"approvalRemark\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"isOfficer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"isUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gstNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"panNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"establishmentYear\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registeredAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pinCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bidderType\",\"type\":\"string\"}],\"name\":\"registerUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"removeUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"remark\",\"type\":\"string\"}],\"name\":\"setUserApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gstNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"panNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"establishmentYear\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registeredAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pinCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bidderType\",\"type\":\"string\"}],\"name\":\"updateCompanyDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"updateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"usernameExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"usernameToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"username\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"role\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"approvalRemark\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"companyName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"registrationNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"gstNumber\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"panNumber\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"establishmentYear\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"registeredAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"city\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"pinCode\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"bidderType\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for managing user authentication in the TrustChain system\",\"kind\":\"dev\",\"methods\":{\"getAllUserAddresses()\":{\"details\":\"Get all user addresses\",\"returns\":{\"_0\":\"Array of all user addresses\"}},\"getCompanyDetails(address)\":{\"details\":\"Get user company details\",\"params\":{\"walletAddress\":\"The user's wallet address\"},\"returns\":{\"bidderType\":\"Bidder type\",\"city\":\"City\",\"companyName\":\"Company name\",\"establishmentYear\":\"Establishment year\",\"gstNumber\":\"GST number\",\"panNumber\":\"PAN number\",\"pinCode\":\"Pin code\",\"registeredAddress\":\"Registered address\",\"registrationNumber\":\"Registration number\",\"state\":\"State\"}},\"getUserByAddress(address)\":{\"details\":\"Get user details by wallet address\",\"params\":{\"walletAddress\":\"The user's wallet address\"},\"returns\":{\"approvalRemark\":\"User approval remark\",\"createdAt\":\"User creation timestamp\",\"email\":\"User email\",\"id\":\"User ID\",\"isApproved\":\"User approval status\",\"name\":\"User name\",\"role\":\"User role\",\"username\":\"User username\"}},\"getUserByUsername(string)\":{\"details\":\"Get user details by username\",\"params\":{\"username\":\"The username to look up\"},\"returns\":{\"approvalRemark\":\"User approval remark\",\"createdAt\":\"User creation timestamp\",\"email\":\"User email\",\"id\":\"User ID\",\"isApproved\":\"User approval status\",\"name\":\"User name\",\"role\":\"User role\",\"walletAddress\":\"User's wallet address\"}},\"getUserCount()\":{\"details\":\"Get the total number of users\",\"returns\":{\"_0\":\"The number of users\"}},\"isAdmin(address)\":{\"details\":\"Check if an address is an admin\",\"params\":{\"walletAddress\":\"The wallet address to check\"},\"returns\":{\"_0\":\"true if the address is an admin\"}},\"isOfficer(address)\":{\"details\":\"Check if an address is an officer\",\"params\":{\"walletAddress\":\"The wallet address to check\"},\"returns\":{\"_0\":\"true if the address is an officer\"}},\"isUser(address)\":{\"details\":\"Check if an address is a user\",\"params\":{\"walletAddress\":\"The wallet address to check\"},\"returns\":{\"_0\":\"true if the address is a user\"}},\"registerUser(address,string,string,string,string,string,string,string,string,string,uint256,string,string,string,string,string)\":{\"details\":\"Register a new user\",\"params\":{\"bidderType\":\"Bidder type\",\"city\":\"City\",\"companyName\":\"Company name\",\"email\":\"User's email\",\"establishmentYear\":\"Establishment year\",\"gstNumber\":\"GST number\",\"id\":\"Unique identifier for the user\",\"name\":\"User's name\",\"panNumber\":\"PAN number\",\"pinCode\":\"Pin code\",\"registeredAddress\":\"Registered address\",\"registrationNumber\":\"Company registration number\",\"role\":\"User's role\",\"state\":\"State\",\"username\":\"User's username\",\"walletAddress\":\"The user's wallet address\"}},\"removeUser(address)\":{\"details\":\"Remove a user\",\"params\":{\"walletAddress\":\"The user's wallet address\"}},\"setUserApproval(address,bool,string)\":{\"details\":\"Approve or reject a user\",\"params\":{\"isApproved\":\"Approval status\",\"remark\":\"Approval or rejection remark\",\"walletAddress\":\"The user's wallet address\"}},\"transferAdmin(address)\":{\"details\":\"Transfer admin rights to a new address\",\"params\":{\"newAdmin\":\"The new admin address\"}},\"updateCompanyDetails(address,string,string,string,string,uint256,string,string,string,string,string)\":{\"details\":\"Update a user's company details\",\"params\":{\"bidderType\":\"Bidder type\",\"city\":\"City\",\"companyName\":\"Company name\",\"establishmentYear\":\"Establishment year\",\"gstNumber\":\"GST number\",\"panNumber\":\"PAN number\",\"pinCode\":\"Pin code\",\"registeredAddress\":\"Registered address\",\"registrationNumber\":\"Company registration number\",\"state\":\"State\",\"walletAddress\":\"The user's wallet address\"}},\"updateUser(address,string,string,string)\":{\"details\":\"Update an existing user's details\",\"params\":{\"email\":\"New email\",\"name\":\"New name\",\"username\":\"New username\",\"walletAddress\":\"The user's wallet address\"}}},\"title\":\"UserAuthentication\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/UserAuthentication.sol\":\"UserAuthentication\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"src/contracts/UserAuthentication.sol\":{\"keccak256\":\"0x24a776800f011edf3a99f9da40a3119c4f89fd19f8a399b387d45358f7ed6094\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615e007914098b18042d77ce967a6b7f1f1496f0b43af5d7d605c92f4e88c0db\",\"dweb:/ipfs/QmVbL4opf8qppmsUTbJWDXXJcDiuJMxMLoDgzLzX5G72fg\"]}},\"version\":1}"}}}}}